{
    "tokens": [
        "of",
        "this",
        "counter",
        "##ex",
        "##amp",
        "##le",
        "suggested",
        "by",
        "t",
        ".",
        "h",
        "##yt",
        "##\u00a8",
        "##one",
        "##n",
        "that",
        "has",
        "this",
        "property",
        "as",
        "well",
        ".",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]"
    ],
    "token_embeddings": [
        [
            0.04069193825125694,
            0.053540945053100586,
            -0.1949159801006317,
            -0.5976282954216003,
            0.10016068816184998,
            -0.5946592092514038,
            0.015851275995373726,
            0.44631749391555786,
            -0.24298295378684998,
            -0.1067415252327919,
            0.000318479782436043,
            -0.5928698182106018,
            -0.8612263202667236,
            -0.35724467039108276,
            -0.006537036970257759,
            0.2091037482023239,
            -0.8768277764320374,
            -0.46527913212776184,
            0.1685856431722641,
            -1.2882134914398193,
            -0.1488705277442932,
            0.30215901136398315,
            1.1763194799423218,
            0.04509929195046425,
            -0.6612574458122253,
            -0.48324644565582275,
            0.10519988089799881,
            -0.5882543325424194,
            0.2596633732318878,
            0.014385019429028034,
            0.6894902586936951,
            -0.0751633420586586,
            0.9813111424446106,
            0.5628722310066223,
            -0.1262870579957962,
            -0.18041399121284485,
            -0.11724045127630234,
            0.2424754649400711,
            0.2576230466365814,
            0.08498410135507584,
            0.6374650597572327,
            -1.0668097734451294,
            0.39996272325515747,
            0.3530961275100708,
            0.11354158818721771,
            -0.037696611136198044,
            0.09789419174194336,
            -0.5823431611061096,
            -0.05352742224931717,
            0.5935940146446228,
            0.19063960015773773,
            0.8229284882545471,
            0.442608118057251,
            0.3219957947731018,
            -0.3108964264392853,
            0.5552957057952881,
            0.7530520558357239,
            -0.460229754447937,
            0.3612450361251831,
            -0.1116270050406456,
            0.27122291922569275,
            0.32310792803764343,
            -0.9208754897117615,
            0.14259202778339386,
            0.09059768170118332,
            0.0891251191496849,
            0.43410196900367737,
            0.6030915975570679,
            -0.4290928542613983,
            0.7897034883499146,
            -1.0865827798843384,
            -0.9661800265312195,
            0.1618199199438095,
            0.437495619058609,
            0.08274652063846588,
            -0.03926015645265579,
            -0.2774733901023865,
            -0.06749425828456879,
            0.07516875863075256,
            0.4851461946964264,
            -0.0841202512383461,
            0.14813442528247833,
            -0.71619713306427,
            0.5806114077568054,
            0.36743786931037903,
            0.17880867421627045,
            -0.18818888068199158,
            0.6341564059257507,
            0.07042913883924484,
            -0.26894310116767883,
            0.06414046883583069,
            -0.24531041085720062,
            -0.49458515644073486,
            -0.3802226781845093,
            0.10080154240131378,
            0.37307292222976685,
            0.07452336698770523,
            -0.40134966373443604,
            -0.4510239064693451,
            0.23231348395347595
        ],
        [
            0.014766694977879524,
            0.13721804320812225,
            -0.08370594680309296,
            -0.4315338730812073,
            0.11065687984228134,
            -0.4771304130554199,
            0.16833601891994476,
            0.5589806437492371,
            -0.3081168234348297,
            -0.05353330448269844,
            -0.11425057798624039,
            -0.742123544216156,
            -0.5605173110961914,
            -0.2589744031429291,
            0.028998268768191338,
            0.016601724550127983,
            -0.4652499556541443,
            -0.3797394931316376,
            0.08905886113643646,
            -1.4383331537246704,
            -0.048914726823568344,
            0.4383763074874878,
            1.0526432991027832,
            0.08611759543418884,
            -0.5285044312477112,
            -0.4099745750427246,
            -0.14474397897720337,
            -0.5351186990737915,
            0.04670430347323418,
            -0.06147371977567673,
            0.5721022486686707,
            -0.031238039955496788,
            0.8494989275932312,
            0.190357506275177,
            -0.2484428435564041,
            0.043934255838394165,
            -0.023987019434571266,
            0.029568970203399658,
            0.0029819912742823362,
            -0.08362073451280594,
            0.47327283024787903,
            -0.8343713879585266,
            0.25763368606567383,
            0.2235109508037567,
            0.07743903994560242,
            -0.03483011946082115,
            -0.025562036782503128,
            -0.6244958639144897,
            0.04145284742116928,
            0.5341702103614807,
            0.08347182720899582,
            0.35444340109825134,
            0.25550198554992676,
            0.09875504672527313,
            -0.17703761160373688,
            0.4718944728374481,
            0.6960745453834534,
            -0.39812782406806946,
            0.19872429966926575,
            -0.001548720640130341,
            0.1404922902584076,
            0.09194257110357285,
            -0.7768442630767822,
            0.2607232630252838,
            -0.08185188472270966,
            0.1923254132270813,
            0.26441338658332825,
            0.611953616142273,
            -0.6235937476158142,
            0.8341358304023743,
            -0.9056036472320557,
            -0.6145933270454407,
            0.20372693240642548,
            0.2691149413585663,
            0.21656349301338196,
            -0.0435953214764595,
            -0.07655804604291916,
            -0.11269206553697586,
            -0.07603858411312103,
            0.3511372208595276,
            -0.10646248608827591,
            0.09930732846260071,
            -0.7726961374282837,
            0.6187208294868469,
            0.14277534186840057,
            0.10539344698190689,
            -0.0019111897563561797,
            0.6266101002693176,
            0.15874673426151276,
            -0.19783370196819305,
            0.32223257422447205,
            -0.21165156364440918,
            -0.4412986636161804,
            -0.324049174785614,
            0.18981002271175385,
            0.2847549319267273,
            0.14521262049674988,
            -0.37664222717285156,
            -0.1880909949541092,
            0.17601893842220306
        ],
        [
            0.024889854714274406,
            0.038560543209314346,
            -0.03617570549249649,
            -0.07791736721992493,
            0.049405962228775024,
            -0.08369385451078415,
            0.01632898673415184,
            0.10524754971265793,
            -0.05004351958632469,
            -0.01942431926727295,
            -0.0044500743970274925,
            -0.10807618498802185,
            -0.10237807780504227,
            -0.021837323904037476,
            0.0237553883343935,
            0.00044415175216272473,
            -0.053978510200977325,
            -0.03829960525035858,
            0.02082786336541176,
            -0.2265390157699585,
            0.002505222335457802,
            0.051777277141809464,
            0.13506093621253967,
            -0.005060208961367607,
            -0.08648592233657837,
            -0.038751181215047836,
            0.010361886583268642,
            -0.08463667333126068,
            0.021139901131391525,
            -0.010794066824018955,
            0.08021281659603119,
            -0.00028528441907837987,
            0.12585242092609406,
            -0.0015095925191417336,
            -0.0368257537484169,
            0.025316951796412468,
            -0.00295622437261045,
            0.016097521409392357,
            0.024525728076696396,
            -0.025556884706020355,
            0.07685499638319016,
            -0.10834594815969467,
            0.06445284187793732,
            0.0186479315161705,
            0.029499243944883347,
            0.01695048250257969,
            -0.0070941029116511345,
            -0.08152751624584198,
            0.014299307018518448,
            0.06847157329320908,
            0.0022664775606244802,
            0.05542178824543953,
            0.05909636616706848,
            0.0070252809673547745,
            -0.0164226945489645,
            0.05700885131955147,
            0.09146612882614136,
            -0.031487442553043365,
            0.024746006354689598,
            -0.006609139032661915,
            0.05715709924697876,
            0.046538107097148895,
            -0.09333951026201248,
            0.045731253921985626,
            -0.006658348720520735,
            0.04486709460616112,
            0.04966346547007561,
            0.1094723492860794,
            -0.0829208567738533,
            0.11404775828123093,
            -0.1291232854127884,
            -0.08913911134004593,
            0.018618786707520485,
            0.05575041472911835,
            0.05804614722728729,
            -0.022704994305968285,
            -0.023415343835949898,
            0.018461335450410843,
            -0.008663058280944824,
            0.05948217585682869,
            0.003983005415648222,
            0.01644265279173851,
            -0.1483890563249588,
            0.09619712829589844,
            0.029757197946310043,
            0.020515089854598045,
            0.026999471709132195,
            0.09195681661367416,
            0.05776284262537956,
            -0.04517490789294243,
            0.0227874256670475,
            -0.012224777601659298,
            -0.051952656358480453,
            -0.028953606262803078,
            0.028665348887443542,
            0.07556980848312378,
            0.004432537127286196,
            -0.07823707908391953,
            -0.012726148590445518,
            0.0009014827664941549
        ],
        [
            0.04488000646233559,
            0.11818647384643555,
            -0.061221491545438766,
            -0.15380404889583588,
            0.12894487380981445,
            -0.16705188155174255,
            0.01827308163046837,
            0.23273195326328278,
            -0.10513167828321457,
            -0.052741799503564835,
            -0.025363579392433167,
            -0.2530762553215027,
            -0.20934800803661346,
            -0.034471336752176285,
            0.06581490486860275,
            0.025934886187314987,
            -0.1136775016784668,
            -0.0966695174574852,
            0.02648244798183441,
            -0.47019127011299133,
            -0.007478366605937481,
            0.0758887305855751,
            0.24405884742736816,
            0.00415763771161437,
            -0.1923564225435257,
            -0.07405985891819,
            0.00898838508874178,
            -0.2041366994380951,
            0.045161712914705276,
            -0.01921062171459198,
            0.1647767722606659,
            0.024387527257204056,
            0.2428523749113083,
            -0.011766297742724419,
            -0.06304328143596649,
            0.06261073052883148,
            0.0007941906806081533,
            0.03854012489318848,
            0.05643196776509285,
            -0.052681904286146164,
            0.16809645295143127,
            -0.23063309490680695,
            0.138685405254364,
            0.05039607733488083,
            0.10108716040849686,
            0.0318225659430027,
            -0.040795184671878815,
            -0.1557164490222931,
            0.043511051684617996,
            0.13687801361083984,
            -0.013977345079183578,
            0.11577108502388,
            0.12289950251579285,
            -0.018612030893564224,
            -0.05213465541601181,
            0.14024007320404053,
            0.19465477764606476,
            -0.05911088362336159,
            0.06353631615638733,
            -0.03852439299225807,
            0.127803772687912,
            0.10477294772863388,
            -0.1550111621618271,
            0.06743745505809784,
            -0.02336050197482109,
            0.06907882541418076,
            0.11110954731702805,
            0.2682570517063141,
            -0.1955619901418686,
            0.23584988713264465,
            -0.2408696562051773,
            -0.18712984025478363,
            0.051987167447805405,
            0.12252392619848251,
            0.15871165692806244,
            -0.04070030152797699,
            -0.039422281086444855,
            0.020478468388319016,
            -0.004072361625730991,
            0.10988951474428177,
            0.0060048773884773254,
            0.01365053653717041,
            -0.318119615316391,
            0.17843008041381836,
            0.07667934894561768,
            0.038219403475522995,
            0.08583876490592957,
            0.1875537633895874,
            0.13854171335697174,
            -0.09166975319385529,
            0.08035414665937424,
            -0.027104318141937256,
            -0.09214738756418228,
            -0.04862150177359581,
            0.0674925372004509,
            0.1512882262468338,
            0.024184448644518852,
            -0.16026702523231506,
            -0.01698770560324192,
            0.005040053743869066
        ],
        [
            0.03281714394688606,
            0.04500193893909454,
            -0.041118282824754715,
            -0.09041579067707062,
            0.060312192887067795,
            -0.08457382768392563,
            0.007439000066369772,
            0.1186535656452179,
            -0.05392385646700859,
            -0.024856360629200935,
            -0.010568966157734394,
            -0.12360532581806183,
            -0.12743380665779114,
            -0.02284144051373005,
            0.04038746654987335,
            0.018934788182377815,
            -0.07562827318906784,
            -0.05842338129878044,
            0.01927165873348713,
            -0.258789598941803,
            -0.0060142832808196545,
            0.046609360724687576,
            0.14923973381519318,
            -0.0033723157830536366,
            -0.10798443108797073,
            -0.051027677953243256,
            0.019268635660409927,
            -0.11594569683074951,
            0.028826849535107613,
            0.002269905060529709,
            0.08555194735527039,
            0.012259540148079395,
            0.13374456763267517,
            0.009847485460340977,
            -0.03834248706698418,
            0.019925469532608986,
            -0.0014670571545138955,
            0.0356941819190979,
            0.04202969744801521,
            -0.02150428667664528,
            0.09254986047744751,
            -0.12845782935619354,
            0.07066549360752106,
            0.04205578565597534,
            0.05167335644364357,
            0.004702095407992601,
            -0.02490035630762577,
            -0.08270865678787231,
            0.0220952071249485,
            0.07376221567392349,
            0.0012656102189794183,
            0.06975894421339035,
            0.05690400302410126,
            -0.0020081973634660244,
            -0.026930149644613266,
            0.08119679242372513,
            0.09917716681957245,
            -0.028171421959996223,
            0.04137451946735382,
            -0.017634952440857887,
            0.07115000486373901,
            0.05556170642375946,
            -0.09825650602579117,
            0.0355130210518837,
            -0.0009036749834194779,
            0.048583805561065674,
            0.06455300748348236,
            0.13744769990444183,
            -0.10110456496477127,
            0.14152826368808746,
            -0.13807359337806702,
            -0.10392478108406067,
            0.013820161111652851,
            0.0633554458618164,
            0.06434527039527893,
            -0.028306610882282257,
            -0.015131570398807526,
            0.007434176746755838,
            0.0031003360636532307,
            0.06310421228408813,
            0.006439232267439365,
            0.005438605323433876,
            -0.1683940887451172,
            0.10514722764492035,
            0.03933556377887726,
            0.010990142822265625,
            0.031116630882024765,
            0.10574349015951157,
            0.068802610039711,
            -0.043236956000328064,
            0.03284701332449913,
            -0.027738485485315323,
            -0.05505133047699928,
            -0.0343373604118824,
            0.027554094791412354,
            0.08170371502637863,
            0.020172908902168274,
            -0.07270986586809158,
            -0.020667122676968575,
            0.014019180089235306
        ],
        [
            0.03412714600563049,
            0.04897475987672806,
            -0.0435989610850811,
            -0.0848713293671608,
            0.054399654269218445,
            -0.0804346352815628,
            0.015739090740680695,
            0.1105826273560524,
            -0.04565982148051262,
            -0.03702305257320404,
            0.0027327979914844036,
            -0.11934206634759903,
            -0.10514863580465317,
            -0.026805298402905464,
            0.02677210420370102,
            0.01514207199215889,
            -0.07132826745510101,
            -0.055166084319353104,
            0.021360566839575768,
            -0.24063697457313538,
            -0.0010204215068370104,
            0.03873284161090851,
            0.13887639343738556,
            -0.010534907691180706,
            -0.09453171491622925,
            -0.03787996992468834,
            0.007080136798322201,
            -0.0884145200252533,
            0.03558342158794403,
            0.002388379303738475,
            0.07554535567760468,
            0.0098455511033535,
            0.1305842399597168,
            0.01208461169153452,
            -0.03626175969839096,
            0.020003581419587135,
            -0.00037675490602850914,
            0.020611070096492767,
            0.03489692881703377,
            -0.012013047933578491,
            0.08550336956977844,
            -0.12498805671930313,
            0.06494800746440887,
            0.023171743378043175,
            0.03658473864197731,
            0.010522768832743168,
            -0.005415741354227066,
            -0.0746595561504364,
            0.0028474286664277315,
            0.07574587315320969,
            -0.011101492680609226,
            0.07998836040496826,
            0.060895565897226334,
            0.008002378046512604,
            -0.03172999620437622,
            0.07015589624643326,
            0.10398770123720169,
            -0.0324205681681633,
            0.028932679444551468,
            -0.01724204234778881,
            0.056258756667375565,
            0.053499747067689896,
            -0.10063516348600388,
            0.043146904557943344,
            0.0017576389946043491,
            0.03908807411789894,
            0.053420502692461014,
            0.13074560463428497,
            -0.08405067771673203,
            0.1281832605600357,
            -0.14673028886318207,
            -0.11626345664262772,
            0.031728409230709076,
            0.06338563561439514,
            0.06814751029014587,
            -0.019757285714149475,
            -0.029028793796896935,
            0.01439809799194336,
            -0.005705812014639378,
            0.06245454400777817,
            0.005694031249731779,
            0.011172957718372345,
            -0.16187623143196106,
            0.10242727398872375,
            0.03713543340563774,
            0.008521659299731255,
            0.038858138024806976,
            0.09676633775234222,
            0.05583322048187256,
            -0.04300648346543312,
            0.023135021328926086,
            -0.030060354620218277,
            -0.051756180822849274,
            -0.02767394669353962,
            0.036616913974285126,
            0.08096320182085037,
            0.015088713727891445,
            -0.07272522896528244,
            -0.022451845929026604,
            0.010628371499478817
        ],
        [
            0.01166931726038456,
            0.013954577967524529,
            -0.0030413074418902397,
            -0.012440026737749577,
            0.010717224329710007,
            -0.01499866507947445,
            -0.003903062781319022,
            0.03162141889333725,
            -0.008116613142192364,
            0.0019520437344908714,
            -0.008246372453868389,
            -0.027141042053699493,
            -0.020957687869668007,
            -0.0008966360474005342,
            0.001854611560702324,
            -0.005299121141433716,
            -0.00647114310413599,
            -0.015522513538599014,
            0.008105170913040638,
            -0.05729963257908821,
            -0.009281029924750328,
            0.004004244692623615,
            0.02391955256462097,
            0.007494939025491476,
            -0.018397409468889236,
            -0.016606269404292107,
            -0.0020264298655092716,
            -0.01624159887433052,
            0.005989080294966698,
            -0.008978798985481262,
            0.020852267742156982,
            -0.002514427527785301,
            0.02976980246603489,
            -0.012012136168777943,
            -0.009580516256392002,
            0.008449237793684006,
            -0.00616453168913722,
            -0.004836957436054945,
            -0.003207729198038578,
            0.001225386862643063,
            0.021367551758885384,
            -0.012377318926155567,
            0.007238033227622509,
            0.00067080685403198,
            0.013230816461145878,
            0.005661827512085438,
            -0.014184318482875824,
            -0.01145188044756651,
            -0.0028580038342624903,
            0.01856553740799427,
            -0.007572473492473364,
            0.00680673960596323,
            0.012276405468583107,
            -0.00163884402718395,
            -0.008244681172072887,
            0.016473442316055298,
            0.012645426206290722,
            -0.009664639830589294,
            0.0049663870595395565,
            0.004191348794847727,
            0.009788628667593002,
            0.014931963756680489,
            -0.00358691462315619,
            0.01676010526716709,
            -0.00852876715362072,
            0.011289956979453564,
            0.009368871338665485,
            0.032942090183496475,
            -0.01764725148677826,
            0.030688857659697533,
            -0.01556311920285225,
            -0.018371475860476494,
            -0.0051640914753079414,
            0.012700635008513927,
            0.012128823436796665,
            -0.0010640573455020785,
            0.002592682372778654,
            -0.0014612448867410421,
            0.0014711380936205387,
            0.006738454103469849,
            0.0032492061145603657,
            0.004432023502886295,
            -0.029672672972083092,
            0.020915720611810684,
            0.005365700460970402,
            0.002837667241692543,
            0.020746897906064987,
            0.014091349206864834,
            0.013731581158936024,
            -0.018224917352199554,
            0.010591399855911732,
            -0.009449230507016182,
            0.00010969240247504786,
            -0.0082677798345685,
            0.006836493965238333,
            0.007612399756908417,
            0.008395309560000896,
            -0.008246229961514473,
            0.010308878496289253,
            0.002523645292967558
        ],
        [
            -0.03140999749302864,
            0.28422805666923523,
            -0.21117237210273743,
            -0.2885252833366394,
            0.1631486415863037,
            -0.4278008043766022,
            0.43208009004592896,
            0.8233326077461243,
            -0.4934540390968323,
            -0.012953994795680046,
            -0.24612869322299957,
            -1.0533702373504639,
            -0.4280276596546173,
            -0.18978682160377502,
            0.06961347162723541,
            -0.25794991850852966,
            -0.26258766651153564,
            -0.36487048864364624,
            0.08251126855611801,
            -1.7381211519241333,
            0.0760560929775238,
            0.5785819292068481,
            0.937134861946106,
            0.17987558245658875,
            -0.44083932042121887,
            -0.44664791226387024,
            -0.31300607323646545,
            -0.7169981598854065,
            -0.1366572231054306,
            -0.09183098375797272,
            0.5991185903549194,
            0.058346156030893326,
            0.7290999889373779,
            -0.3004329800605774,
            -0.32661113142967224,
            0.4330117106437683,
            0.1175406202673912,
            -0.10385263711214066,
            -0.2353842854499817,
            -0.3155377209186554,
            0.40431228280067444,
            -0.7257964611053467,
            0.20298093557357788,
            -0.03054218553006649,
            0.10077895224094391,
            -0.01731383055448532,
            -0.13537751138210297,
            -0.6837863326072693,
            0.29686829447746277,
            0.4922653138637543,
            0.16048908233642578,
            -0.13214726746082306,
            0.2899152636528015,
            -0.09713205695152283,
            -0.128179132938385,
            0.4875669777393341,
            0.8056641221046448,
            -0.32643264532089233,
            0.05955449864268303,
            0.10996540635824203,
            0.07700219750404358,
            -0.1271786391735077,
            -0.6513185501098633,
            0.3214254379272461,
            -0.27590039372444153,
            0.36290600895881653,
            0.15122510492801666,
            0.7841342687606812,
            -0.8665516972541809,
            0.9462048411369324,
            -0.8214067816734314,
            -0.46989667415618896,
            0.28192779421806335,
            0.3197251260280609,
            0.343858003616333,
            -0.09578855335712433,
            0.1084870770573616,
            -0.06437769532203674,
            -0.14467480778694153,
            0.3178967833518982,
            -0.23222732543945312,
            0.09872695803642273,
            -0.8619102239608765,
            0.5749686360359192,
            0.018100673332810402,
            0.00905538909137249,
            0.21227209270000458,
            0.7490729689598083,
            0.5087606310844421,
            -0.052817452698946,
            0.5554073452949524,
            -0.17821422219276428,
            -0.5612728595733643,
            -0.25302591919898987,
            0.29578229784965515,
            0.29968681931495667,
            0.26298004388809204,
            -0.6258813738822937,
            0.12835992872714996,
            0.11607816815376282
        ],
        [
            0.16001062095165253,
            1.2006778717041016,
            -0.17285296320915222,
            -0.23261937499046326,
            0.9293080568313599,
            -0.3481486439704895,
            0.5043236017227173,
            1.6289499998092651,
            -0.6493255496025085,
            -0.4246259927749634,
            -0.445481538772583,
            -1.464592456817627,
            -0.2648698091506958,
            0.31652435660362244,
            0.711864709854126,
            -0.4502885043621063,
            0.6926420331001282,
            -0.08385631442070007,
            -0.12125016003847122,
            -2.4621994495391846,
            0.31515178084373474,
            0.40315595269203186,
            0.23509113490581512,
            -0.039133425801992416,
            -0.5036969184875488,
            0.07395612448453903,
            -0.4293593466281891,
            -0.871772825717926,
            -0.3237440586090088,
            -0.24141962826251984,
            0.41706445813179016,
            0.3695714771747589,
            -0.016981052234768867,
            -1.535084843635559,
            -0.565229058265686,
            1.3085824251174927,
            0.5652706623077393,
            -0.20866380631923676,
            -0.2512757182121277,
            -0.6152428984642029,
            0.3903917074203491,
            -0.23273977637290955,
            0.350122332572937,
            -0.25377771258354187,
            0.7939110398292542,
            0.035130273550748825,
            -0.5440596342086792,
            -0.5973246097564697,
            0.766974925994873,
            0.32752111554145813,
            -0.4819054901599884,
            -0.8025060296058655,
            0.26953941583633423,
            -0.7745956182479858,
            -0.02148810587823391,
            0.39372363686561584,
            0.5074732303619385,
            0.24724896252155304,
            -0.26525408029556274,
            -0.19749683141708374,
            0.7713810205459595,
            0.1191687062382698,
            0.5046365857124329,
            0.45185357332229614,
            -0.7177866697311401,
            0.761658251285553,
            0.15195906162261963,
            1.526971459388733,
            -1.2722145318984985,
            0.7970171570777893,
            -0.2355535328388214,
            0.3413701057434082,
            0.23611955344676971,
            0.4590187668800354,
            1.5702803134918213,
            -0.11792707443237305,
            0.17044667899608612,
            0.3470809757709503,
            -0.33147069811820984,
            0.24172231554985046,
            0.10019034892320633,
            -0.27173203229904175,
            -1.8055490255355835,
            0.6552491188049316,
            -0.0073025040328502655,
            -0.14253339171409607,
            1.240282416343689,
            0.965441882610321,
            1.2853347063064575,
            -0.16444233059883118,
            0.7801780700683594,
            0.36084023118019104,
            -0.02487647719681263,
            0.06240229308605194,
            0.7325713634490967,
            0.7204140424728394,
            0.2512724995613098,
            -0.833031177520752,
            0.9845899343490601,
            -0.5019986033439636
        ],
        [
            -0.09392396360635757,
            0.26245665550231934,
            -0.01258118636906147,
            -0.301397442817688,
            -0.11126894503831863,
            -0.4627334475517273,
            0.9237073063850403,
            1.0417282581329346,
            -0.5685173869132996,
            0.2484930008649826,
            -0.36622002720832825,
            -1.2103400230407715,
            -0.06483927369117737,
            -0.3290324807167053,
            -0.14162470400333405,
            -0.6383207440376282,
            0.07075314223766327,
            -0.3904212415218353,
            -0.1159077137708664,
            -2.285264492034912,
            0.2829206585884094,
            1.0167860984802246,
            1.3501710891723633,
            0.31087514758110046,
            -0.39921244978904724,
            -0.7267424464225769,
            -0.6888102889060974,
            -0.8051426410675049,
            -0.5053560733795166,
            -0.14115501940250397,
            0.7195656895637512,
            0.033652640879154205,
            0.8344408273696899,
            -0.6741930246353149,
            -0.6089295148849487,
            0.5529745221138,
            0.17989297211170197,
            -0.3665257394313812,
            -0.737851083278656,
            -0.63051837682724,
            0.21890504658222198,
            -0.5995210409164429,
            -0.0519028976559639,
            -0.3558441996574402,
            -0.13488325476646423,
            -0.0628928616642952,
            -0.2543274462223053,
            -0.8033390045166016,
            0.4039689898490906,
            0.5973230600357056,
            0.21494413912296295,
            -0.8812825083732605,
            -0.02985304780304432,
            -0.337426096200943,
            0.02244313806295395,
            0.4729854464530945,
            1.031103253364563,
            -0.5769175291061401,
            -0.0836469978094101,
            0.532825231552124,
            -0.2809053957462311,
            -0.7453693747520447,
            -0.7797248959541321,
            0.384091317653656,
            -0.31033122539520264,
            0.6167139410972595,
            -0.02264903485774994,
            0.7404624819755554,
            -1.309835433959961,
            1.153655767440796,
            -0.8758909702301025,
            -0.10153454542160034,
            0.484070360660553,
            0.21813549101352692,
            0.20700208842754364,
            -0.04768815636634827,
            0.5771375894546509,
            -0.3917941153049469,
            -0.43650946021080017,
            0.1094922348856926,
            -0.4194616675376892,
            0.2155119925737381,
            -0.7531663775444031,
            0.8377009630203247,
            -0.2943466603755951,
            -0.22439494729042053,
            0.21986666321754456,
            0.8228429555892944,
            0.5034143328666687,
            0.18184888362884521,
            1.0361281633377075,
            -0.24051469564437866,
            -0.6946213245391846,
            -0.4431266784667969,
            0.44166579842567444,
            -0.001281812903471291,
            0.46505042910575867,
            -0.6463074088096619,
            0.3814232051372528,
            0.2998255491256714
        ],
        [
            0.08647897094488144,
            0.49656760692596436,
            -0.14225998520851135,
            -0.24168585240840912,
            0.4230289161205292,
            -0.29216882586479187,
            0.12945429980754852,
            0.7022824883460999,
            -0.302498459815979,
            -0.22626753151416779,
            -0.12954260408878326,
            -0.6775699257850647,
            -0.3700307607650757,
            0.07397694140672684,
            0.30422431230545044,
            -0.08742862194776535,
            0.03161730617284775,
            -0.13721153140068054,
            0.04985365271568298,
            -1.176384687423706,
            0.03795596584677696,
            0.1510673463344574,
            0.29903438687324524,
            0.0038265553303062916,
            -0.34347814321517944,
            -0.06852108985185623,
            -0.08392924070358276,
            -0.46741780638694763,
            -0.002330206800252199,
            -0.07143478095531464,
            0.27611932158470154,
            0.1414070427417755,
            0.28013715147972107,
            -0.38187217712402344,
            -0.20282167196273804,
            0.4165536165237427,
            0.15896493196487427,
            -0.013075058348476887,
            0.05211612954735756,
            -0.19300608336925507,
            0.2921684682369232,
            -0.3116614818572998,
            0.2950240671634674,
            0.009291913360357285,
            0.37815749645233154,
            0.06645985692739487,
            -0.16022418439388275,
            -0.31095901131629944,
            0.2677481472492218,
            0.22664590179920197,
            -0.18443194031715393,
            0.01665918529033661,
            0.2464175969362259,
            -0.2040029764175415,
            -0.07368791103363037,
            0.24412605166435242,
            0.31129029393196106,
            0.028936684131622314,
            0.01630329340696335,
            -0.14431147277355194,
            0.411076158285141,
            0.2121214121580124,
            -0.03451703116297722,
            0.19987395405769348,
            -0.2365783452987671,
            0.23636803030967712,
            0.1974201798439026,
            0.7315199375152588,
            -0.5512086153030396,
            0.4612872302532196,
            -0.3126503825187683,
            -0.13025100529193878,
            0.11729878187179565,
            0.2553110122680664,
            0.6141284704208374,
            -0.039035364985466,
            -0.06674724817276001,
            0.14421170949935913,
            -0.0726606622338295,
            0.20779766142368317,
            0.09550414979457855,
            -0.09575559198856354,
            -0.8523828983306885,
            0.39341017603874207,
            0.14751659333705902,
            0.02689177170395851,
            0.4480789601802826,
            0.4758423864841461,
            0.5108813047409058,
            -0.15375010669231415,
            0.26958954334259033,
            0.08154640346765518,
            -0.09465259313583374,
            -0.017434298992156982,
            0.2749175429344177,
            0.39629682898521423,
            0.06813906133174896,
            -0.4094381034374237,
            0.2648840844631195,
            -0.20661568641662598
        ],
        [
            0.02863166667521,
            0.1856583207845688,
            -0.01714334450662136,
            -0.06871745735406876,
            0.16648012399673462,
            -0.08564647287130356,
            0.03704638034105301,
            0.2772504389286041,
            -0.1235421895980835,
            -0.08471544831991196,
            -0.07940272986888885,
            -0.28119656443595886,
            -0.16530254483222961,
            0.07023470103740692,
            0.11123121529817581,
            -0.0252884179353714,
            0.02404339239001274,
            -0.05381232500076294,
            0.00698346272110939,
            -0.4634292721748352,
            0.023155590519309044,
            0.08293755352497101,
            0.10723678022623062,
            -0.009787769056856632,
            -0.12385107576847076,
            0.005474840756505728,
            -0.051756612956523895,
            -0.19718262553215027,
            -0.002486194483935833,
            -0.01867080293595791,
            0.14209502935409546,
            0.05712214112281799,
            0.05686289444565773,
            -0.18280471861362457,
            -0.0771685391664505,
            0.1880108267068863,
            0.09823371469974518,
            -0.0028123273514211178,
            0.017180444672703743,
            -0.07632274180650711,
            0.1605115383863449,
            -0.16227266192436218,
            0.1065680980682373,
            0.003180455882102251,
            0.13322879374027252,
            -0.022416453808546066,
            -0.0653633251786232,
            -0.14327992498874664,
            0.15552732348442078,
            0.09833239018917084,
            -0.0770077034831047,
            -0.0022604733239859343,
            0.12863041460514069,
            -0.05886165425181389,
            -0.06038841977715492,
            0.12239757180213928,
            0.13485176861286163,
            -0.0005207310896366835,
            -0.004684165585786104,
            -0.05495590344071388,
            0.18420514464378357,
            0.08570002764463425,
            0.004217030946165323,
            0.09799531102180481,
            -0.10977305471897125,
            0.10087554156780243,
            0.0805588886141777,
            0.2777467668056488,
            -0.2073972225189209,
            0.2120904177427292,
            -0.09273231774568558,
            -0.046852245926856995,
            0.03002794086933136,
            0.10923826694488525,
            0.278922975063324,
            -0.03985322639346123,
            -0.03028276190161705,
            0.08746231347322464,
            -0.01728895492851734,
            0.07345836609601974,
            0.016314620152115822,
            -0.06358224898576736,
            -0.3470827639102936,
            0.1748659461736679,
            0.035970866680145264,
            0.016517985612154007,
            0.16267576813697815,
            0.22480425238609314,
            0.18759101629257202,
            -0.0517883226275444,
            0.10391716659069061,
            0.01833050511777401,
            -0.026281513273715973,
            -0.03528054058551788,
            0.0999680832028389,
            0.17494934797286987,
            0.03380337357521057,
            -0.18926233053207397,
            0.09221035242080688,
            -0.049110047519207
        ],
        [
            0.08677994459867477,
            0.36742883920669556,
            -0.16468508541584015,
            -0.3224746584892273,
            0.41024982929229736,
            -0.32668083906173706,
            0.04905913770198822,
            0.6016201376914978,
            -0.28990140557289124,
            -0.2308052033185959,
            -0.08747529238462448,
            -0.6068405508995056,
            -0.5004633665084839,
            0.015483567491173744,
            0.25383803248405457,
            0.04604465141892433,
            -0.16738124191761017,
            -0.2193922996520996,
            0.05610043928027153,
            -1.0761123895645142,
            0.0027166518848389387,
            0.11052995920181274,
            0.3728468120098114,
            -0.012551777064800262,
            -0.3879992365837097,
            -0.1305333822965622,
            0.05952707678079605,
            -0.460214763879776,
            0.13907983899116516,
            -0.02173934131860733,
            0.32738471031188965,
            0.08242630213499069,
            0.4458813965320587,
            -0.14912079274654388,
            -0.11635956913232803,
            0.24222496151924133,
            0.0665997862815857,
            0.07636114209890366,
            0.1561277210712433,
            -0.1177484318614006,
            0.36789947748184204,
            -0.4576297104358673,
            0.33646127581596375,
            0.10123740136623383,
            0.3060312271118164,
            0.05532223358750343,
            -0.09962255507707596,
            -0.3285122215747833,
            0.12793518602848053,
            0.28220292925834656,
            -0.14801059663295746,
            0.26897871494293213,
            0.29513755440711975,
            -0.04345779865980148,
            -0.11327594518661499,
            0.3132246434688568,
            0.3081974983215332,
            -0.006164128426462412,
            0.10234507918357849,
            -0.19488587975502014,
            0.4450168013572693,
            0.3505227565765381,
            -0.23876377940177917,
            0.1736947000026703,
            -0.17613054811954498,
            0.1414157897233963,
            0.3014070987701416,
            0.6688915491104126,
            -0.49244651198387146,
            0.49865278601646423,
            -0.43664032220840454,
            -0.3533102571964264,
            0.09439218789339066,
            0.2349616140127182,
            0.5296264886856079,
            -0.0720960721373558,
            -0.17898617684841156,
            0.14001552760601044,
            0.02536090277135372,
            0.25127243995666504,
            0.07458797097206116,
            -0.05952542647719383,
            -0.8072171807289124,
            0.411136269569397,
            0.20791533589363098,
            0.06951363384723663,
            0.29324832558631897,
            0.4796781837940216,
            0.40117499232292175,
            -0.22901198267936707,
            0.16039954125881195,
            -0.03195296972990036,
            -0.1237725168466568,
            -0.041497666388750076,
            0.21617919206619263,
            0.4092334508895874,
            0.02444126084446907,
            -0.3778049349784851,
            0.03356338292360306,
            -0.0944816842675209
        ],
        [
            0.005729567259550095,
            0.014611314050853252,
            -0.00021669096895493567,
            -0.0200366098433733,
            0.007573762908577919,
            -0.015723079442977905,
            0.0022471800912171602,
            0.022313300520181656,
            -0.002158616203814745,
            0.002316212747246027,
            0.00644612917676568,
            -0.02236718311905861,
            -0.01716536656022072,
            0.009889736771583557,
            0.009336824528872967,
            0.004846385680139065,
            0.001514315721578896,
            -0.005141152534633875,
            -0.0010971685405820608,
            -0.04289703071117401,
            0.0031911071855574846,
            0.013862865045666695,
            0.013780275359749794,
            0.0024333628825843334,
            -0.015606480650603771,
            -0.009023161605000496,
            0.004131702706217766,
            -0.015727490186691284,
            0.006948764435946941,
            0.007177420891821384,
            0.004061693791300058,
            0.010347449220716953,
            0.013432474806904793,
            -0.006704872474074364,
            -0.004168802406638861,
            0.005407379940152168,
            0.0009329123422503471,
            -0.004583002999424934,
            0.0066644842736423016,
            -0.002559294458478689,
            0.006020341068506241,
            -0.009771523997187614,
            0.012607053853571415,
            -0.0002688826061785221,
            0.01941625587642193,
            0.011374122463166714,
            -0.011247379705309868,
            -0.0023986161686480045,
            0.014650048688054085,
            0.015657983720302582,
            -0.0032050469890236855,
            -0.001546946819871664,
            0.0004977881326340139,
            -0.01209774985909462,
            -0.0018310159211978316,
            0.015936536714434624,
            0.005349967163056135,
            0.004169414285570383,
            0.008469064719974995,
            -0.009942406788468361,
            0.013376832939684391,
            0.016885066404938698,
            -0.008416845463216305,
            0.014048761688172817,
            0.003368636593222618,
            0.0067592645063996315,
            0.007646283134818077,
            0.017029818147420883,
            -0.017771270126104355,
            0.018955152481794357,
            -0.017484061419963837,
            -0.0012527991784736514,
            0.002496700268238783,
            0.013934310525655746,
            0.011590906418859959,
            -0.007436901796609163,
            -0.004569165874272585,
            0.009456316009163857,
            0.001023688935674727,
            0.0022751891519874334,
            0.002824176335707307,
            -0.006030763499438763,
            -0.031694211065769196,
            0.014362532645463943,
            0.0009375988156534731,
            0.0025511535350233316,
            0.0033823950216174126,
            0.015688788145780563,
            0.01318537350744009,
            0.0009124448406510055,
            0.008205375634133816,
            -0.00802927277982235,
            -0.006953700445592403,
            -0.008521737530827522,
            0.002023219596594572,
            0.003071429906412959,
            -0.004102767910808325,
            -0.010607286356389523,
            -0.0027462595608085394,
            -0.001036631758324802
        ],
        [
            -0.013383535668253899,
            0.7990550994873047,
            -0.2475017011165619,
            -0.1597287803888321,
            0.6221493482589722,
            -0.3362954556941986,
            0.33989623188972473,
            1.1251176595687866,
            -0.47694435715675354,
            -0.29304370284080505,
            -0.2932372987270355,
            -1.0997117757797241,
            -0.48943617939949036,
            0.16833479702472687,
            0.5007480978965759,
            -0.17352579534053802,
            0.09192855656147003,
            -0.13085760176181793,
            0.15867717564105988,
            -1.5635504722595215,
            0.11993125081062317,
            0.14144030213356018,
            0.1836237907409668,
            0.016717804595828056,
            -0.36349576711654663,
            0.040288981050252914,
            -0.20429034531116486,
            -0.7681501507759094,
            -0.23634473979473114,
            -0.11122175306081772,
            0.3530697822570801,
            0.3540850579738617,
            0.10454771667718887,
            -0.8366156220436096,
            -0.38159245252609253,
            0.9004325866699219,
            0.36855265498161316,
            -0.026434045284986496,
            -0.1121235117316246,
            -0.33519574999809265,
            0.26200711727142334,
            -0.3240341246128082,
            0.39409467577934265,
            -0.13693152368068695,
            0.6642264723777771,
            0.04669491946697235,
            -0.17312172055244446,
            -0.36307811737060547,
            0.7046557068824768,
            0.27304598689079285,
            -0.2949523627758026,
            -0.17750228941440582,
            0.49634015560150146,
            -0.3729214072227478,
            -0.08764363080263138,
            0.32940539717674255,
            0.3826991021633148,
            0.1348075121641159,
            -0.034652285277843475,
            -0.23869852721691132,
            0.6207935810089111,
            0.17438958585262299,
            0.22557863593101501,
            0.30815765261650085,
            -0.5823059678077698,
            0.2924903333187103,
            0.2158590704202652,
            1.108040690422058,
            -0.7652485370635986,
            0.5267847776412964,
            -0.10756330192089081,
            -0.07143864035606384,
            0.19145208597183228,
            0.41471025347709656,
            1.0126951932907104,
            0.10327859967947006,
            -0.0594169944524765,
            0.3316801190376282,
            -0.1987236738204956,
            0.31603047251701355,
            0.18654291331768036,
            -0.25869131088256836,
            -1.0452301502227783,
            0.4271851181983948,
            0.17527206242084503,
            0.0016164383850991726,
            0.7822993397712708,
            0.7738139033317566,
            1.0160506963729858,
            -0.1390148103237152,
            0.47910887002944946,
            0.22565142810344696,
            -0.12627987563610077,
            0.05371299386024475,
            0.43330931663513184,
            0.5642186999320984,
            0.14397746324539185,
            -0.7471203804016113,
            0.6639584898948669,
            -0.41831016540527344
        ],
        [
            -0.20301245152950287,
            0.4104181230068207,
            -0.11283474415540695,
            -0.17794445157051086,
            0.22781941294670105,
            -0.3654111623764038,
            0.07747171819210052,
            0.6088868379592896,
            -0.38948625326156616,
            -0.20838136970996857,
            -0.21882657706737518,
            -0.8140848875045776,
            -0.5670546293258667,
            -0.035971615463495255,
            0.25386154651641846,
            0.061153821647167206,
            -0.3013370931148529,
            -0.2968969941139221,
            0.2497929483652115,
            -1.2673325538635254,
            -0.04077911004424095,
            0.24404442310333252,
            0.5668308734893799,
            0.10856471210718155,
            -0.393157035112381,
            -0.13002178072929382,
            -0.21036511659622192,
            -0.5181198120117188,
            -0.016754476353526115,
            -0.07646594196557999,
            0.4949881136417389,
            0.11184614151716232,
            0.4194106161594391,
            -0.05108610913157463,
            -0.24179282784461975,
            0.34023308753967285,
            0.17814335227012634,
            0.026381835341453552,
            -0.004249973688274622,
            -0.060217611491680145,
            0.3833828866481781,
            -0.6757333874702454,
            0.24537301063537598,
            0.16557596623897552,
            0.3008735179901123,
            -0.1132342740893364,
            -0.021496230736374855,
            -0.4867011606693268,
            0.3465483486652374,
            0.42467001080513,
            -0.07078500837087631,
            0.3133445978164673,
            0.39984405040740967,
            0.04711827635765076,
            -0.2041134238243103,
            0.46623262763023376,
            0.5338744521141052,
            -0.21440230309963226,
            0.0685504898428917,
            -0.1708734929561615,
            0.2928381860256195,
            0.2596033215522766,
            -0.3130888342857361,
            0.26462268829345703,
            -0.33871743083000183,
            0.0516834557056427,
            0.2998921275138855,
            0.7383553981781006,
            -0.4649173319339752,
            0.56528639793396,
            -0.3989807069301605,
            -0.4788088798522949,
            0.09327913075685501,
            0.30344158411026,
            0.5918342471122742,
            0.15048852562904358,
            -0.24552226066589355,
            0.13570433855056763,
            -0.06814633309841156,
            0.3679639995098114,
            0.0633285716176033,
            -0.1666492521762848,
            -0.6835184097290039,
            0.47515374422073364,
            0.19709312915802002,
            0.18642506003379822,
            0.22667835652828217,
            0.744931697845459,
            0.468401163816452,
            -0.14468762278556824,
            0.2989560067653656,
            0.04528771713376045,
            -0.2420029640197754,
            -0.2231016457080841,
            0.23289191722869873,
            0.3664661943912506,
            0.09867187589406967,
            -0.5236091613769531,
            0.16357338428497314,
            -0.04874604567885399
        ],
        [
            0.14523592591285706,
            0.21162867546081543,
            -0.21627011895179749,
            -0.48446938395500183,
            0.2716982662677765,
            -0.46880871057510376,
            0.05981779843568802,
            0.5719195604324341,
            -0.28376075625419617,
            -0.12408483028411865,
            0.008556836284697056,
            -0.6496527194976807,
            -0.6439803242683411,
            -0.17007121443748474,
            0.13767434656620026,
            0.0964122787117958,
            -0.46206557750701904,
            -0.284115731716156,
            0.09291388094425201,
            -1.2537522315979004,
            -0.06879545748233795,
            0.23478278517723083,
            0.7997753024101257,
            0.009902391582727432,
            -0.5604671835899353,
            -0.2766928970813751,
            0.053511843085289,
            -0.5535531640052795,
            0.1576462984085083,
            -0.04115010052919388,
            0.5041682124137878,
            0.030890189111232758,
            0.7451960444450378,
            0.10852118581533432,
            -0.16082561016082764,
            0.09928594529628754,
            -0.030443433672189713,
            0.16223475337028503,
            0.14652599394321442,
            -0.09270495921373367,
            0.4758416414260864,
            -0.7152292132377625,
            0.3612664043903351,
            0.19134342670440674,
            0.2069115787744522,
            0.05576538294553757,
            -0.060928840190172195,
            -0.460847407579422,
            0.07016520202159882,
            0.4188847243785858,
            0.010210239328444004,
            0.44845423102378845,
            0.3357372283935547,
            0.05025416240096092,
            -0.15284541249275208,
            0.40063944458961487,
            0.5930288434028625,
            -0.203975111246109,
            0.24362397193908691,
            -0.07758913189172745,
            0.3083692491054535,
            0.2815299332141876,
            -0.5636104941368103,
            0.1918860822916031,
            -0.03966248035430908,
            0.20204560458660126,
            0.30275842547416687,
            0.6664777398109436,
            -0.49466192722320557,
            0.6848912835121155,
            -0.8081503510475159,
            -0.6469734907150269,
            0.11708223074674606,
            0.370280385017395,
            0.300883948802948,
            -0.13114622235298157,
            -0.135602667927742,
            0.06043170019984245,
            0.012501572258770466,
            0.346638947725296,
            -0.04051342234015465,
            0.067405566573143,
            -0.8222137689590454,
            0.5014186501502991,
            0.258176326751709,
            0.1286618560552597,
            0.12550194561481476,
            0.5394102334976196,
            0.29900363087654114,
            -0.2595331072807312,
            0.14226821064949036,
            -0.14045505225658417,
            -0.3275728225708008,
            -0.18089739978313446,
            0.16452030837535858,
            0.3942689299583435,
            0.06047118455171585,
            -0.4389059245586395,
            -0.16680581867694855,
            0.057561181485652924
        ],
        [
            0.014766694977879524,
            0.13721804320812225,
            -0.08370594680309296,
            -0.4315338730812073,
            0.11065687984228134,
            -0.4771304130554199,
            0.16833601891994476,
            0.5589806437492371,
            -0.3081168234348297,
            -0.05353330448269844,
            -0.11425057798624039,
            -0.742123544216156,
            -0.5605173110961914,
            -0.2589744031429291,
            0.028998268768191338,
            0.016601724550127983,
            -0.4652499556541443,
            -0.3797394931316376,
            0.08905886113643646,
            -1.4383331537246704,
            -0.048914726823568344,
            0.4383763074874878,
            1.0526432991027832,
            0.08611759543418884,
            -0.5285044312477112,
            -0.4099745750427246,
            -0.14474397897720337,
            -0.5351186990737915,
            0.04670430347323418,
            -0.06147371977567673,
            0.5721022486686707,
            -0.031238039955496788,
            0.8494989275932312,
            0.190357506275177,
            -0.2484428435564041,
            0.043934255838394165,
            -0.023987019434571266,
            0.029568970203399658,
            0.0029819912742823362,
            -0.08362073451280594,
            0.47327283024787903,
            -0.8343713879585266,
            0.25763368606567383,
            0.2235109508037567,
            0.07743903994560242,
            -0.03483011946082115,
            -0.025562036782503128,
            -0.6244958639144897,
            0.04145284742116928,
            0.5341702103614807,
            0.08347182720899582,
            0.35444340109825134,
            0.25550198554992676,
            0.09875504672527313,
            -0.17703761160373688,
            0.4718944728374481,
            0.6960745453834534,
            -0.39812782406806946,
            0.19872429966926575,
            -0.001548720640130341,
            0.1404922902584076,
            0.09194257110357285,
            -0.7768442630767822,
            0.2607232630252838,
            -0.08185188472270966,
            0.1923254132270813,
            0.26441338658332825,
            0.611953616142273,
            -0.6235937476158142,
            0.8341358304023743,
            -0.9056036472320557,
            -0.6145933270454407,
            0.20372693240642548,
            0.2691149413585663,
            0.21656349301338196,
            -0.0435953214764595,
            -0.07655804604291916,
            -0.11269206553697586,
            -0.07603858411312103,
            0.3511372208595276,
            -0.10646248608827591,
            0.09930732846260071,
            -0.7726961374282837,
            0.6187208294868469,
            0.14277534186840057,
            0.10539344698190689,
            -0.0019111897563561797,
            0.6266101002693176,
            0.15874673426151276,
            -0.19783370196819305,
            0.32223257422447205,
            -0.21165156364440918,
            -0.4412986636161804,
            -0.324049174785614,
            0.18981002271175385,
            0.2847549319267273,
            0.14521262049674988,
            -0.37664222717285156,
            -0.1880909949541092,
            0.17601893842220306
        ],
        [
            0.0636158362030983,
            0.11844399571418762,
            -0.08797118067741394,
            -0.24344411492347717,
            0.13506630063056946,
            -0.24351926147937775,
            0.032309990376234055,
            0.30833619832992554,
            -0.15737885236740112,
            -0.06259223818778992,
            -0.022528251633048058,
            -0.3655434846878052,
            -0.3307979702949524,
            -0.07590194791555405,
            0.07601834088563919,
            0.04101143404841423,
            -0.23136262595653534,
            -0.1561002880334854,
            0.05875565856695175,
            -0.6993609070777893,
            -0.03393935412168503,
            0.14897628128528595,
            0.4330711364746094,
            0.021817084401845932,
            -0.2775493264198303,
            -0.1643003225326538,
            0.017452755942940712,
            -0.3002423644065857,
            0.0699004977941513,
            -0.021095823496580124,
            0.2634972929954529,
            0.008175002411007881,
            0.40116003155708313,
            0.06416849046945572,
            -0.09182514250278473,
            0.07086988538503647,
            -0.015704680234193802,
            0.05953049659729004,
            0.06617996841669083,
            -0.043322861194610596,
            0.26356208324432373,
            -0.4027453362941742,
            0.19407810270786285,
            0.11078767478466034,
            0.0961102545261383,
            0.0270073302090168,
            -0.03518940880894661,
            -0.2692190706729889,
            0.030997855588793755,
            0.23367302119731903,
            0.0077682253904640675,
            0.23478935658931732,
            0.17798838019371033,
            0.032520826905965805,
            -0.08272256702184677,
            0.21755801141262054,
            0.3196057975292206,
            -0.1319010853767395,
            0.1064688190817833,
            -0.03584080561995506,
            0.16266803443431854,
            0.14951583743095398,
            -0.30462977290153503,
            0.10655584931373596,
            -0.03535091131925583,
            0.10348483175039291,
            0.17244701087474823,
            0.3606010973453522,
            -0.2880620062351227,
            0.38039737939834595,
            -0.43205493688583374,
            -0.3293156623840332,
            0.06538476794958115,
            0.1846548467874527,
            0.16565553843975067,
            -0.04545425996184349,
            -0.06865766644477844,
            0.02056851051747799,
            0.012043014168739319,
            0.1814805269241333,
            -0.030390562489628792,
            0.027460789307951927,
            -0.4372726082801819,
            0.27780354022979736,
            0.12788857519626617,
            0.06838833540678024,
            0.06870992481708527,
            0.290050745010376,
            0.1533488929271698,
            -0.13542623817920685,
            0.10815007984638214,
            -0.06750667840242386,
            -0.18329565227031708,
            -0.10037277638912201,
            0.09084538370370865,
            0.2184085100889206,
            0.030528657138347626,
            -0.23042955994606018,
            -0.09556887298822403,
            0.028708012774586678
        ],
        [
            0.03958022966980934,
            0.2574879825115204,
            -0.21455593407154083,
            -0.4117571711540222,
            0.26601120829582214,
            -0.49533042311668396,
            0.22627148032188416,
            0.7291935086250305,
            -0.36586225032806396,
            -0.1515079289674759,
            -0.09434772282838821,
            -0.865158200263977,
            -0.6657799482345581,
            -0.19078098237514496,
            0.15014858543872833,
            0.027008773759007454,
            -0.4220164716243744,
            -0.3034592568874359,
            0.11912315338850021,
            -1.5087848901748657,
            -0.04401849955320358,
            0.3528994917869568,
            0.8558397889137268,
            0.04088468849658966,
            -0.5188165307044983,
            -0.3072475492954254,
            -0.09653064608573914,
            -0.6793574094772339,
            0.009972626343369484,
            -0.08953315019607544,
            0.5409289598464966,
            0.07718824595212936,
            0.7392807006835938,
            -0.05269236862659454,
            -0.28414997458457947,
            0.327952116727829,
            0.06130993366241455,
            0.0921606793999672,
            -0.004703603684902191,
            -0.17673833668231964,
            0.5020068287849426,
            -0.7815328240394592,
            0.3289848268032074,
            0.09180605411529541,
            0.23868399858474731,
            -0.016562966629862785,
            -0.081083282828331,
            -0.5837825536727905,
            0.22613276541233063,
            0.47912320494651794,
            0.024437783285975456,
            0.27979597449302673,
            0.3914159834384918,
            -0.010140249505639076,
            -0.2028120905160904,
            0.46443405747413635,
            0.709213137626648,
            -0.25356820225715637,
            0.17831820249557495,
            -0.03325502574443817,
            0.29226604104042053,
            0.16652923822402954,
            -0.5356636047363281,
            0.2684268653392792,
            -0.18882261216640472,
            0.2639388144016266,
            0.2598990499973297,
            0.8193575739860535,
            -0.6305171251296997,
            0.8371061682701111,
            -0.8126152157783508,
            -0.6005931496620178,
            0.15131224691867828,
            0.41915303468704224,
            0.45886150002479553,
            -0.08190090954303741,
            -0.10273082554340363,
            0.056487180292606354,
            -0.04884343221783638,
            0.3658982515335083,
            -0.07356126606464386,
            0.02605586312711239,
            -0.8993480801582336,
            0.5845223069190979,
            0.18845859169960022,
            0.09577865898609161,
            0.22076870501041412,
            0.6969432830810547,
            0.4160365164279938,
            -0.22442810237407684,
            0.31313902139663696,
            -0.10544739663600922,
            -0.4062502682209015,
            -0.1980944275856018,
            0.24538879096508026,
            0.44403839111328125,
            0.13392147421836853,
            -0.6086639165878296,
            -0.02079256810247898,
            0.06714028865098953
        ],
        [
            0.028554275631904602,
            0.11096520721912384,
            -0.10227195173501968,
            -0.19039732217788696,
            0.10793302953243256,
            -0.20113065838813782,
            0.05890865623950958,
            0.27809128165245056,
            -0.13651128113269806,
            -0.04437277466058731,
            -0.032522253692150116,
            -0.32116517424583435,
            -0.282654345035553,
            -0.05051620677113533,
            0.06329122930765152,
            0.035074956715106964,
            -0.17738762497901917,
            -0.11061331629753113,
            0.0484812892973423,
            -0.581727147102356,
            -0.017889371141791344,
            0.10660173743963242,
            0.3338669240474701,
            0.015677999705076218,
            -0.22425143420696259,
            -0.10871630907058716,
            -0.012780115008354187,
            -0.25963667035102844,
            0.026821376755833626,
            -0.020385311916470528,
            0.22076785564422607,
            0.013032745569944382,
            0.3059704899787903,
            0.015043877065181732,
            -0.09308703243732452,
            0.09962038695812225,
            0.024268580600619316,
            0.05404600128531456,
            0.027456777170300484,
            -0.06484469026327133,
            0.21332408487796783,
            -0.32457104325294495,
            0.15493488311767578,
            0.0675947368144989,
            0.08551030606031418,
            0.0029726815409958363,
            -0.037517014890909195,
            -0.2201130986213684,
            0.06476545333862305,
            0.17291244864463806,
            0.016499333083629608,
            0.14657863974571228,
            0.16812877357006073,
            0.0031455729622393847,
            -0.0850670263171196,
            0.19177420437335968,
            0.2806614935398102,
            -0.09933466464281082,
            0.08483913540840149,
            -0.039012789726257324,
            0.13253779709339142,
            0.10864245146512985,
            -0.23427458107471466,
            0.10509122163057327,
            -0.047495536506175995,
            0.10367798805236816,
            0.12038806825876236,
            0.3227695822715759,
            -0.244576558470726,
            0.3113729953765869,
            -0.32658106088638306,
            -0.2765546143054962,
            0.053582269698381424,
            0.15841005742549896,
            0.17124724388122559,
            -0.05016637593507767,
            -0.06305859237909317,
            0.044432684779167175,
            -0.006184459198266268,
            0.14331552386283875,
            -0.03472646325826645,
            0.01086448971182108,
            -0.35320472717285156,
            0.21909289062023163,
            0.10031649470329285,
            0.0444209910929203,
            0.08173557370901108,
            0.25940752029418945,
            0.1522027552127838,
            -0.09891282767057419,
            0.0974719300866127,
            -0.054097581654787064,
            -0.16002152860164642,
            -0.08262629806995392,
            0.08324724435806274,
            0.17692437767982483,
            0.028867045417428017,
            -0.23038314282894135,
            -0.03057793341577053,
            0.03970624879002571
        ],
        [
            -0.09392396360635757,
            0.26245665550231934,
            -0.01258118636906147,
            -0.301397442817688,
            -0.11126894503831863,
            -0.4627334475517273,
            0.9237073063850403,
            1.0417282581329346,
            -0.5685173869132996,
            0.2484930008649826,
            -0.36622002720832825,
            -1.2103400230407715,
            -0.06483927369117737,
            -0.3290324807167053,
            -0.14162470400333405,
            -0.6383207440376282,
            0.07075314223766327,
            -0.3904212415218353,
            -0.1159077137708664,
            -2.285264492034912,
            0.2829206585884094,
            1.0167860984802246,
            1.3501710891723633,
            0.31087514758110046,
            -0.39921244978904724,
            -0.7267424464225769,
            -0.6888102889060974,
            -0.8051426410675049,
            -0.5053560733795166,
            -0.14115501940250397,
            0.7195656895637512,
            0.033652640879154205,
            0.8344408273696899,
            -0.6741930246353149,
            -0.6089295148849487,
            0.5529745221138,
            0.17989297211170197,
            -0.3665257394313812,
            -0.737851083278656,
            -0.63051837682724,
            0.21890504658222198,
            -0.5995210409164429,
            -0.0519028976559639,
            -0.3558441996574402,
            -0.13488325476646423,
            -0.0628928616642952,
            -0.2543274462223053,
            -0.8033390045166016,
            0.4039689898490906,
            0.5973230600357056,
            0.21494413912296295,
            -0.8812825083732605,
            -0.02985304780304432,
            -0.337426096200943,
            0.02244313806295395,
            0.4729854464530945,
            1.031103253364563,
            -0.5769175291061401,
            -0.0836469978094101,
            0.532825231552124,
            -0.2809053957462311,
            -0.7453693747520447,
            -0.7797248959541321,
            0.384091317653656,
            -0.31033122539520264,
            0.6167139410972595,
            -0.02264903485774994,
            0.7404624819755554,
            -1.309835433959961,
            1.153655767440796,
            -0.8758909702301025,
            -0.10153454542160034,
            0.484070360660553,
            0.21813549101352692,
            0.20700208842754364,
            -0.04768815636634827,
            0.5771375894546509,
            -0.3917941153049469,
            -0.43650946021080017,
            0.1094922348856926,
            -0.4194616675376892,
            0.2155119925737381,
            -0.7531663775444031,
            0.8377009630203247,
            -0.2943466603755951,
            -0.22439494729042053,
            0.21986666321754456,
            0.8228429555892944,
            0.5034143328666687,
            0.18184888362884521,
            1.0361281633377075,
            -0.24051469564437866,
            -0.6946213245391846,
            -0.4431266784667969,
            0.44166579842567444,
            -0.001281812903471291,
            0.46505042910575867,
            -0.6463074088096619,
            0.3814232051372528,
            0.2998255491256714
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ]
    ],
    "Document": "2101.00763.pdf",
    "Abstract": ". Let T is a certain tensor product of simple dyadic shifts de\ufb01ned below. We prove here that\nfor dyadic bi-parameter repeated commutator its norm can be estimated from below by Chang-Fe\ufb00erman\nBMO norm pertinent to its symbol. See Theorems 9.1, 9.2 at the end of this article. But this is done below\nunder an extra assumption on the Haar\u2013Fourier side of the symbol. In Section 7 we carefully analyze what\ngoes wrong in the absence of this extra assumption. At the end of this note we also list a counterexample\nto the existing proof of characterization of bi-parameter repeated commutator with the Hilbert transforms.\nThis is a counterexample to the proof, and it is not a counterexample to the statement of factorization result\nin bi-disc, or to Nehari\u2019s theorem in bi-disc.\n1. ",
    "Text": "let is certain tensor product of simple dyadic shifts de\ufb01ned below. we prove here that for dyadic bi-parameter repeated commutator its norm can be estimated from below by chang-fe\ufb00erman norm pertinent to its symbol. see theorems 9.1, 9.2 at the end of this article. but this is done below under an extra assumption on the haar\u2013fourier side of the symbol. in section we carefully analyze what goes wrong in the absence of this extra assumption. at the end of this note we also list counterexample to the existing proof of characterization of bi-parameter repeated commutator with the hilbert transforms. this is counterexample to the proof, and it is not counterexample to the statement of factorization result in bi-disc, or to nehari\u2019s theorem in bi-disc. 1. introduction in we considered the characterization of the symbols of bounded commutator of multiplication and simple dyadic bi-parameter singular integral. in this note we are considering dyadic model of repeated bi-parameter commutator. it has been noticed that repeated commutators are much harder to treat than the simple ones. the former still await the understanding, see below. the latter are well understood in many situations, see bi-parameter theory is notoriously more di\ufb03cult than the more classical one parameter theory of singular integrals. the good place to get acquainted with multi-parameter speci\ufb01cs are the papers of journ\u00b4e and the applications to analysis in polydisc can be found in [ch], [chf], it is well known [chf, that in the multi-parameter setting all concepts of carleson measure, john\u2013nirenberg inequality, calder\u00b4on\u2013zygmund decomposition (used in classical theory) are much more delicate. paper develops completely new approach to prove natural tri-linear bi-parameter estimates on bi-parameter paraproducts, especially outside of banach range. in journ\u00b4e\u2019s lemma was used, but the approach did not generalize to multi-parameter paraproduct forms. this issue was resolved in where simpli\ufb01ed method was used to address the multi-parameter paraproducts. but repeated bi-parameter commutators involve several bi-parameter paraproducts at once. hence, the estimate of repeated bi-parameter commutators from below becomes tough: one needs to isolate those paraproducts one from another. and they do not like to be isolated. one of the new feature of the multi-parameter theory is captured by several di\ufb00erent de\ufb01nitions of see [ch]. the necessity of those new e\ufb00ects was discovered \ufb01rst by carleson [car], see also the di\ufb03culties with multi-parameter theory was highlighted recently by two very di\ufb00erent series of papers. one concerns itself with the carleson measure and carleson embedding on polydisc and on multi-tree, see, [amps18], these papers, roughly speaking, are devoted to harmonic analysis (carleson embedding in particular) on graphs with cycles. this theory is drastically di\ufb00erent from the usual one, and it is much more di\ufb03cult. 10010 mathematics subject classi\ufb01cation. 47a100. key words and phrases. bi-parameter carleson embedding, bi-parameter hankel operators, dyadic model. is partially supported by the nsf an nsf postdoc under award no.1606270. st is partially supported by the nsf dms 1856719. av is partially supported by the nsf grant dms 1900268 and by alexander von humboldt foundation. i. holmes, s. treil, and a. volberg another particularity of the multi-parameter theory is highlighted by the repeated commutator story. lacey and ferguson [fl] found the characterization of the symbols that give us bounded \u201csmall hankel operators\u201d. it was breakthrough article that gave multi-parameter nehari theorem and long searched after factorization of bi-parameter hardy space it was exactly equivalent to bi-parameter \u201crepeated commutator characterization\u201d. several papers followed where \u201cbi-\u201d was upgraded to \u201cmulti-\u201d, and where repeated commutation was performed with di\ufb00erent classical singular integrals: [fl], [l], [lt]. there are many new and beautiful ideas in the above mentioned papers devoted to this subject. we also want to mention [ops], where the authors use an argument inspired by toeplitz operators to show the lower bounds. it assumes the lower norm for the hilbert transform claimed in [fl], as black but there is problem with [fl] and with what followed. that was big breakthrough in multi-parameter theory. unfortunately, [v] indicated hole in the proofs of [fl], [l], and this circle of problems is still unsettled. see also section 10 for the more detailed explanation. we decided to simplify the problem to the \u201cbare bones\u201d, and to consider repeated commutators with the simplest dyadic singular integral, namely, with the dyadic shift of order 1. the repeated commutator problem presented the same type of di\ufb03culty as in [fl] and subsequent papers. but we analyze these di\ufb03culties below. they become very clear (but still largely unsurmountable) in the dyadic case we consider below. however, with an extra assumption on the symbol of repeated commutator we managed to get the expected answer, see theorems 9.1, 9.2 at the end of this article. the expected answer is of course that the repeated commutator is bounded if and only if the symbol belongs to dyadic chang\u2013fe\ufb00erman if symbol does belong to dyadic chang\u2013fe\ufb00erman then the repeated commutator is indeed bounded, see in the opposite direction the only fully proved result so far is in but this paper requires that in\ufb01nitely many commutators be bounded to conclude that the symbol is bounded. as we already mentioned with an extra assumption on the symbol we can prove the necessity of dyadic chang\u2013fe\ufb00erman (see theorems 9.1, 9.2 at the end of this article). we list carefully what are the di\ufb03culties to be surmounted in the general case (without an extra assumption on the symbol), and what kind of combinatorial morass should be taken care of. this is left to possibly more skillful reader. 2. repeated commutator let be the usual dyadic lattice on the line and be the family of dyadic rectangles on the plane. haar functions are denote we consider and hi let be the dyadic shift de\ufb01ned by on the functions of variable x: hi+ hi\u2212, if is even; 0, otherwise let be the copy of but acting on an independent variable y: if is even; 0, otherwise test functions are functions y), and := we are interested in the commutator := b]] and in characterization of its boundedness. the ultimate goal is to prove that its boundedness is equivalent to bmod, where is understood in chang\u2013fe\ufb00erman de\ufb01nition. we always drop the superscript as everything is dyadic below. simple commutator b] can be naturally split to parts: d, \u03c0, parts. they correspond to di\ufb00erent parts of the product operator f. dyadic bi-parameter repeated commutator and dyadic product first part follows. (b, f) d(b, f) := \u2206if (b, now compute commutator: d(b, f) d(b, f) (b, hi)t hi (b, f, now compute commutator again: d(b, f) d(b, f) \u27e8b\u27e9i(t (\u2206if) \u2206i(t f)) so let us consider (\u2206if) \u2206i(t f) for let and let be even (meaning |i| then hi hi+ hi\u2212, and \u2206i(t \u2206i(t hi) 0. let now and let be odd. then hi 0, and \u2206i(t \u2206i(t hi) 0. we conclude that d(b, f) d(b, f) will have terms: even \u27e8b\u27e9i(f, hi\u2212) \u02c6i even \u27e8b\u27e9\u02c6i(f, h\u02c6i)s(i, odd \u27e8b\u27e9\u02c6i(f, h\u02c6i)s(i, where (1) s(i, \u02c6i) if (\u02c6i)+ \u22121 otherwise. there will be more terms. denote by s(i) the dyadic sibling of i. denote by \u02c6i the immediate predecessor of i. let \u02c6i and let \u02c6i be even. then 0, so 0, but h\u02c6i h(\u02c6i)+ h(\u02c6i)\u2212 and so \u00b1(hi hs(i)), and, thus, \u2206it \u00b1hi. so for with \u02c6i and \u02c6i being even we have on (\u2206if) \u2206i(t f) \u2212hi, if (\u02c6i)+; (\u2206if) \u2206i(t f) +hi if (\u02c6i)\u2212 we conclude that d(b, f) d(b, f) will have also the following terms: \u02c6i even \u27e8b\u27e9i(f, h\u02c6i)s(i, odd \u27e8b\u27e9i(f, h\u02c6i)s(i, all other give zero contribution. we get \ufb01nally that (2) f) d(b, odd (\u27e8b\u27e9\u02c6i \u27e8b\u27e9i)(f, h\u02c6i)s(i, odd \u22121 (b, h\u02c6i)(f, now we need to commute with iodd hi h\u02c6i)(f, h\u02c6i)} (b, h\u02c6i) we use now notations: bi := (b, hi) then we rewrite the previous display as follows: iodd hi now multiplication in the second variable f\u02c6i b\u02c6i f\u02c6i can be decomposed to d, \u03c0, parts. i. holmes, s. treil, and a. volberg 2.1. dd part of repeated commutator. dd iodd hi dpart(t2b\u02c6i iodd hi jodd (b\u02c6i, j) (b, h\u02c6i h\u02c6i rodd,odd (b, r) 2.2. d\u03c0 part of repeated commutator. d\u03c0 iodd hi \u03c0part(t2b\u02c6i iodd hi \u03c0b\u02c6 let us recall what is \u03c0b. (b\u02c6i, f\u02c6i) \u03c0b\u02c6 if\u02c6i := now compute commutator (below := d\u03c0 iodd hi if\u02c6i \u03c0b\u02c6 (3) odd jeven (b, h\u02c6i h\u02c6i hi odd (b, h\u02c6i h\u02c6i hi let us use the following notations for given i, j: (4) j, \u02c6r \u02c6i \u02c6j, \u02c6i j, \u02c6j, hi (5) hi 2.3. part of repeated commutator. iodd hi iodd hi let us recall what is (b\u02c6i, f\u02c6i) if\u02c6i := (b\u02c6i, therefore, iodd hi i(f\u02c6i) (6) odd jeven (b, h\u02c6i h\u02c6i hi odd (b, h\u02c6i h\u02c6i\u2297, hi this \ufb01nishes dd, d\u03c0, parts of repeated commutator. now we need to write \u03c0d, z\u03c0 parts\u2013they are just symmetric with respect to exchange the \ufb01rst and the second variables. but also we need zz part, \u03c0z, z\u03c0 parts, and the most dangerous \u03c0\u03c0 part. dyadic bi-parameter repeated commutator and dyadic product 2.4. \u03c0-parts. here it is. its \u03c0d part is obtained by calculating parts of commutator so as before \u03c0d (7) ieven jodd (b, hi jodd (b, hi we see that (7) is symmetric to (3), as it should be. \u03c0z (8) ieven (b, hi ieven (b, hi ieven (b, hi ieven (b, hi now the most dangerous \u03c0\u03c0 part of repeated commutator follows: \u03c0\u03c0 (9) i,jeven,even (b, hi iany,jeven (b, hi ieven,jany (b, hi iany,jany (b, hi 2.5. z-parts. (10) jodd (b, hi hi jodd (b, hi hi i. holmes, s. treil, and a. volberg z\u03c0 (11) ieven (b, hi hi ieven (b, hi hi ieven (b, hi hi ieven (b, hi hi zz (12) ieven (b, hi hi ieven (b, hi hi ieven (b, hi hi ieven (b, hi hi dyadic bi-parameter repeated commutator and dyadic product 3. necessity of bmor in this section we show that if is bounded, then bmor. to do this, we test on haar function hi\u2032\u2032 this yields 25 operators, which we list below. most paraproducts in section (like \u03c0\u03c0 for example) yield 2-4 terms, so names such as \u03c0\u03c01 below simply indicate that the term comes from \u03c0\u03c0. the operators below also have various restrictions on the parity of i\u2032\u2032 and j\u2032\u2032, i.e. most only appear for certain combination of parities. this is indicated in parentheses next to each operator. the operators are grouped by simplicity: group are the simplest operators containing \ufb01nitely many terms, groups and are product operators, and lastly the four operators in group are the most di\ufb03cult. they are also color-coded... group i: simple operators (i\u2032\u2032 even, j\u2032\u2032 even) (b, hi\u2032\u2032 +) |i\u2032\u2032| (hi\u2032\u2032 hi\u2032\u2032 \u2212(b, hi\u2032\u2032 \u2212) |i\u2032\u2032| (hi\u2032\u2032 hi\u2032\u2032 dd (i\u2032\u2032 even, j\u2032\u2032 even) (b, hi\u2032\u2032 (hi\u2032\u2032 hi\u2032\u2032 \u2212) (i\u2032\u2032 even, j\u2032\u2032 even) (b, hi\u2032\u2032 |j\u2032\u2032| \u2212) \u2212(b, hi\u2032\u2032 |j\u2032\u2032| \u2212) (i\u2032\u2032 even, j\u2032\u2032 even) (b, hi\u2032\u2032 (b, hi\u2032\u2032 \u2212(b, hi\u2032\u2032 (b, hi\u2032\u2032 (j\u2032\u2032 even) (b, hi\u2032\u2032 |j\u2032\u2032| \u2212) (i\u2032\u2032 even) (b, hi\u2032\u2032 |i\u2032\u2032| (hi\u2032\u2032 hi\u2032\u2032 (j\u2032\u2032 even) (b, hi\u2032\u2032 (b, hi\u2032\u2032 (i\u2032\u2032 even) (b, hi\u2032\u2032 (b, hi\u2032\u2032 (no restrictions) (b, hi\u2032\u2032 group product operators, summation over i. holmes, s. treil, and a. volberg (i\u2032\u2032 even, j\u2032\u2032 even) (b, hi |j\u2032\u2032| (b, hi |j\u2032\u2032| (i\u2032\u2032 even, j\u2032\u2032 even) (b, hi +)hi\u2032\u2032 (b, hi \u2212)hi\u2032\u2032 (b, hi +)hi\u2032\u2032 (b, hi \u2212)hi\u2032\u2032 (j\u2032\u2032 even) \uf8ef\uf8ef\uf8f0 even (b, hi \uf8fa\uf8fa\uf8fb |j\u2032\u2032| (i\u2032\u2032 even) (b, hi (b, hi (j\u2032\u2032 even) \uf8ef\uf8ef\uf8f0 even (b, hi \uf8fa\uf8fa\uf8fb \uf8ef\uf8ef\uf8f0 even (b, hi \uf8fa\uf8fa\uf8fb (no restrictions) \uf8ef\uf8ef\uf8f0 even (b, hi \uf8fa\uf8fa\uf8fb group product operators, summation over (i\u2032\u2032 even, j\u2032\u2032 even) hi\u2032\u2032 hi\u2032\u2032 |i\u2032\u2032| (b, hi\u2032\u2032 hi\u2032\u2032 hi\u2032\u2032 |i\u2032\u2032| (b, hi\u2032\u2032 dyadic bi-parameter repeated commutator and dyadic product (i\u2032\u2032 even, j\u2032\u2032 even) (b, hi\u2032\u2032 (b, hi\u2032\u2032 (b, hi\u2032\u2032 (b, hi\u2032\u2032 (i\u2032\u2032 even) hi\u2032\u2032 hi\u2032\u2032 |i\u2032\u2032| \uf8ef\uf8ef\uf8f0 even (b, hi\u2032\u2032 \uf8fa\uf8fa\uf8fb (j\u2032\u2032 even) (b, hi\u2032\u2032 (b, hi\u2032\u2032 (i\u2032\u2032 even) \uf8ef\uf8ef\uf8f0 even (b, hi\u2032\u2032 \uf8fa\uf8fa\uf8fb \uf8ef\uf8ef\uf8f0 even (b, hi\u2032\u2032 \uf8fa\uf8fa\uf8fb (no restrictions) \uf8ef\uf8ef\uf8f0 even (b, hi\u2032\u2032 \uf8fa\uf8fa\uf8fb group the di\ufb03cult operators \u03c0\u03c04 (i\u2032\u2032 even, j\u2032\u2032 even) (b, hi (b, hi (b, hi (b, hi \u03c0\u03c03 (i\u2032\u2032 even) even,j\u228aj\u2032\u2032 (b, hi even,j\u228aj\u2032\u2032 (b, hi 10 i. holmes, s. treil, and a. volberg \u03c0\u03c02 (j\u2032\u2032 even) even,i\u228ai\u2032\u2032 (b, hi even,i\u228ai\u2032\u2032 (b, hi \u03c0\u03c01 (no restrictions) even,i\u228ai\u2032\u2032 even,j\u228aj\u2032\u2032 (b, hi the lemma below will bound most of these operators: lemma if is l2-bounded, then the (one-parameter) commutators |j| and |i| bi] are uniformly bounded, for any i, d. consequently, (13) |(b, hi\u2032 and (14) |(b, hi for all i, d. proof. we prove the result in the \ufb01rst parameter x, the other being symmetric. we test on function y) where and j\u2032\u2032 d. note that if is bounded, \u2225t 2. computing yields \ufb01ve operators: two with no restrictions on j\u2032\u2032: even, and three which are only non-zero if j\u2032\u2032 is even: |j\u2032\u2032| +), +]p \u2212]p \u2212. suppose \ufb01rst that j\u2032\u2032 is even. in this case, we have all \ufb01ve operators above. we look at the haar coe\ufb03cients of each: if is odd, and j\u2032\u2032 0, otherwise. if is odd, and j\u2032\u2032 0, otherwise. since j\u2032\u2032 is even, the inclusion conditions on are the same as j\u2032\u2032 for and j\u2032\u2032 for dyadic bi-parameter repeated commutator and dyadic product 11 |j\u2032\u2032|, if j\u2032\u2032 or j\u2032\u2032 0, otherwise. if j\u2032\u2032 if j\u2032\u2032 0, otherwise. +]p, +) \u2212]p, \u2212), if j\u2032\u2032 0, otherwise. note that for the second component haar functions run through all the odd dyadic intervals intersecting j\u2032\u2032. for the second component haar functions run through all dyadic intervals intersecting j\u2032\u2032, except j\u2032\u2032 \u00b1. pick the components of and with even on the second coordinate: peven := even even +]p even \u2212]p even then peven and peven are orthogonal, so if is bounded then these components must be individually bounded. in particular, peven is bounded. clearly \u2225peven\u22252 even |j\u2032\u2032 +| even |j\u2032\u2032 \u2212| |j\u2032\u2032| even giving us that (15) even 2, for all j\u2032\u2032 even. now suppose j\u2032\u2032 is odd, so we only have the operators and as before, if is odd, and j\u2032\u2032 0, otherwise. if is odd, and j\u2032\u2032 0, otherwise. obviously and are orthogonal, so \u2225t for odd j\u2032\u2032. from \u2225t 2, it is easy to see that (16) odd 2, for all j\u2032\u2032 odd. from (15) and (16), it is obvious that, if is bounded, then (17) |j\u2032\u2032|, for all j\u2032\u2032 d. 12 i. holmes, s. treil, and a. volberg this is much stronger assertion than the lemma needs, and immediately implies (13) using the oneparameter implication: |j| is l2-bounded |j| bmo(r) |(b, hi\u2032 theorem 3.1 if is bounded, then bmor. proof. the results in lemma immediately show that all operators in groups and are priori bounded and can be disregarded. what remains are the four operators in group case 1: i\u2032\u2032 and j\u2032\u2032 are both odd. in this case, we only have the operator \u03c0\u03c01, which we rewrite as \u03c0\u03c01 (b, h\u02c6i so boundedness of in this case reduces to just this \u03c0\u03c01. computing its norm gives us \u2225\u03c0\u03c01\u22252 |(b, h\u02c6i even,i\u228ai\u2032\u2032 even,j\u228aj\u2032\u2032 |(b, hi c, and from here immediately (18) |(b, hi for all d. case 2: i\u2032\u2032 is odd and j\u2032\u2032 is even. in this case we have two operators, \u03c0\u03c01 and \u03c0\u03c02. but now we know from (18) that \u03c0\u03c01 is already bounded, so we only need to look at \u03c0\u03c02: \u03c0\u03c02 (b, h\u02c6i (b, h\u02c6i separate \u03c0\u03c02 into where we only sum over odd j\u2032\u2032 \u00b1, and \u03c0\u03c02even, where we only sum over even j\u2032\u2032 \u00b1. these are orthogonal, so they are individually bounded. now even,i\u228ai\u2032\u2032 |(b, hi c. from here, it follows easily that (19) |(b, hi for all d. case 3: i\u2032\u2032 is even and j\u2032\u2032 is odd. this case is symmetrical to case 2, and yields (20) |(b, hi for all d. case 4: i\u2032\u2032 and j\u2032\u2032 are both even. in this case we have all four operators in group but we already know from (18), (19) and (20) that all but \u03c0\u03c04 are already bounded. now \u2225\u03c0\u03c04\u22252 |(b, hi dyadic bi-parameter repeated commutator and dyadic product 13 which gives us exactly that |(b, hi for all d, so bmor. 4. analyzing what is left to estimate if bmor of the symbol is small in the previous section we proved (21) \u2225b\u2225bmor \u2225t b\u2225 we can normalize to have hence, to get an estimate of from below we can assume (22) \u2225b\u2225bmor \u03b50 where \u03b50 is very small positive absolute number. we recall that everything is dyadic. de\ufb01nition 4.1. the haar support of function is the collection of dyadic rectangles such that haar coe\ufb03cient does not vanish: \u03c3h(\u03b1) := {r (\u03b1, \u0338= 0}. de\ufb01nition 4.2. let j, p(r) := \u02c6r \u02c6i \u02c6j, de\ufb01nition 4.3. let be \ufb01nite union of dyadic rectangles. we call such dyadic open set. for every such we denote by the collection of all dyadic rectangles lying inside de\ufb01nition 4.4. we say that function is deep inside dyadic open set if u. we can call such m-deep inside u. de\ufb01nition 4.5. [t [t b]]. 4.1. plan. we will try to estimate from below under assumptions: (1) is \ufb01nite; (2) 1; (3) \u2225b\u2225bmor \u03b50; (4) is dyadic open set such that by rescaling we can assume that 1. we will stay soon only with \u03c0\u03c0 part of repeated commutator. lemma symbol is \u201csmaller\u201d than test function) hi\u2032 (hi\u2032\u2032 \u0338= i\u2032 \u02c6i\u2032\u2032, j\u2032 j\u2032\u2032. proof. direct calculation. lemma symbol is \u201csmaller\u201d than test function) hi\u2032 \u0338= i\u2032 i\u2032\u2032, j\u2032 j\u2032\u2032. proof. direct calculation. de\ufb01nition 4.6. given we use standard notation for the set {m 16}, where denotes the strong dyadic maximal function. lemma let be \ufb01nite union of dyadic rectangles. let be as in the de\ufb01nition 4.6. let be such that \u03c3h(\u03c1) then (\u03c1) for any such that \u03c3h(\u03b2) \u2205. proof. follows from lemma 2. lemma let be \ufb01nite union of dyadic rectangles. let be as in the de\ufb01nition 4.6. let be such that \u03c3h(\u03c1) u. then \u03b2(\u03c1) for any such that \u03c3h(\u03b2) \u2205. 14 i. holmes, s. treil, and a. volberg proof. follows from lemma 3. de\ufb01nition 4.7. {r \u0338= \u2205}. := the same for from de\ufb01nition 4.6. edge(u) {r u, \u02c6r \u0338= \u2205}. so describes rectangles in that are \u201cdeep, but not so deep\u201d in they are on the edge. given and we consider built as in de\ufb01nition 4.6 and we consider the decomposition (23) \u03b10 \u03b2, where (1) \u03b10 := \u2282u(b, (2) is the rest, meaning that rectangles giving non-zero coe\ufb03cient have to be like this: \u0338= \u2205. by lemma 41 that says that symbol should be \u201csmaller\u201d than the test function, we get that if is such that \u03c3h(\u03c1) then (24) (\u03c1) so\u2013in estimating (\u03c1) from below we can forget about \u2225t (\u03c1)\u22252 and look only at \u03b10 (\u03c1). and the only thing we used for claiming that is that haar spectrum of is in and de\ufb01nition 4.6 of u. by de\ufb01nition 4.6 and weak boundedness of we know that (25) |u| obviously, if we normalize 1, \u2225\u03c1\u22252 1, we have \u2225t b\u2225 \u2225t \u2225t (\u03c1))| \u03b10 (\u03c1))| so we are left to estimate \u03b10 (\u03c1))| from below, where \u03c3h(\u03c1) 5. the estimate of |(t \u03c1| from below, where \u03c3h(\u03c1) to estimate \u03b10 (\u03c1))| from below let us look at our formulas for \u03c0\u03c0, \u03c0z, dd for \u03b10, remark 5.1. if needed we can always replace \u03b10 that was such that u, by that is u. this is only if we need this. the result one obtains after such change is weaker, but it still would give the information on some part of chang\u2013fe\ufb00erman norm of b. 5.1. signature and parts of commutator that vanish. we use the notion of signature. we look at the functions employed in the de\ufb01nition of each part. there are functions in position and functions in position. we write signature as matrix, where the \ufb01rst row is assigned to functions in position and the second row is assigned to functions in position. the element of the matrix is if the integral of corresponding function is hi), and the element of the matrix is if the integral of corresponding function is not for example, \ufffd0, 0, 0, 0, is the signature of dd part of repeated commutator, and \ufffd0, 0, 0, 1, is the signature of d\u03c0 part. part has signature \ufffd0, 0, 0, 0, dyadic bi-parameter repeated commutator and dyadic product 15 lemma all parts having only one part in the signature can be estimates by proof. direct calculation. thus those parts can be disregarded. these are all d..., ...d parts. consider now parts with z..., ...z. these are terms with signatures \ufffd0, 1, 0, 0, and \ufffd0, 0, 0, 1, also zz has signature \ufffd0, 0, 0, 0, they will necessarily consist of the terms having the following factors: (1) hi (2) hi (3) hi (4) (5) hi (6) hi (7) et cetera... it is important to remember that here we can count only those i, such that are inside this follows from our choice of \u03c1: \u03c3h(\u03c1) but as are inside almost all those scalar products above are equal to zero. unfortunately not all, number (5) does not vanish as is very non-localized function. but let us even assume for while that all such terms disappear (which is false as we just explained, some terms stay). let be an arbitrary test function with haar spectrum inside (we can actually use functions with haar spectrum m-deep in if needed). build as in de\ufb01nition 4.6. we have (25). we denoted by \u03b10 the part of having haar spectrum in u. after the bookkeeping we see that in \u03b10 \u03c1)| only \u03c0\u03c0 part rests because all other parts either vanish or are smaller than let us write down all four terms of \u03c0\u03c0 part of \u03b10 \u03c1), \u03c3h(\u03c1) \u03c0\u03c0(\u03b10, t) (\u03b10, hi (26) (\u03b10, hi (\u03b10, hi (\u03b10, hi iv the range of i, can be naturally associated with the de\ufb01nition of and with the nature of \u03c1: 5.2. conjugate operator. it seems to be obvious that we can replace both ti by and get the similar expression. now we want to estimate \u03b10 (\u03c1))| from below. let be such that \u03c3h(\u03c1) u. we denoted by \u03b10 the part of having haar spectrum in u. by lemma \u03b10(\u03c1)) b(\u03c1)) in estimating \u03b10(\u03c1)) we the terms having the following factors: 16 i. holmes, s. treil, and a. volberg (1) hi (2) hi (3) (4) (5) hi (6) (7) et cetera... by the choice of \u03b10 just mentioned above, here. therefore all these scalar products seem to vanish. but the attentive reader can notice that, yes, does vanish, but hi does not. this will create big di\ufb03culty below. however, let us assume for while that in estimating \u03b10(\u03c1)) from below we will be left with sum of terms estimated by and with the following \u03c0\u03c0 terms that we cannot cancel out: \u03c0\u03c0(\u03b10, t\u2217) (\u03b10, hi hi (27) (\u03b10, hi (\u03b10, hi hi (\u03b10, hi we do not write the scalar product with \u03c1, \u03c3h(\u03c1) u, but we keep it in mind. the range of i, can be naturally associated with the de\ufb01nition of and with the nature of \u03b10: de\ufb01nitely u, but for example the term with hi disappears if u, but \u02c6i \u02c6j is not inside u. this term will be \u201ccut-out\u201d by the scalar product with \u03c1, \u03c3h(\u03c1) u. but notice that all terms such that stay, they are not cut-out. this is because by de\ufb01nition 4.6 we have \u02c6i \u02c6j as soon as we like the \ufb01rst line of (27) (and we also like the \ufb01rst line of (26)). if the \ufb01rst line were alone in (27) then: \u2225\u03c0\u03c0(\u03b10, (\u03b10, odd odd (b, and we would get (28) \u2225t b\u2225 \u2225t odd odd (b, which is \u201calmost\u201d what we want (in fact that would be 25 percent of what we want). of course we want more, namely, the summation not restricted to just even-even r. so we have several problems: (1) how to get the summation over all r\u2019s inside (2) what to do with terms iv of course we need summation over all not just (odd, odd), but still, (28) would be step in the direction of proving the ultimate estimate: (29) \u2225t b\u2225 (b, dyadic bi-parameter repeated commutator and dyadic product 17 5.3. coming back to \u03b10 (\u03c1)) and trying other test functions. remark 5.2. we can try to use as test functions instead of in (26). again it is easy to see that if we choose instead of \u03b10 deeper function \u03b11 is 2\u2212deep in then after bookkeeping we see that in \u03b11(\u03b11))| only the \u03c0\u03c0 part rests because all other parts either vanish or are smaller than let us look at (we use that (t )2 0) \u03c0\u03c0(\u03b11, (\u03b11, hi (30) (\u03b11, hi we immediately conclude that the second sum restricted to and even is orthogonal to what is rest, so (31) even,even (\u03b11, hi c\u2225t let us look at (we use that (t )2 0) \u03c0\u03c0(\u03b11, (\u03b11, hi (32) (\u03b11, hi we again conclude that the second sum restricted to and even is orthogonal to what is rest, so the same inequality follows: (33) even,even (\u03b11, hi c\u2225t exactly the same inequality follows if we consider \u03c0\u03c0(\u03b11, but what would be needed is the \u201copposite\u201d sum estimate: (34) odd,odd (\u03b11, hi c\u2225t because exactly this sum entangles with the \ufb01rst line of (26): \ufffd(\u03b10, hi problem. so far we did not guess how to get (28) from estimating formula (27), not to mention that (29) rests even less clear. but we will proceed in the next two sections. 6. one parameter case and (27) let us take look at the one parameter case. we obviously can assume that we have localization, and that eventually we just need to \ufb01nd out how to estimate the analog of, say, (27) from below. here is this analog. it has two rather than four sums because we are in one parameter situation. the \u201copen\u201d set in one parameter case is just dyadic interval we can assume that \u03c0(\u03b10, \u2217) (b, hi)\u27e8t (b, \u2217hi (35) (b, hi)\u27e8t (b, hi)t \u2217hi before plunging into the consideration of (35), let us notice that the choice of in two parameter case was initiated by the wish to stay only with \u03c0\u03c0 part and to bring many other parts of the commutator to zero. 18 i. holmes, s. treil, and a. volberg such problem is not present in one parameter case. in this case we can notice that the estimate of the commutator can be reduced to the estimate from below of the following expression, where the test function \u0338= in fact we can choose test function di\ufb00erently. so consider the following more general expression \u03c0(\u03b10, (b, hi)\u27e8t (b, \u2217hi (36) let us now choose very simple \u0338= here it is convenient to think that is odd (and normalized 1/2). in this case our choice of test function is the \u201cuncle\u201d function: here is sibling of by the de\ufb01nition of \u2217, 0, we plug into (36) above and disappears. the estimate of gives (b, )\u22252 c\u2225the commutator\u22252 in fact, for even the choice would work. we are done. remark 6.1. what serves as \u201cthe uncle\u201d function fu of in the two parameter case\u2013this is not clear. now let us come back to (35), and let us try to obtain c\u2225the commutator\u22252 directly from (35). recall that \u2217hi sgn(i, for odd and for even. let us consider such that \u02c6i and then we have term sgn(i, in \u2212b sum (this is when is odd, when is even this term vanishes), and we have another term h\u02c6i (b, h\u02c6i) with coe\ufb03cient ci := \u27e8t this term is always present, for even and odd i. let us understand, what is ci, which is equal to the constant value of the constant function (recall that \u02c6i let denote the father of denote the father of et cetera. hence (t we recall that 1. de\ufb01nitely the \ufb01rst term of the series is at most by absolute value (it can be zero too). in fact, gives the contribution of and gives the contribution 2. the next term of the series is at most 2: gives the contribution of and gives the contribution or 2. it is clear that (37) |ci| we see that for such that \u02c6i the sum of (35) has the term h\u02c6i (\u2212 sgn(i, \u02c6i) [(b, hi) di(b, h\u02c6i)], |di| when is odd, and the term h\u02c6i (sgn(i, \u02c6i) di(b, h\u02c6i), |di| when is even. dyadic bi-parameter repeated commutator and dyadic product 19 all terms are orthogonal, and we get (38) |(b, hi) di(b, c\u2225the commutator\u22252 and (39) |(b, |(b, c\u2225the commutator\u22252 from these two inequalities and from the estimates of di, we can immediately obtain (40) |(b, c\u2225the commutator\u22252 notice that (38) alone would give us an interesting information. we want to get from (38) alone that (41) (b, )\u22252 c\u2225the commutator\u22252 (this is stated in (39), but suppose that we do not have it, suppose that we have only (38).) if this is obtained, then it is easy to get (42) (b, )\u22252 c\u2225the commutator\u22252 now (38) (41) seems is easy by the following lemmas. lemma let |dn| 1, let := an dnan\u22121. assume that := \u21132, then := {an}\u221e \u21132. proof. we can write an dnan\u22121 where := dn, dndn\u22121, therefore, ab, where is triangular matrix (with one the diagonal), which clearly satis\ufb01es schur test. hence, \u21132 \u21132 and lemma is proved. in fact we need this type of lemma on the dyadic tree of dyadic lattice but here it is. lemma let m(i, j) is matrix on such that m(i, j) if and for m(i, j) |i| |j| \ufffdc otherwise. then this matrix is bounded operator from \u21132(t to itself. proof. this matrix acts boundedly from \u2113\u221e(t to ). in fact, m(i, j) \u2200i but its adjoint also acts boundedly from \u2113\u221e(t to ). in fact m(i, j) \u2200j by interpolation it maps \u21132(t to itself boundedly. 20 i. holmes, s. treil, and a. volberg 7. back to the estimate from below of (26), (27) first we just loosely discuss what we are going to do. the \u201cactual idea\u201d follows in subsection 7.1. disclaimer: subsection 7.1 contains three deliberate mistakes. we will indicate all of them at the end of subsection 7.1. if the reader can circumvent those problems, then the main result will be proved: repeated dyadic paraproduct is bounded if and only if its symbol is in chang\u2013fe\ufb00erman dyadic remark 7.1. we actually prove this result in theorem 9.2 below, but only under the extra conditions on the symbol. we cannot get rid of those extra assumptions at this time. let us repeat: we just need to be able to estimate the sum in (26) from below by constant or by hi even the estimate from below by is deep, even,even (b, hi would be meaningful achievement. similarly, even the estimate from below by is deep, odd,odd (b, hi would be meaningful achievement as well. recall \u03c0\u03c0(\u03b10, t) (\u03b10, hi (43) (\u03b10, hi (\u03b10, hi (\u03b10, hi iv de\ufb01nition 7.2. let \u03b51 100. the rectangle is called \u03b51 small if \u03b51 lemma let be m-deep in u, 2. let be \u03b51-small. then \u02c6i and \u02c6j, \u02c6r \u02c6i \u02c6j are \u03b51-small. proof. let us consider we look at and notice that is proportional to h\u02c6i, so is proportional to h\u02c6i hence is proportional to hi where is the parent of \u02c6i (grandparent of i). the scalar product with returns if is at least deep. de\ufb01nition 7.3. let temporarily denote for j. we proved that (44) if is at least 2-deep. therefore, is also \u03b51 small. the same proof works for and then going from to \u02c6r involves the same reasoning. in particular we get (45) \u02dc1 \u02c6r) and we conclude that all \u02c6r are \u03b51 small as soon as is such. dyadic bi-parameter repeated commutator and dyadic product 21 lemma 10 let be such that and moreover is at least deep. let be \u03b51-small. let i\u2032 ch(i), j\u2032 then \u02c6i\u2032 and \u02c6j\u2032, \u02c6i\u2032 \u02c6j\u2032 are \u03b51-small. proof. the proof is exactly the same, again the di\ufb00erence of two characteristic functions normalized as we did gives us proportional to haar function, moves it only one step up, and so the result is still orthogonal to now we can prove (only with and interchanged) that the same (50) will hold for the terms instead of and then, again we can repeat the same reasoning for the terms conclusion: 1) in (26) either all terms are 100 small, or 2) two brand of terms, all \u02dc1i\u2297t are 100 small and all \u02dc1i\u2297t are not 100 small (there are three choices of such situation), or 3) one brand of terms, all are all 100 small, and two other brands are not 100 small, or 4) all terms of all three brands are not 100 small. let us consider item 1) and item 4). the rest should follow suit. so suppose all terms of all three brands are 100 small. then notice that (b, hi from the \ufb01rst line of (26) has coe\ufb03cient 1\u2013and of course all this stands in front of some hi\u2032 (children). if we collect the same hi\u2032 terms from all other lines of (26) the coe\ufb03cient (maybe not (b, hi but some other haar coe\ufb03cient of some rectangle \u201cclose\u201d to j) will appear but with the factor less or equal than 100 by absolute value. so we will have that the sum in (26) is exactly equal to the sum of orthogonal terms [1 (b, hi )]hi\u2032 where stand for some hi\u2032\u2032 \u00d7j\u2032\u2032 1, 2, 3, where i\u2032\u2032 j\u2032\u2032 is close relative of j. hence (26) has the norm squared bounded from below by the sum |1 (b, hi )|2 where the summation is over all those j, that are, say, at least 2-deep in and i, are both even. and of course |\u03b5i| 1/100. then using the analog of lemma but for double tree, we conclude that the square of the norm of the sum in (26) is bounded from below by the sum |(b, hi where the summation is over all j, say, at least 2-deep in and and i, are both even, and we got what we wanted at least for even, even part of b. let us consider now item 4): all coe\ufb03cients of all three brands are bigger than 100 by absolute value. let us start with the fourth line of (26). it contains even, even sum, and this sum is orthogonal to the rest. so immediately we get (using that 1/100 by assumption 4)) (46) ieven, even (b, hi c\u2225sum of (26)\u22252 so looks like we estimated \u2225beven,even\u2225bmochf from above by the norm of the repeated commutator. 22 i. holmes, s. treil, and a. volberg 7.1. \u201ca proof\u201d of the chang\u2013fe\ufb00erman norm estimate of bodd,odd. in this subsection we prefer to work with rather than and we notice that this change is basically symmetric. so our goal will be to estimate chang\u2013fe\ufb00erman norm of beven,even by the norm of [t [t b]]. absolutely symmetrically to what has been done above we can reduce the above mentioned task to estimating the norm of the following sum from below by chang\u2013fe\ufb00erman norm of bodd,odd. \u03c0\u03c0(\u03b10, t\u2217) (\u03b10, hi hi (47) (\u03b10, hi (\u03b10, hi hi (\u03b10, hi iv the summation is over i, j, u. de\ufb01nition 7.4. let \u03b51 100. the rectangle is called \u03b51 small if \u03b51 let us start with the fourth line of (47). it contains i, (odd, odd) sum, and this sum is orthogonal to the rest. so immediately we get, using the assumption \u03b52, that (48) iodd, odd (b, hi \u2225sum of (26)\u22252 the next lemma says that if \u03b52 happens for one inside it happens for all such rectangles inside u. (if is connected, which we can assume by considering connected components one by one.) we just saw that the assumption \u03b52 implies (48). let us now assume that \u03b52 for (odd, odd) i, j, then by lemmas below we can assume that for all inside we have \u03b52 de\ufb01nition 7.5. let temporarily denote for j. lemma 11 let be m-deep in u, 2. let be \u03b51-small. then \u02c6i and \u02c6j, \u02c6r \u02c6i \u02c6j are \u03b51-small. proof. let us consider we look at and notice that is proportional to h\u02c6i, so is proportional to h\u02c6i hence is proportional to hi where is the parent of \u02c6i (grandparent of i). the scalar product with returns if is in u. we proved that (49) if is in u. therefore, is also \u03b51 small. the same proof works for and then going from to \u02c6r involves the same reasoning. in particular we get (50) \u02c6r) and we conclude that all \u02c6r are \u03b51 small as soon as is such. notice that there was nothing special about in this equality. so we can write the same thing for the action by and for the action of dyadic bi-parameter repeated commutator and dyadic product 23 (51) \u02c6r) (52) r) lemma 12 let be such that and moreover is at least deep. let be inside u, and let it be \u03b51-small. let i\u2032 ch(i), j\u2032 then i\u2032 and j\u2032, i\u2032 j\u2032 are \u03b51-small. proof. the proof is exactly the same, again the di\ufb00erence of two characteristic functions normalized as we did gives us function proportional to haar function, moves it only one step down, and so the result is still orthogonal to let us \ufb01x two small constants \u03b52 << \u03b51 100. we look at the terms in (47) and we know by lemma 11 and lemma 12 that all those terms are the same. so if they are for all i, (even, even) are like this: \u03b52 then (46) is immediately true with \u03b5\u22122 now suppose that all of those terms are like that: \u03b52 notice that then the same is true for i, (even, odd). in fact, this follows from (52). those (even, odd) output terms also happens in this sum (\u03b10, hi\u2032 hi\u2032 when i\u2032, j\u2032 are (odd, odd). notice that the sum itself is in (even, odd) space. therefore, when we consider the (even, odd) output it can come only from the fourth and the third line of (47). in fact, the \ufb01rst line of (47) is in (even, even) space and the second line is totally in (odd, even) space. therefore, each term of this (even, odd) part of the output will have the form (i odd, odd): hi h\u02c6i hj)(smaller by abs. value than \u03b52) (\u03b10, hi hence, taking (even, odd) part of (47) we have iodd,jodd |(\u03b10, h\u02c6i hj)(smaller by abs. value than \u03b52) (\u03b10, h\u02c6i c\u2225sum in (47)\u22252 now we remember that either 1) all \u03b51 >> \u03b52; or 2) all \u03b51. let us formulate now an analog of lemma 8, but for dyadic bi-tree bi-tree is graph of dyadic rectangles, where the edges connect rectangles i\ufb00 one of them is inside the other and the ratio of their areas is 2. in the next lemma j, r\u2032 i\u2032 j\u2032. in other words r, r\u2032 are two end-points of the same edge if either is parent of i\u2032, j\u2032 j, or i\u2032 is parent of i, j\u2032 j; or is parent of j\u2032, i\u2032 i, or j\u2032 is parent of j, i\u2032 i. lemma 13 let us consider matrix enumerated by the couples of vertices (r, r\u2032), r\u2032 \u00d7t r\u2032 \u00d7t let its matrix elements r\u2032) unless r\u2032 or r\u2032 r. in the latter cases, if r\u2032, then r\u2032) |r| |r\u2032| \ufffda and if r\u2032 r, then r\u2032) |r\u2032| |r| \ufffda where is su\ufb03ciently large constant. then this matrix de\ufb01nes bounded operator from \u21132(t to itself. proof. this is easy to see by applying schur\u2019s test as in the proof of lemma 8. 24 i. holmes, s. treil, and a. volberg if we have 1), then by lemma 13 (it is an analog of lemma for bi-tree) we will get from the last display (53) iodd,jodd (\u03b10, hi \u2225sum in (47)\u22252 this is because \u03b51 >> \u03b52. and (53) is exactly (48). at this moment we established the following dichotomy: either we have proved (48), or, otherwise we have \u03b51 (for all i, j!), and we also have \u03b52 (again for all i, j!). when we say \u201call\u201d we mean all i, such that u. (we think here that is connected, this does not restrict the generality as we can consider the connected components of one by one.) now we call the attention of the reader that third and second lines of (47) are totally symmetric under the interchange of and j. so we consider again two cases: either 1) \u03b51 (for all i, j); or, 2) \u03b51 (for all i, j). in the second case we obtain form of (53) symmetric under versus exchange: (54) iodd,jodd (\u03b10, hi \u2225sum in (47)\u22252 but (54) is exactly (48). now we are left with case 1), namely, \u03b51 (for all i, j). we remind that we came to the following conclusion: either we already proved (48) or we have two other sets of inequalities: \u03b51 (for all i, j!), and we also have \u03b52 (again for all i, j!). again, when we say \u201call\u201d we mean all i, such that u. so all three terms for all i, are small. at this moment we consider the \ufb01rst line of (47). notice that its output is in the (even, even) space by the de\ufb01nition of all other three lines also have some of their output in (even, even) space. so we collect the factor in front of the same hi\u2032 i\u2032, j\u2032 being (even, even) from all four lines of (47). we will have that the (even, even) part of the sum in (47) is exactly equal to the sum of orthogonal terms (\u02c6i, \u02c6j are (even, even)): [1 (b, hi )]h\u02c6i where i, are children of of \u02c6i, \u02c6j correspondingly, where dots stand for some hi\u2032\u2032 \u00d7j\u2032\u2032 1, 2, 3, and where i\u2032\u2032 j\u2032\u2032 is close relative of j. these close relatives will be h\u02c6i hi and h\u02c6i j. also |\u02dc\u03b51| \u03b51 << \u03b52, |\u02dc\u03b52| \u03b51 << \u03b52, |\u02dc\u03b53| \u03b52. hence (47) has the norm squared bounded from below by the sum are odd,odd... |1 (b, hi h\u02c6i hi j) h\u02c6i where the summation is over all those j, that are inside and i, are both odd. as we have seen |\u02dc\u03b51| \u03b51 << \u03b52, |\u02dc\u03b52| \u03b51 << \u03b52, |\u02dc\u03b53| \u03b52. using this smallness and lemma 13 for double tree, we conclude that the square of the norm of the sum in (47) is bounded from below by the sum |(b, hi where the summation is over all j, say, at least 1-deep in and and i, are both odd, and we got what we wanted at least for odd, odd part of b, namely we got (46). we just proved the following \u201ctheorem\u201d. dyadic bi-parameter repeated commutator and dyadic product 25 theorem 7.6 let be dyadic shifts introduced at the beginning of this article. there is universal constant such that \u2225bodd,odd\u2225bmochf \u2225[t [t b]]\u2225 now if we have repeated commutator with not just one but with shifts of our type (our shift is even even to odd odd, but there are three analogous shifts obviously with di\ufb00erent input/output). if repeated commutator of with all these shifts are bounded we conclude as before that the full norm is the estimate from above for the maximum of norms of those repeated commutators with multiplication by b. to formulate the theorem, let us denote the shifts we used above by =: eo =: eo notice that those shifts have one drawback: they have huge kernels. so it is easy to understand that may be repeated commutator looses some information about the symbol b. however we have three more couple eo eo then we can repeat the argument above for each of those couples. then we get the \u201ctheorem\u201d: theorem 7.7 there universal constant such that \u2225[t eo [t eo b]]\u2225, \u2225[t [t b]]\u2225, \u2225[t eo [t b]]\u2225, \u2225[t [t eo b]]\u2225 it is well known that the estimates from above in this theorem also holds, see 7.2. discussion of the deliberate mistakes. (1) in lemmas 9, 11, and equation (49) we checked the claim for \u02c6i j, and it is correct. but it is incorrect for and \u02c6j. in other words it is not true that one small coe\ufb03cients automatically means that all of them are small. we can \u201cspread smallness\u201d horizontally, but not vertically. lemmas 9, 11 were about the similar claims about would allow to \u201cspread smallness\u201d vertically, but not horizontally. so we cannot \u201cspread smallness\u201d throughout the whole of connected set u. (2) in estimating the repeated paraproduct from below we can disregard all parts with (see section 8), as they are bounded by bmor norm of the symbol. this is true. also it is trues that substituting eliminates all zz sums. but it is not true that substituting eliminates all \u03c0z, z\u03c0 terms of repeated paraproduct and leaves us only with \u03c0\u03c0 part. in fact, if one take look at all the 16 \ufb01rst sums comprising repeated paraproduct except for parts with (see the beginning of section 9), we can see that \u03c0z unfortunately does not cancel out completely. the term contains (t and this term is not obliged to be zero. (but (t is zero.) again contains (t and this term is not obliged to be zero. so survive, which is very unfortunate, they join all for lines of \u03c0\u03c0 survivors. moreover, by the same reason and also survive. the more terms survive (now we have of them, the more di\ufb03cult is to separate their action. (3) at least all \u03c0\u03c0 terms are almost orthogonal. adding and makes the survival part not to be the sum of almost orthogonal terms. (4) let us assume for while that we are left only with almost orthogonal part, that is, with \u03c0\u03c0. this would happen if we consider the repeated commutator, but not with multiplication by but with bi-parameter paraproduct \u03c0b. this is also interesting, in principle. let us take look how we can use almost orthogonality. so \u03b10 and we collect the terms in front of in \u03c0\u03c0 all four 26 i. holmes, s. treil, and a. volberg lines below. here is the coe\ufb03cient in front of recall that k, are such that \u02c6k \u02c6l u. \u02c6k) \u02dc1 \u02dc1 (b, (b, (b, \u02dc1 (b, (b, =: so we are able to conclude immediately that the boundedness of the repeated commutator with bi-parameter \u03c0b (not with multiplication by b!) implies that (55) k,l: k\u00d7\u02c6l\u2282u k,l \u2225repeated commutator with but the ultimate goal would be to get di\ufb00erent inequality: (56) k,l: k\u00d7\u02c6l\u2282u (b, \u2225repeated commutator with those inequalities are close to each other: just by the previous calculation of above. but they are not the same. how to get rid of extra terms in lemma 13 should help, but to apply it we need the smallness of \u201cparasite\u201d terms \u02dc1 but the size of those terms is probably approximately 1, and as we already noticed lemma 11, that dealt with this size, is only partially true. (5) and \ufb01nal di\ufb03culty is that in (b, above we have only \u02c6k, \u02c6l (even, even) by the de\ufb01nition of our dyadic shifts. 8. the lists of building blocks of repeated commutators with and t\u2217 here are all the blocks of repeated commutator with the blocks of repeated commutator with are exactly the same, only stars are deleted. all parts with letter are estimated by \u2225b\u2225bmor. under the localization to we put where is the enlargement of then zz part vanishes and the rest stays and should be estimated from below. in the next section we show that this is easy if has some extra property. in this section we show how di\ufb03cult is the problem when this extra property is not assumed. however, there is hope because the main part that is left after localization is \u03c0\u03c0 and it has the property of almost orthogonality. \u03c0\u03c0 (b, hi hi) (t (b, hi hi) (b, hi (t (b, hi dyadic bi-parameter repeated commutator and dyadic product 27 \u03c0z (b, hi hi) (t (b, hi f, hi) (b, hi (t (b, hi f, z\u03c0 (b, hi hi (t (b, hi f, hi (b, hi f, hi (t (b, hi f, hi zz (b, hi hi (t (b, hi hi (b, hi f, hi (t (b, hi f, hi \u03c0d (b, hi \u02c6j| (t hi) (b, hi f, \u02c6j| (hi) (b, hi hi \u02c6j| (t (b, hi f, hi \u02c6j| d\u03c0 (b, h\u02c6i hi |\u02c6i| (h\u02c6i) (b, h\u02c6i f, hi |\u02c6i| (h\u02c6i) (b, h\u02c6i hi |\u02c6i| (h\u02c6i) (t (b, h\u02c6i f, hi |\u02c6i| (h\u02c6i) dd (b, h\u02c6i hi 28 i. holmes, s. treil, and a. volberg 9. why everything works for skipping scales? as nothing works for general b, let us assume that our skips scales. we mean here extra assumption that (57) (b, hi \u0338= j, are even, even in this special case we get the following theorem 9.1 let satisfy (57). then for any dyadic open set we have (b, hi proof. just in front of this section the reader can see the table of all parts of the commutator. it is easy to prove that all parts d\u03c0, \u03c0d, are bounded by the dd part is bounded just be sup (b, hi 2, which is bounded by again. if is reduced to \u03b10\u2013the part of with haar spectrum in we can consider such reduced \u03b10 by lemma 2. at the same times this means that i, in \u03c0\u03c0, \u03c0z, z\u03c0, zz parts are such that if where is chosen in (4.6), |u| then zz part vanishes, if is reduced to \u03b10\u2013the part of with haar spectrum in if in part the \ufb01rst and the second lines vanish, but do not vanish, in z\u03c0 part the \ufb01rst and the third lines vanish but do not vanish. notice that by assumption (57) are in (even, any), and are in (any, even). let us take look at the \u03c0\u03c01-the \ufb01rst line of \u03c0\u03c0 part. it is is (odd, odd) part, and so it is orthogonal to it is also orthogonal to \u03c0\u03c02, \u03c0\u03c03, \u03c0\u03c04-the second, third and fourth lines of \u03c0\u03c0 part. in fact, by assumption (57) \u03c0\u03c02 is in (odd, even), \u03c0\u03c03 is in (even, odd), \u03c0\u03c02 is in (even, even) parts. therefore, (58) (\u03b10, hi \u2225\u03c0\u03c01(\u03b10, \u2225\u03c0\u03c0(\u03b10, on the other hand, sup (\u03c1))| sup \u03b10 (\u03c1))| \u2225\u03c0\u03c0(\u03b10, parts with \u2225\u03c0\u03c0(\u03b10, \u2225parts with \u03b10)\u22252 now we already noticed that all parts d\u03c0, \u03c0d, dd are bounded by and 0. this and (58) prove theorem. theorem 9.2 let satisfy (57). then for any dyadic open set (b, hi dyadic bi-parameter repeated commutator and dyadic product 29 proof. let us consider two cases: 1) \u2225b\u2225bmor 2) \u2225b\u2225bmor in the second case we use section and conclude the claim of the theorem. in the \ufb01rst case we use theorem 9.1. we choose the dyadic open set that gives us the chang\u2013fe\ufb00erman norm of b, and we write down the conclusion of theorem 9.1. the left hand side of (b, hi is bmochf because of extremal property of now we use \u2225b\u2225bmor to absorb into the left hand side. it is well known that the estimates from above in this theorem also holds, see 10. counterexample many results su\ufb00er from the same gap as [fl], if they all rely on the claim of the form that follows or similar claim: (59) \u2225\u03c6\u22252 where is projection given by fourier multiplier whose symbol is the indicator of product of halfspaces (in the original case of [fl], simply r+ r+ and the fourier transform of is \u201csymmetric\u201d. in practice, takes the form |\u03b1|2 for some function analytic in +. obviously is non-negative and in particular real-valued, so some symmetry of fourier transform should follow. in the one parameter case the simple symmetry shows that the previous claim is obviously correct. but not so in two parameter case anymore, as an example below shows. the statement (59) should be avoided (in this generality |\u03b1|2, being nice analytic function in +) in the future corrected proof. however, something like that should be in the proof, as it is the only estimate from below in the whole reasoning: all other estimates in [fl] are the estimates of operators from above. let be an analytic function in c+ c+ and let it be just fourier transform of \u03c8(\u03be), (\u03be1, \u03be2) ++, let the support of be in := [0, 2]2. in what follows d\u03be \u00af\u03c8(\u03b7)d\u03bed\u03b7 \u03be2)\u03c8(\u03be1 \u03be2 hence fourier transform \u03c8(\u03be1, \u03be2)\u03c8(\u03be1 \u03be2 if is characteristic function of neighborhood of \u03be1 \u03be2 1, \u03bei 0, then for positive vectors this quantity is uniformly bounded by c\u01eb. moreover, this quantity is zero if positive vector has norm bigger than c\u01eb. hence \u01eb2 \u01eb2 \u01eb2 on the other hand, \u2225\u03b1\u22252 \u01eb1/2 also let us look at now we look at \u03c8(\u03be1, \u03be2)\u03c8(\u03be1 \u03be2 30 i. holmes, s. treil, and a. volberg for positive vector t. we can see that this is of order for positive vectors such that they \ufb01ll-in the domain inside angle of size and diameter and of total measure of order \u01eb. thus \u01eb3 so \u2225\u03b1\u22252 \u2225|\u03b1|2\u22252 \u01eb3/2 in fact, \u2225\u03b1\u22252 \u2225|\u03b1|2\u22252 \u01eb3/2 so both inequalities below are false: 2; 4. normalization of does not help. let \u02dc\u03b1 \u01eb\u22121/2\u03b1. then \u2225\u02dc\u03b1\u22252 1, \u2225\u02dc\u03b1\u22252 \u2225|\u02dc\u03b1|2\u22252 \u01eb1/2 and so the inequality below is false: c. even though \u2225\u02dc\u03b1\u22252 1. thus the inequality on page 208 line top of [l] cannot be true as written. similarly, inequalities in [fl] on page 149 line at the end of the page cannot be true as written. symmetry works in estimating from below positive frequency part of the fourier (of real function) via the whole fourier transform of this function perfectly well for functions of one variable. but for functions of two variables this does not work. even if the function is a) positive and b) the modulus squared of analytic function in c+ c+ as the example above shows. one can guess what is missing is one more normalization (which we do not have in the example above): (60) \u2225\u02dc\u03b1\u22252 \u2225\u02dc\u03b1\u22254 however, there is modi\ufb01cation of this counterexample suggested by t. hyt\u00a8onen that has this property as well.",
    "Abstract_Original": ". Let T is a certain tensor product of simple dyadic shifts de\ufb01ned below. We prove here that\nfor dyadic bi-parameter repeated commutator its norm can be estimated from below by Chang-Fe\ufb00erman\nBMO norm pertinent to its symbol. See Theorems 9.1, 9.2 at the end of this article. But this is done below\nunder an extra assumption on the Haar\u2013Fourier side of the symbol. In Section 7 we carefully analyze what\ngoes wrong in the absence of this extra assumption. At the end of this note we also list a counterexample\nto the existing proof of characterization of bi-parameter repeated commutator with the Hilbert transforms.\nThis is a counterexample to the proof, and it is not a counterexample to the statement of factorization result\nin bi-disc, or to Nehari\u2019s theorem in bi-disc.\n1. ",
    "Original_Text": ". Let T is a certain tensor product of simple dyadic shifts de\ufb01ned below. We prove here that\nfor dyadic bi-parameter repeated commutator its norm can be estimated from below by Chang-Fe\ufb00erman\nBMO norm pertinent to its symbol. See Theorems 9.1, 9.2 at the end of this article. But this is done below\nunder an extra assumption on the Haar\u2013Fourier side of the symbol. In Section 7 we carefully analyze what\ngoes wrong in the absence of this extra assumption. At the end of this note we also list a counterexample\nto the existing proof of characterization of bi-parameter repeated commutator with the Hilbert transforms.\nThis is a counterexample to the proof, and it is not a counterexample to the statement of factorization result\nin bi-disc, or to Nehari\u2019s theorem in bi-disc.\n1. Introduction\nIn [HTV] we considered the characterization of the symbols of bounded commutator of multiplication\nand simple dyadic bi-parameter singular integral. In this note we are considering a dyadic model of repeated\nbi-parameter commutator. It has been noticed that repeated commutators are much harder to treat than\nthe simple ones. The former still await the understanding, see below. The latter are well understood in\nmany situations, see [FS], [DLWY], [DKPS], [HTV].\nBi-parameter theory is notoriously more di\ufb03cult than the more classical one parameter theory of singular\nintegrals. The good place to get acquainted with multi-parameter speci\ufb01cs are the papers of J.-L. Journ\u00b4e\n[JLJ], [JLJ2] and Muscalu\u2013Pipher\u2013Tao\u2013Thiele [MPTT1], [MPTT2]. The applications to analysis in polydisc\ncan be found in [Ch], [ChF], [ChF2].\nIt is well known [ChF, ChF2, JLJ, JLJ2] that in the multi-parameter setting all concepts of Carleson\nmeasure, BMO, John\u2013Nirenberg inequality, Calder\u00b4on\u2013Zygmund decomposition (used in classical theory)\nare much more delicate. Paper [MPTT1] develops a completely new approach to prove natural tri-linear\nbi-parameter estimates on bi-parameter paraproducts, especially outside of Banach range.\nIn [MPTT1]\nJourn\u00b4e\u2019s lemma [JLJ2] was used, but the approach did not generalize to multi-parameter paraproduct forms.\nThis issue was resolved in [MPTT2], where a simpli\ufb01ed method was used to address the multi-parameter\nparaproducts. But repeated bi-parameter commutators involve several bi-parameter paraproducts at once.\nHence, the estimate of repeated bi-parameter commutators from below becomes tough: one needs to isolate\nthose paraproducts one from another. And they do not like to be isolated.\nOne of the new feature of the multi-parameter theory is captured by several di\ufb00erent de\ufb01nitions of BMO,\nsee [FS], [Ch]. The necessity of those new e\ufb00ects was discovered \ufb01rst by Carleson [Car], see also [Tao].\nThe di\ufb03culties with multi-parameter theory was highlighted recently by two very di\ufb00erent series of papers.\nOne concerns itself with the Carleson measure and Carleson embedding on polydisc and on multi-tree, see,\ne.g. [AMPS18], [AHMV], [MPV], [MPVZ]. These papers, roughly speaking, are devoted to harmonic analysis\n(Carleson embedding in particular) on graphs with cycles. This theory is drastically di\ufb00erent from the usual\none, and it is much more di\ufb03cult.\n10010 Mathematics Subject Classi\ufb01cation. 42B100, 42B35, 47A100.\nKey words and phrases. Bi-parameter Carleson embedding, bi-parameter Hankel operators, dyadic model.\nIH is partially supported by the NSF an NSF Postdoc under Award No.1606270.\nST is partially supported by the NSF DMS 1856719.\nAV is partially supported by the NSF grant DMS 1900268 and by Alexander von Humboldt foundation.\n1\n2\nI. HOLMES, S. TREIL, AND A. VOLBERG\nAnother particularity of the multi-parameter theory is highlighted by the repeated commutator story.\nLacey and Ferguson [FL] found the characterization of the symbols that give us bounded \u201csmall Hankel\noperators\u201d. It was a breakthrough article that gave a multi-parameter Nehari theorem and a long searched\nafter factorization of bi-parameter Hardy space H1. It was exactly equivalent to a bi-parameter \u201crepeated\ncommutator characterization\u201d. Several papers followed where \u201cbi-\u201d was upgraded to \u201cmulti-\u201d, and where\nrepeated commutation was performed with di\ufb00erent classical singular integrals: [DP], [FL], [L], [LPPW],\n[LT].\nThere are many new and beautiful ideas in the above mentioned papers devoted to this subject. We also\nwant to mention [OPS], where the authors use an argument inspired by Toeplitz operators to show the lower\nbounds. It assumes the lower norm for the Hilbert transform claimed in [FL], [LPPW] as a black box. But\nthere is a problem with [FL] and with what followed.\nThat was a big breakthrough in multi-parameter theory. Unfortunately, [V] indicated a hole in the proofs\nof [FL], [L], and this circle of problems is still unsettled. See also Section 10 for the more detailed explanation.\nWe decided to simplify the problem to the \u201cbare bones\u201d, and to consider repeated commutators with the\nsimplest dyadic singular integral, namely, with the dyadic shift of order 1. The repeated commutator problem\npresented the same type of di\ufb03culty as in [FL] and subsequent papers. But we analyze these di\ufb03culties\nbelow. They become very clear (but still largely unsurmountable) in the dyadic case we consider below.\nHowever, with an extra assumption on the symbol of repeated commutator we managed to get the expected\nanswer, see Theorems 9.1, 9.2 at the end of this article. The expected answer is of course that the repeated\ncommutator is bounded if and only if the symbol belongs to dyadic Chang\u2013Fe\ufb00erman BMO. If symbol does\nbelong to dyadic Chang\u2013Fe\ufb00erman BMO then the repeated commutator is indeed bounded, see e.g. [LM].\nIn the opposite direction the only fully proved result so far is in [BP], but this paper requires that in\ufb01nitely\nmany commutators be bounded to conclude that the symbol is bounded.\nAs we already mentioned with an extra assumption on the symbol we can prove the necessity of dyadic\nChang\u2013Fe\ufb00erman BMO (see Theorems 9.1, 9.2 at the end of this article). We list carefully what are the\ndi\ufb03culties to be surmounted in the general case (without an extra assumption on the symbol), and what\nkind of combinatorial morass should be taken care of. This is left to a possibly more skillful reader.\n2. Repeated commutator\nLet D be the usual dyadic lattice on the line and D \u00d7 D be the family of dyadic rectangles on the plane.\nHaar functions are denote {hI}I\u2208D. We consider R = I \u00d7 J and hR = hI \u2297 hJ. Let T1 be the dyadic shift\nde\ufb01ned by on the functions of variable x:\nT1hI = hI+ \u2212 hI\u2212, if I is even;\nT1hI = 0, otherwise .\nLet T2 be the copy of T1, but acting on an independent variable y:\nT2hJ = hJ+ \u2212 hJ\u2212, if J is even;\nT2hJ = 0, otherwise .\nTest functions are functions f = f(x, y), and T := T1 \u2297 T2.\nWe are interested in the commutator\nT b := [T2, [T1, b]] = T2(T1b \u2212 bT1) \u2212 (T1b \u2212 bT1)T2 = T2T1b \u2212 T2bT1 \u2212 T1bT2 + bT1T2\nand in characterization of its boundedness. The ultimate goal is to prove that its boundedness is equivalent\nto\nb \u2208 BMOd,\nwhere BMO is understood in Chang\u2013Fe\ufb00erman de\ufb01nition. We always drop the superscript d as everything\nis dyadic below.\nSimple commutator [T1, b] can be naturally split to 3 parts: D, \u03c0, Z parts. They correspond to di\ufb00erent\nparts of the product operator f \u2192 b \u00b7 f.\nDYADIC BI-PARAMETER REPEATED COMMUTATOR AND DYADIC PRODUCT BMO\n3\nFirst D part follows.\n(b, f) \u2192 D(b, f) :=\n\ufffd\nI\n\ufffd\nI\u2032:I\u228aI\u2032\n\u2206I\u2032b \u00b7 \u2206If =\n\ufffd\nI\n(b, 1I/|I|)(f, hI)hI .\nNow compute commutator:\nT D(b, f) \u2212 D(b, T f) =\n\ufffd\nI\n(b, 1I/|I|)(f, hI)T hI \u2212\n\ufffd\nI\n(b, 1I/|I|)(T f, hI)hI .\nNow compute commutator again:\nT D(b, f) \u2212 D(b, T f) =\n\ufffd\nI\n\u27e8b\u27e9I(T (\u2206If) \u2212 \u2206I(T f)) .\nSo let us consider\nT (\u2206If) \u2212 \u2206I(T f)\nfor f = hK. Let K = I and let I be even (meaning |I| = 2\u22122k). Then T (\u2206IhK) = T hI = hI+ \u2212 hI\u2212, and\n\u2206I(T hK) = \u2206I(T hI) = 0.\nLet now K = I and let I be odd. Then T (\u2206IhK) = T hI = 0, and \u2206I(T hK) = \u2206I(T hI) = \u2206I(hI+\u2212hI\u2212) =\n0.\nWe conclude that T D(b, f) \u2212 D(b, T f) will have terms:\n\ufffd\nI even\n\u27e8b\u27e9I(f, hI)(hI+ \u2212 hI\u2212) =\n\ufffd\n\u02c6I even\n\u27e8b\u27e9\u02c6I(f, h\u02c6I)s(I, \u02c6I)hI =\n\ufffd\nI odd\n\u27e8b\u27e9\u02c6I(f, h\u02c6I)s(I, \u02c6I)hI,\nwhere\n(1)\ns(I, \u02c6I) =\n\ufffd\n1\nif I = (\u02c6I)+\n\u22121\notherwise.\nThere will be more terms. Denote by s(I) the dyadic sibling of I. Denote by \u02c6I the immediate predecessor\nof I. Let K = \u02c6I and let \u02c6I be even. Then \u2206IhK = 0, so T (\u2206IhK) = 0, but T hK = T h\u02c6I = h(\u02c6I)+ \u2212 h(\u02c6I)\u2212 and\nso T hK = \u00b1(hI \u2212 hs(I)), and, thus, \u2206IT hK = \u00b1hI. So for f = hK with K = \u02c6I and \u02c6I being even we have\nOn I : T (\u2206If) \u2212 \u2206I(T f) = \u2212hI, if I = (\u02c6I)+;\nT (\u2206If) \u2212 \u2206I(T f) = +hI if I = (\u02c6I)\u2212 .\nWe conclude that T D(b, f) \u2212 D(b, T f) will have also the following terms:\n\u2212\n\ufffd\n\u02c6I even\n\u27e8b\u27e9I(f, h\u02c6I)s(I, \u02c6I)hI = \u2212\n\ufffd\nI odd\n\u27e8b\u27e9I(f, h\u02c6I)s(I, \u02c6I)hI .\nAll other hK give zero contribution.\nWe get \ufb01nally that\n(2)\n(T1Db \u2212 DbT1)(f) = T1D(b, f) \u2212 D(b, T1f) =\n\ufffd\nI odd\n(\u27e8b\u27e9\u02c6I \u2212 \u27e8b\u27e9I)(f, h\u02c6I)s(I, \u02c6I)hI =\n\ufffd\nI odd\n\u22121\n|\u02c6I|1/2 (b, h\u02c6I)(f, h\u02c6I)hI .\nNow we need to commute with T2:\n[T2, [T1, Db]](f) =\n\ufffd\nIodd\nhI\n|I|1/2\n\ufffd\nT2{(b, h\u02c6I)(f, h\u02c6I)} \u2212 (b, h\u02c6I)(T2f, h\u02c6I)\n\ufffd\n.\nWe use now notations: bI := (b, hI) . Then we rewrite the previous display as follows:\n[T2, [T1, Db]](f) =\n\ufffd\nIodd\nhI\n|I|1/2 (T2b\u02c6I \u2212 b\u02c6IT2)(f\u02c6I) .\nNow multiplication in the second variable f\u02c6I \u2192 b\u02c6I \u00b7 f\u02c6I can be decomposed to D, \u03c0, Z parts.\n4\nI. HOLMES, S. TREIL, AND A. VOLBERG\n2.1. DD part of repeated commutator.\nDD = D2([T2, [T1, Db]](f)) =\n\ufffd\nIodd\nhI\n|I|1/2 Dpart(T2b\u02c6I \u2212 b\u02c6IT2)(f\u02c6I) =\n\ufffd\nIodd\nhI\n|I|1/2\n\ufffd\nJodd\nhJ\n|J|1/2 (b\u02c6I, h \u02c6\nJ)(f\u02c6I, h \u02c6\nJ) =\n\ufffd\nI,Jodd,odd\n(b, h\u02c6I \u2297 h \u02c6\nJ)(f, h\u02c6I \u2297 h \u02c6\nJ)hI(x) \u00b7 hJ(y)\n|I|1/2|J|1/2\n=\n\ufffd\nRodd,odd\n(b, h \u02c6\nR)(f, h \u02c6\nR) hR\n|R|1/2 .\n2.2. D\u03c0 part of repeated commutator.\nD\u03c0 = \u03c02([T2, [T1, Db]](f)) =\n\ufffd\nIodd\nhI\n|I|1/2 \u03c0part(T2b\u02c6I \u2212 b\u02c6IT2)(f\u02c6I) =\n\ufffd\nIodd\nhI\n|I|1/2 (T2\u03c0b\u02c6\nI \u2212 \u03c0b\u02c6\nIT2)(f\u02c6I)\nLet us recall what is \u03c0b.\n(b\u02c6I, f\u02c6I) \u2192 \u03c0b\u02c6\nIf\u02c6I :=\n\ufffd\nJ\n\ufffd\nJ\u2032:J\u228aJ\u2032\n\u2206Jb\u02c6I \u00b7 \u2206J\u2032f\u02c6I =\n\ufffd\nJ\n\u27e8f\u02c6I\u27e9J(b\u02c6I, hJ)hJ .\nNow compute commutator (below \u02dc1J := 1J/|J|).\nD\u03c0 =\n\ufffd\nIodd\nhI\n|I|1/2\n\ufffd\nT2\u03c0b\u02c6\nIf\u02c6I \u2212 \u03c0b\u02c6\nI (T2f\u02c6I)\n\ufffd\n=\n(3)\n\ufffd\nI odd\n\ufffd\nJeven\n(b, h\u02c6I \u2297 hJ)(f, h\u02c6I \u2297 \u02dc1J) hI\n|I|1/2 \u2297 T2hJ\u2212\n\ufffd\nI odd\n\ufffd\nJ\n(b, h\u02c6I \u2297 hJ)(T2f, h\u02c6I \u2297 \u02dc1J) hI\n|I|1/2 \u2297 hJ .\nLet us use the following notations for given I, J:\n(4)\nR = I \u00d7 J, \u02c6R = \u02c6I \u00d7 \u02c6J, \u02c6R1 = \u02c6I \u00d7 J, \u02c6R2 = I \u00d7 \u02c6J, hR = hI \u2297 hJ\n(5)\n\u02dc1R = \u02dc1I \u2297 \u02dc1J, h1R = hI \u2297 \u02dc1J, 1hR = \u02dc1I \u2297 hJ\n2.3. DZ part of repeated commutator.\nDZ = Z2([T2, [T1, Db]](f)) =\n\ufffd\nIodd\nhI\n|I|1/2 Zpart(T2b\u02c6I \u2212 b\u02c6IT2)(f\u02c6I) =\n\ufffd\nIodd\nhI\n|I|1/2 (T2Zb\u02c6\nI \u2212 Zb\u02c6\nIT2)(f\u02c6I)\nLet us recall what is Zb.\n(b\u02c6I, f\u02c6I) \u2192 Zb\u02c6\nIf\u02c6I :=\n\ufffd\nJ\n(b\u02c6I, hJ)(f\u02c6I, hJ)\u02dc1J .\nTherefore,\nDZ =\n\ufffd\nIodd\nhI\n|I|1/2\n\ufffd\nT2Zb\u02c6\nI(f\u02c6I) \u2212 Zb\u02c6\nI(T2f\u02c6I)\n\ufffd\n=\n(6)\n\ufffd\nI odd\n\ufffd\nJeven\n(b, h\u02c6I \u2297 hJ)(f, h\u02c6I \u2297 hJ) hI\n|I|1/2 \u2297 T2\u02dc1J\u2212\n\ufffd\nI odd\n\ufffd\nJ\n(b, h\u02c6I \u2297 hJ)(T2f, h\u02c6I\u2297, hJ) hI\n|I|1/2 \u2297 \u02dc1J .\nThis \ufb01nishes DD, D\u03c0, DZ parts of repeated commutator.\nNow we need to write \u03c0D, Z\u03c0 parts\u2013they are just symmetric with respect to exchange the \ufb01rst and the\nsecond variables. But also we need ZZ part, \u03c0Z, Z\u03c0 parts, and the most dangerous \u03c0\u03c0 part.\nDYADIC BI-PARAMETER REPEATED COMMUTATOR AND DYADIC PRODUCT BMO\n5\n2.4. \u03c0-parts. Here it is.\nT2(T1\u03c0bf \u2212 \u03c0b(T1f)) \u2212 (T1\u03c0b(T2f) \u2212 \u03c0b(T1T2f)) =\n=\n\ufffd\nT2T1\u03c0bf \u2212 T1\u03c0b(T2f)\n\ufffd\n\u2212\n\ufffd\nT2\u03c0b(T1f) \u2212 \u03c0b(T1T2f)\n\ufffd\n=\n\ufffd\nI\n(T2bI \u2212 bIT2)\u27e8f\u27e9IT1hI \u2212\n\ufffd\nI\n(T2bI \u2212 bIT2)\u27e8T1f\u27e9IhI .\nIts \u03c0D part is obtained by calculating D parts of commutator (T2bI \u2212 bIT2). So as before\n\u03c0D =\n(7)\n\ufffd\nIeven\n\ufffd\nJodd\n(b, hI \u2297 h \u02c6\nJ)(f, \u02dc1I \u2297 h \u02c6\nJ)T1hI \u2297\nhJ\n|J|1/2 \u2212\n\ufffd\nI\n\ufffd\nJodd\n(b, hI \u2297 h \u02c6\nJ)(T1f, \u02dc1I \u2297 hJ\u2297)hI \u2297\nhJ\n|J|1/2 .\nWe see that (7) is symmetric to (3), as it should be.\n\u03c0Z =\n(8)\n\ufffd\nIeven\n\ufffd\nJ\n(b, hI \u2297 hJ)(f, \u02dc1I \u2297 hJ)T1hI \u2297 T2\u02dc1J\u2212\n\ufffd\nIeven\n\ufffd\nJ\n(b, hI \u2297 hJ)(T2f, \u02dc1I \u2297 hJ)T1hI \u2297 \u02dc1J\u2212\n\ufffd\nIeven\n\ufffd\nJ\n(b, hI \u2297 hJ)(T1f, \u02dc1I \u2297 hJ)hI \u2297 T2\u02dc1J+\n\ufffd\nIeven\n\ufffd\nJ\n(b, hI \u2297 hJ)(T1T2f, \u02dc1I \u2297 hJ)hI \u2297 \u02dc1J .\nNow the most dangerous \u03c0\u03c0 part of repeated commutator follows:\n\u03c0\u03c0 =\n(9)\n\ufffd\nI,Jeven,even\n(b, hI \u2297 hJ)(f, \u02dc1I \u2297 \u02dc1J)T1hI \u2297 T2hJ\u2212\n\ufffd\nIany,Jeven\n(b, hI \u2297 hJ)(T1f, \u02dc1I \u2297 \u02dc1J)hI \u2297 T2hJ\u2212\n\ufffd\nIeven,Jany\n(b, hI \u2297 hJ)(T2f, \u02dc1I \u2297 \u02dc1J)T1hI \u2297 hJ+\n\ufffd\nIany,Jany\n(b, hI \u2297 hJ)(T1T2f, \u02dc1I \u2297 \u02dc1J)hI \u2297 hJ .\n2.5. Z-parts.\nZD =\n(10)\n\ufffd\nI\n\ufffd\nJodd\n(b, hI \u2297 h \u02c6\nJ)(f, hI \u2297 h \u02c6\nJ)T1\u02dc1I \u2297 hJ/|J|1/2\u2212\n\ufffd\nI\n\ufffd\nJodd\n(b, hI \u2297 h \u02c6\nJ)(T1f, hI \u2297 h \u02c6\nJ)\u02dc1I \u2297 hJ/J|1/2 .\n6\nI. HOLMES, S. TREIL, AND A. VOLBERG\nZ\u03c0 =\n(11)\n\ufffd\nIeven\n\ufffd\nJ\n(b, hI \u2297 hJ)(f, hI \u2297 \u02dc1J)T1\u02dc1I \u2297 T2hJ\u2212\n\ufffd\nIeven\n\ufffd\nJ\n(b, hI \u2297 hJ)(T1f, hI \u2297 \u02dc1J)\u02dc1I \u2297 T2hJ\u2212\n\ufffd\nIeven\n\ufffd\nJ\n(b, hI \u2297 hJ)(T2f, hI \u2297 \u02dc1J)T1\u02dc1I \u2297 hJ+\n\ufffd\nIeven\n\ufffd\nJ\n(b, hI \u2297 hJ)(T1T2f, hI \u2297 \u02dc1J)\u02dc1I \u2297 hJ .\nZZ =\n(12)\n\ufffd\nIeven\n\ufffd\nJ\n(b, hI \u2297 hJ)(f, hI \u2297 hJ)T1\u02dc1I \u2297 T2\u02dc1J\u2212\n\ufffd\nIeven\n\ufffd\nJ\n(b, hI \u2297 hJ)(T1f, hI \u2297 hJ)\u02dc1I \u2297 T2\u02dc1J\u2212\n\ufffd\nIeven\n\ufffd\nJ\n(b, hI \u2297 hJ)(T2f, hI \u2297 hJ)T1\u02dc1J \u2297 \u02dc1J+\n\ufffd\nIeven\n\ufffd\nJ\n(b, hI \u2297 hJ)(T1T2f, hI \u2297 hJ)\u02dc1J \u2297 \u02dc1J .\nDYADIC BI-PARAMETER REPEATED COMMUTATOR AND DYADIC PRODUCT BMO\n7\n3. Necessity of BMOr\nIn this section we show that if T b is bounded, then b \u2208 BMOr. To do this, we test T b on a Haar function\nhI\u2032\u2032 \u2297 hJ\u2032\u2032. This yields 25 operators, which we list below. Most paraproducts in Section 2 (like \u03c0\u03c0 for\nexample) yield 2-4 terms, so names such as \u03c0\u03c01 below simply indicate that the term comes from \u03c0\u03c0. The\noperators below also have various restrictions on the parity of I\u2032\u2032 and J\u2032\u2032, i.e. most only appear for a certain\ncombination of parities. This is indicated in parentheses next to each operator.\nThe operators are grouped by simplicity: Group I are the simplest operators containing \ufb01nitely many\nterms, Groups IIa and IIb are product operators, and lastly the four operators in Group III are the most\ndi\ufb03cult. They are also color-coded...\nGroup I: Simple operators\nDZ2 (I\u2032\u2032 even, J\u2032\u2032 even)\n(b, hI\u2032\u2032 \u2297 hJ\u2032\u2032\n+)\n1\n\ufffd\n|I\u2032\u2032|\n(hI\u2032\u2032\n+ + hI\u2032\u2032\n\u2212)\u02dc1J\u2032\u2032\n+\n\u2212(b, hI\u2032\u2032 \u2297 hJ\u2032\u2032\n\u2212)\n1\n\ufffd\n|I\u2032\u2032|\n(hI\u2032\u2032\n+ + hI\u2032\u2032\n\u2212)\u02dc1J\u2032\u2032\n\u2212\nDD (I\u2032\u2032 even, J\u2032\u2032 even)\n(b, hI\u2032\u2032 \u2297 hJ\u2032\u2032)\n1\n\ufffd\n|I\u2032\u2032||J\u2032\u2032|\n(hI\u2032\u2032\n+ + hI\u2032\u2032\n\u2212)(hJ\u2032\u2032\n+ + hJ\u2032\u2032\n\u2212)\nZD2 (I\u2032\u2032 even, J\u2032\u2032 even)\n(b, hI\u2032\u2032\n+ \u2297 hJ\u2032\u2032)\n1\n\ufffd\n|J\u2032\u2032|\n\u02dc1I\u2032\u2032\n+(hJ\u2032\u2032\n+ + hJ\u2032\u2032\n\u2212)\n\u2212(b, hI\u2032\u2032\n\u2212 \u2297 hJ\u2032\u2032)\n1\n\ufffd\n|J\u2032\u2032|\n\u02dc1I\u2032\u2032\n\u2212(hJ\u2032\u2032\n+ + hJ\u2032\u2032\n\u2212)\nZZ4 (I\u2032\u2032 even, J\u2032\u2032 even)\n(b, hI\u2032\u2032\n+ \u2297 hJ\u2032\u2032\n+)\u02dc1I\u2032\u2032\n+\u02dc1J\u2032\u2032\n+ \u2212 (b, hI\u2032\u2032\n+ \u2297 hJ\u2032\u2032\n\u2212)\u02dc1I\u2032\u2032\n+\u02dc1J\u2032\u2032\n\u2212\n\u2212(b, hI\u2032\u2032\n\u2212 \u2297 hJ\u2032\u2032\n+)\u02dc1I\u2032\u2032\n\u2212\u02dc1J\u2032\u2032\n+ + (b, hI\u2032\u2032\n\u2212 \u2297 hJ\u2032\u2032\n\u2212)\u02dc1I\u2032\u2032\n\u2212\u02dc1J\u2032\u2032\n\u2212\nZD1 (J\u2032\u2032 even)\n\u2212 (b, hI\u2032\u2032 \u2297 hJ\u2032\u2032)\n1\n\ufffd\n|J\u2032\u2032|\n(T1\u02dc1I\u2032\u2032)(hJ\u2032\u2032\n+ + hJ\u2032\u2032\n\u2212)\nDZ1 (I\u2032\u2032 even)\n\u2212 (b, hI\u2032\u2032 \u2297 hJ\u2032\u2032)\n1\n\ufffd\n|I\u2032\u2032|\n(hI\u2032\u2032\n+ + hI\u2032\u2032\n\u2212)(T2\u02dc1J\u2032\u2032)\nZZ2 (J\u2032\u2032 even)\n\u2212 (b, hI\u2032\u2032 \u2297 hJ\u2032\u2032\n+)(T1\u02dc1I\u2032\u2032)\u02dc1J\u2032\u2032\n+\n+ (b, hI\u2032\u2032 \u2297 hJ\u2032\u2032\n\u2212)(T1\u02dc1I\u2032\u2032)\u02dc1J\u2032\u2032\n\u2212\nZZ3 (I\u2032\u2032 even)\n\u2212 (b, hI\u2032\u2032\n+ \u2297 hJ\u2032\u2032)\u02dc1I\u2032\u2032\n+(T2\u02dc1J\u2032\u2032)\n+ (b, hI\u2032\u2032\n\u2212 \u2297 hJ\u2032\u2032)\u02dc1I\u2032\u2032\n\u2212(T2\u02dc1J\u2032\u2032)\nZZ1 (no restrictions)\n(b, hI\u2032\u2032 \u2297 hJ\u2032\u2032)(T1\u02dc1I\u2032\u2032)(T2\u02dc1J\u2032\u2032)\nGroup IIa: Product operators, summation over I\n8\nI. HOLMES, S. TREIL, AND A. VOLBERG\n\u03c0D2 (I\u2032\u2032 even, J\u2032\u2032 even)\n\uf8ee\n\uf8f0 \ufffd\nI\u228aI\u2032\u2032\n+\n(b, hI \u2297 hJ\u2032\u2032)hI\u2032\u2032\n+(I)hI\n\uf8f9\n\uf8fb hJ\u2032\u2032\n+ + hJ\u2032\u2032\n\u2212\n\ufffd\n|J\u2032\u2032|\n\u2212\n\uf8ee\n\uf8f0 \ufffd\nI\u228aI\u2032\u2032\n\u2212\n(b, hI \u2297 hJ\u2032\u2032)hI\u2032\u2032\n\u2212(I)hI\n\uf8f9\n\uf8fb hJ\u2032\u2032\n+ + hJ\u2032\u2032\n\u2212\n\ufffd\n|J\u2032\u2032|\n\u03c0Z2 (I\u2032\u2032 even, J\u2032\u2032 even)\n\uf8ee\n\uf8f0 \ufffd\nI\u228aI\u2032\u2032\n+\n(b, hI \u2297 hJ\u2032\u2032\n+)hI\u2032\u2032\n+(I)hI\n\uf8f9\n\uf8fb \u02dc1J\u2032\u2032\n+ \u2212\n\uf8ee\n\uf8f0 \ufffd\nI\u228aI\u2032\u2032\n+\n(b, hI \u2297 hJ\u2032\u2032\n\u2212)hI\u2032\u2032\n+(I)hI\n\uf8f9\n\uf8fb \u02dc1J\u2032\u2032\n\u2212\n\u2212\n\uf8ee\n\uf8f0 \ufffd\nI\u228aI\u2032\u2032\n\u2212\n(b, hI \u2297 hJ\u2032\u2032\n+)hI\u2032\u2032\n\u2212(I)hI\n\uf8f9\n\uf8fb \u02dc1J\u2032\u2032\n+ +\n\uf8ee\n\uf8f0 \ufffd\nI\u228aI\u2032\u2032\n\u2212\n(b, hI \u2297 hJ\u2032\u2032\n\u2212)hI\u2032\u2032\n\u2212(I)hI\n\uf8f9\n\uf8fb \u02dc1J\u2032\u2032\n\u2212\n\u03c0D1 (J\u2032\u2032 even)\n\u2212\n\uf8ee\n\uf8ef\uf8ef\uf8f0\n\ufffd\nI\u228aI\u2032\u2032\nI even\n(b, hI \u2297 hJ\u2032\u2032)hI\u2032\u2032(I)(T1hI)\n\uf8f9\n\uf8fa\uf8fa\uf8fb\nhJ\u2032\u2032\n+ + hJ\u2032\u2032\n\u2212\n\ufffd\n|J\u2032\u2032|\n\u03c0Z1 (I\u2032\u2032 even)\n\u2212\n\uf8ee\n\uf8f0 \ufffd\nI\u228aI\u2032\u2032\n+\n(b, hI \u2297 hJ\u2032\u2032)hI\u2032\u2032\n+(I)hI\n\uf8f9\n\uf8fb (T2\u02dc1J\u2032\u2032)\n+\n\uf8ee\n\uf8f0 \ufffd\nI\u228aI\u2032\u2032\n\u2212\n(b, hI \u2297 hJ\u2032\u2032)hI\u2032\u2032\n\u2212(I)hI\n\uf8f9\n\uf8fb (T2\u02dc1J\u2032\u2032)\n\u03c0Z4 (J\u2032\u2032 even)\n\u2212\n\uf8ee\n\uf8ef\uf8ef\uf8f0\n\ufffd\nI\u228aI\u2032\u2032\nI even\n(b, hI \u2297 hJ\u2032\u2032\n+)hI\u2032\u2032(I)(T1hI)\n\uf8f9\n\uf8fa\uf8fa\uf8fb \u02dc1J\u2032\u2032\n+\n+\n\uf8ee\n\uf8ef\uf8ef\uf8f0\n\ufffd\nI\u228aI\u2032\u2032\nI even\n(b, hI \u2297 hJ\u2032\u2032\n\u2212)hI\u2032\u2032(I)(T1hI)\n\uf8f9\n\uf8fa\uf8fa\uf8fb \u02dc1J\u2032\u2032\n\u2212\n\u03c0Z3 (no restrictions)\n\uf8ee\n\uf8ef\uf8ef\uf8f0\n\ufffd\nI\u228aI\u2032\u2032\nI even\n(b, hI \u2297 hJ\u2032\u2032)hI\u2032\u2032(I)(T1hI)\n\uf8f9\n\uf8fa\uf8fa\uf8fb (T2\u02dc1J\u2032\u2032).\nGroup IIb: Product operators, summation over J\nD\u03c02 (I\u2032\u2032 even, J\u2032\u2032 even)\nhI\u2032\u2032\n+ + hI\u2032\u2032\n\u2212\n\ufffd\n|I\u2032\u2032|\n\uf8ee\n\uf8f0 \ufffd\nJ\u228aJ\u2032\u2032\n+\n(b, hI\u2032\u2032 \u2297 hJ)hJ\u2032\u2032\n+(J)hJ\n\uf8f9\n\uf8fb \u2212\nhI\u2032\u2032\n+ + hI\u2032\u2032\n\u2212\n\ufffd\n|I\u2032\u2032|\n\uf8ee\n\uf8f0 \ufffd\nJ\u228aJ\u2032\u2032\n\u2212\n(b, hI\u2032\u2032 \u2297 hJ)hJ\u2032\u2032\n\u2212(J)hJ\n\uf8f9\n\uf8fb\nDYADIC BI-PARAMETER REPEATED COMMUTATOR AND DYADIC PRODUCT BMO\n9\nZ\u03c04 (I\u2032\u2032 even, J\u2032\u2032 even)\n\u02dc1I\u2032\u2032\n+\n\uf8ee\n\uf8f0 \ufffd\nJ\u228aJ\u2032\u2032\n+\n(b, hI\u2032\u2032\n+ \u2297 hJ)hJ\u2032\u2032\n+(J)hJ\n\uf8f9\n\uf8fb \u2212 \u02dc1I\u2032\u2032\n\u2212\n\uf8ee\n\uf8f0 \ufffd\nJ\u228aJ\u2032\u2032\n+\n(b, hI\u2032\u2032\n\u2212 \u2297 hJ)hJ\u2032\u2032\n+(J)hJ\n\uf8f9\n\uf8fb\n\u2212\u02dc1I\u2032\u2032\n+\n\uf8ee\n\uf8f0 \ufffd\nJ\u228aJ\u2032\u2032\n\u2212\n(b, hI\u2032\u2032\n+ \u2297 hJ)hJ\u2032\u2032\n\u2212(J)hJ\n\uf8f9\n\uf8fb + \u02dc1I\u2032\u2032\n\u2212\n\uf8ee\n\uf8f0 \ufffd\nJ\u228aJ\u2032\u2032\n\u2212\n(b, hI\u2032\u2032\n\u2212 \u2297 hJ)hJ\u2032\u2032\n\u2212(J)hJ\n\uf8f9\n\uf8fb\nD\u03c01 (I\u2032\u2032 even)\n\u2212\nhI\u2032\u2032\n+ + hI\u2032\u2032\n\u2212\n\ufffd\n|I\u2032\u2032|\n\uf8ee\n\uf8ef\uf8ef\uf8f0\n\ufffd\nJ\u228aJ\u2032\u2032\nJ even\n(b, hI\u2032\u2032 \u2297 hJ)hJ\u2032\u2032(J)(T2hJ)\n\uf8f9\n\uf8fa\uf8fa\uf8fb\nZ\u03c02 (J\u2032\u2032 even)\n\u2212 (T1\u02dc1I\u2032\u2032)\n\uf8ee\n\uf8f0 \ufffd\nJ\u228aJ\u2032\u2032\n+\n(b, hI\u2032\u2032 \u2297 hJ)hJ\u2032\u2032\n+(J)hJ\n\uf8f9\n\uf8fb\n+ (T1\u02dc1I\u2032\u2032)\n\uf8ee\n\uf8f0 \ufffd\nJ\u228aJ\u2032\u2032\n\u2212\n(b, hI\u2032\u2032 \u2297 hJ)hJ\u2032\u2032\n\u2212(J)hJ\n\uf8f9\n\uf8fb\nZ\u03c03 (I\u2032\u2032 even)\n\u2212 \u02dc1I\u2032\u2032\n+\n\uf8ee\n\uf8ef\uf8ef\uf8f0\n\ufffd\nJ\u228aJ\u2032\u2032\nJ even\n(b, hI\u2032\u2032\n+ \u2297 hJ)hJ\u2032\u2032(J)(T2hJ)\n\uf8f9\n\uf8fa\uf8fa\uf8fb\n+\u02dc1I\u2032\u2032\n\u2212\n\uf8ee\n\uf8ef\uf8ef\uf8f0\n\ufffd\nJ\u228aJ\u2032\u2032\nJ even\n(b, hI\u2032\u2032\n\u2212 \u2297 hJ)hJ\u2032\u2032(J)(T2hJ)\n\uf8f9\n\uf8fa\uf8fa\uf8fb\nZ\u03c01 (no restrictions)\n(T1\u02dc1I\u2032\u2032)\n\uf8ee\n\uf8ef\uf8ef\uf8f0\n\ufffd\nJ\u228aJ\u2032\u2032\nJ even\n(b, hI\u2032\u2032 \u2297 hJ)hJ\u2032\u2032(J)(T2hJ)\n\uf8f9\n\uf8fa\uf8fa\uf8fb .\nGroup III: The di\ufb03cult operators\n\u03c0\u03c04 (I\u2032\u2032 even, J\u2032\u2032 even)\n\ufffd\nI\u228aI\u2032\u2032\n+\nJ\u228aJ\u2032\u2032\n+\n(b, hI \u2297 hJ)hI\u2032\u2032\n+(I)hJ\u2032\u2032\n+(J)hI \u2297 hJ \u2212\n\ufffd\nI\u228aI\u2032\u2032\n+\nJ\u228aJ\u2032\u2032\n\u2212\n(b, hI \u2297 hJ)hI\u2032\u2032\n+(I)hJ\u2032\u2032\n\u2212(J)hI \u2297 hJ\n\u2212\n\ufffd\nI\u228aI\u2032\u2032\n\u2212\nJ\u228aJ\u2032\u2032\n+\n(b, hI \u2297 hJ)hI\u2032\u2032\n\u2212(I)hJ\u2032\u2032\n+(J)hI \u2297 hJ +\n\ufffd\nI\u228aI\u2032\u2032\n\u2212\nJ\u228aJ\u2032\u2032\n\u2212\n(b, hI \u2297 hJ)hI\u2032\u2032\n\u2212(I)hJ\u2032\u2032\n\u2212(J)hI \u2297 hJ\n\u03c0\u03c03 (I\u2032\u2032 even)\n\u2212\n\ufffd\nI\u228aI\u2032\u2032\n+\nJ even,J\u228aJ\u2032\u2032\n(b, hI \u2297 hJ)hI\u2032\u2032\n+(I)hJ\u2032\u2032(J)hI \u2297 T2hJ +\n\ufffd\nI\u228aI\u2032\u2032\n\u2212\nJ even,J\u228aJ\u2032\u2032\n(b, hI \u2297 hJ)hI\u2032\u2032\n\u2212(I)hJ\u2032\u2032(J)hI \u2297 T2hJ\n10\nI. HOLMES, S. TREIL, AND A. VOLBERG\n\u03c0\u03c02 (J\u2032\u2032 even)\n\u2212\n\ufffd\nI even,I\u228aI\u2032\u2032\nJ\u228aJ\u2032\u2032\n+\n(b, hI \u2297 hJ)hI\u2032\u2032(I)hJ\u2032\u2032\n+(J)T1hI \u2297 hJ +\n\ufffd\nI even,I\u228aI\u2032\u2032\nJ\u228aJ\u2032\u2032\n\u2212\n(b, hI \u2297 hJ)hI\u2032\u2032(I)hJ\u2032\u2032\n\u2212(J)T1hI \u2297 hJ\n\u03c0\u03c01 (no restrictions)\n\u2212\n\ufffd\nI even,I\u228aI\u2032\u2032\nJ even,J\u228aJ\u2032\u2032\n(b, hI \u2297 hJ)hI\u2032\u2032(I)hJ\u2032\u2032(J)T1hI \u2297 T2hJ\nThe lemma below will bound most of these operators:\nLemma 1 If T b is L2-bounded, then the (one-parameter) commutators\n1\n\ufffd\n|J|\n[T1, bJ]\nand\n1\n\ufffd\n|I|\n[T2, bI]\nare uniformly bounded, for any I, J \u2208 D. Consequently,\n(13)\n\ufffd\nI\u2032\u2282I\n|(b, hI\u2032 \u2297 hJ)|2 \u2272 |I||J|,\nand\n(14)\n\ufffd\nJ\u2032\u2282J\n|(b, hI \u2297 hJ\u2032)|2 \u2272 |I||J|,\nfor all I, J \u2208 D.\nProof. We prove the result in the \ufb01rst parameter x, the other being symmetric. We test T b on a function\nf(x, y) = p(x) \u2297 hJ\u2032\u2032(y), where p \u2208 L2(R) and J\u2032\u2032 \u2208 D. Note that if T b is bounded, \u2225T bf\u22252\n2 \u2272 \u2225f\u22252\n2 = \u2225p\u22252\n2.\nComputing T b(p \u2297 hJ\u2032\u2032) yields \ufb01ve operators: two with no restrictions on J\u2032\u2032:\nP1\n=\n\ufffd\nJ even,\nJ\u228aJ\u2032\u2032\n([T1, bJ]p) hJ\u2032\u2032(J)(T2hJ),\nP2\n=\n([T1, bJ\u2032\u2032]p) (T2\u02dc1J\u2032\u2032),\nand three which are only non-zero if J\u2032\u2032 is even:\nP3\n=\n\u2212 ([T1, bJ\u2032\u2032]p)\n1\n\ufffd\n|J\u2032\u2032|\n(hJ\u2032\u2032\n\u2212 + hJ\u2032\u2032\n+),\nP4\n=\n\u2212\n\ufffd\nJ\u228aJ\u2032\u2032\n+\n([T1, bJ]p) hJ\u2032\u2032\n+(J)hJ +\n\ufffd\nJ\u228aJ\u2032\u2032\n\u2212\n([T1, bJ]p) hJ\u2032\u2032\n\u2212(J)hJ,\nP5\n=\n\u2212\n\ufffd\n[T1, bJ\u2032\u2032\n+]p\n\ufffd\n\u02dc1J\u2032\u2032\n+ +\n\ufffd\n[T1, bJ\u2032\u2032\n\u2212]p\n\ufffd\n\u02dc1J\u2032\u2032\n\u2212.\nSuppose \ufb01rst that J\u2032\u2032 is even.\nIn this case, we have all \ufb01ve operators above.\nWe look at the Haar\ncoe\ufb03cients of each:\n(P1, hI0 \u2297 hJ0) =\n\ufffd ([T1, bJ0]p, hI0) s(J0, \u02c6J0)hJ\u2032\u2032( \u02c6J0),\nif J0 is odd, and \u02c6J0 \u228a J\u2032\u2032\n0,\notherwise.\n(P2, hI0 \u2297 hJ0) =\n\ufffd\n([T1, bJ\u2032\u2032]p, hI0) s(J0, \u02c6J0)h \u02c6\nJ0(J\u2032\u2032),\nif J0 is odd, and \u02c6J0 \u228b J\u2032\u2032\n0,\notherwise.\nSince J\u2032\u2032 is even, the inclusion conditions on J0 are the same as J0 \u228a J\u2032\u2032\n\u00b1 for P1, and J0 \u228b J\u2032\u2032 for P2.\nDYADIC BI-PARAMETER REPEATED COMMUTATOR AND DYADIC PRODUCT BMO\n11\n(P3, hI0 \u2297 hJ0) =\n\ufffd\n\u2212 ([T1, bJ\u2032\u2032]p, hI0)\n1\n\u221a\n|J\u2032\u2032|,\nif J0 = J\u2032\u2032\n\u2212 or J0 = J\u2032\u2032\n+\n0,\notherwise.\n(P4, hI0 \u2297 hJ0) =\n\uf8f1\n\uf8f4\n\uf8f2\n\uf8f4\n\uf8f3\n\u2212 ([T1, bJ0]p, hI0) hJ\u2032\u2032\n+(J0),\nif J0 \u228a J\u2032\u2032\n+\n+ ([T1, bJ0]p, hI0) hJ\u2032\u2032\n\u2212(J0),\nif J0 \u228a J\u2032\u2032\n\u2212\n0,\notherwise.\n(P5, hI0 \u2297 hJ0) =\n\ufffd\n\u2212\n\ufffd\n[T1, bJ\u2032\u2032\n+]p, hI0\n\ufffd\nhJ0(J\u2032\u2032\n+) +\n\ufffd\n[T1, bJ\u2032\u2032\n\u2212]p, hI0\n\ufffd\nhJ0(J\u2032\u2032\n\u2212),\nif J0 \u2287 J\u2032\u2032\n0,\notherwise.\nNote that for P1 + P2 + P3, the second component Haar functions run through all the odd dyadic inter-\nvals intersecting J\u2032\u2032. For P4 + P5, the second component Haar functions run through all dyadic intervals\nintersecting J\u2032\u2032, except J\u2032\u2032\n\u00b1. Pick the components of P4 and P5 with even J on the second coordinate:\nPeven\n:=\n\u2212\n\ufffd\nJ\u228aJ\u2032\u2032\n+\nJ even\n([T1, bJ]p) hJ\u2032\u2032\n+(J)hJ +\n\ufffd\nJ\u228aJ\u2032\u2032\n\u2212\nJ even\n([T1, bJ]p) hJ\u2032\u2032\n\u2212(J)hJ\n\u2212\n\ufffd\n[T1, bJ\u2032\u2032\n+]p\n\ufffd \ufffd\nJ\u228bJ\u2032\u2032\n+\nJ even\nhJ(J\u2032\u2032\n+)hJ +\n\ufffd\n[T1, bJ\u2032\u2032\n\u2212]p\n\ufffd \ufffd\nJ\u228bJ\u2032\u2032\n\u2212\nJ even\nhJ(J\u2032\u2032\n\u2212)hJ.\nThen T b(p \u2297 hJ\u2032\u2032) \u2212 Peven and Peven are orthogonal, so if T b is bounded then these components must be\nindividually bounded. In particular, Peven is bounded. Clearly\n\u2225Peven\u22252\n2\n\u2265\n\ufffd\nJ\u228aJ\u2032\u2032\n+\nJ even\n\ufffd\nI0\n([T1, bJ]p, hI0)2\n1\n|J\u2032\u2032\n+| +\n\ufffd\nJ\u228aJ\u2032\u2032\n\u2212\nJ even\n\ufffd\nI0\n([T1, bJ]p, hI0)2\n1\n|J\u2032\u2032\n\u2212|\n=\n2\n|J\u2032\u2032|\n\ufffd\nJ\u228aJ\u2032\u2032\nJ even\n\u2225[T1, bJ]p\u22252\n2 ,\ngiving us that\n(15)\n\ufffd\nJ\u228aJ\u2032\u2032\nJ even\n\u2225[T1, bJ]p\u22252\n2 \u2272 |J\u2032\u2032|\u2225p\u22252\n2, for all J\u2032\u2032 even.\nNow suppose J\u2032\u2032 is odd, so we only have the operators P1 and P2. As before,\n(P1, hI0 \u2297 hJ0) =\n\ufffd ([T1, bJ0]p, hI0) s(J0, \u02c6J0)hJ\u2032\u2032( \u02c6J0),\nif J0 is odd, and J0 \u228a J\u2032\u2032\n0,\notherwise.\n(P2, hI0 \u2297 hJ0) =\n\ufffd\n([T1, bJ\u2032\u2032]p, hI0) s(J0, \u02c6J0)h \u02c6\nJ0(J\u2032\u2032),\nif J0 is odd, and J0 \u228b J\u2032\u2032\n0,\notherwise.\nObviously P1 and P2 are orthogonal, so \u2225T b(p\u2297 hJ\u2032\u2032)\u22252\n2 = \u2225P1\u22252 + \u2225P2\u22252\n2 for odd J\u2032\u2032. From \u2225P1\u22252\n2 \u2264 \u2225T b\u22252\n2,\nit is easy to see that\n(16)\n\ufffd\nJ\u228aJ\u2032\u2032\nJ odd\n\u2225[T1, bJ]p\u22252\n2 \u2272 |J\u2032\u2032|\u2225p\u22252\n2, for all J\u2032\u2032 odd.\nFrom (15) and (16), it is obvious that, if T b is bounded, then\n(17)\n\ufffd\nJ\u2282J\u2032\u2032\n\u2225[T1, bJ]\u22252\n2 \u2272 |J\u2032\u2032|, for all J\u2032\u2032 \u2208 D.\n12\nI. HOLMES, S. TREIL, AND A. VOLBERG\nThis is a much stronger assertion than the Lemma needs, and immediately implies (13) using the one-\nparameter implication:\n1\n\ufffd\n|J|\n[T1, bJ] is L2-bounded \u21d2\n1\n\ufffd\n|J|\nbJ \u2208 BMO(R) \u21d2\n\ufffd\nI\u2032\u2282I\n|(b, hI\u2032 \u2297 hJ)|2 \u2272 |I||J|.\n\u25a1\nTheorem 3.1 If T b is bounded, then b \u2208 BMOr.\nProof. The results in Lemma 1 immediately show that all operators in Groups I and II are a priori bounded\nand can be disregarded. What remains are the four operators in Group III.\nCase 1: I\u2032\u2032 and J\u2032\u2032 are both odd. In this case, we only have the operator \u03c0\u03c01, which we rewrite as\n\u03c0\u03c01 = \u2212\n\ufffd\nI odd,I\u228aI\u2032\u2032\nJ odd,J\u228aJ\u2032\u2032\n(b, h\u02c6I \u2297 h \u02c6\nJ)hI\u2032\u2032(\u02c6I)hJ\u2032\u2032( \u02c6J)s(I, \u02c6I)s(J, \u02c6J)hI \u2297 hJ.\nSo boundedness of T b in this case reduces to just this \u03c0\u03c01. Computing its norm gives us\n\u2225\u03c0\u03c01\u22252\n2 =\n1\n|I\u2032\u2032||J\u2032\u2032|\n\ufffd\nI odd,I\u228aI\u2032\u2032\nJ odd,J\u228aJ\u2032\u2032\n|(b, h\u02c6I \u2297 h \u02c6\nJ)|2 =\n1\n|I\u2032\u2032||J\u2032\u2032|\n\ufffd\nI even,I\u228aI\u2032\u2032\nJ even,J\u228aJ\u2032\u2032\n|(b, hI \u2297 hJ)|2 \u2272 C,\nand from here immediately\n(18)\n\ufffd\nI even,I\u2286I0\nJ even,J\u2286J0\n|(b, hI \u2297 hJ)|2 \u2272 |I0||J0|, for all I0, J0 \u2208 D.\nCase 2: I\u2032\u2032 is odd and J\u2032\u2032 is even. In this case we have two operators, \u03c0\u03c01 and \u03c0\u03c02. But now we\nknow from (18) that \u03c0\u03c01 is already bounded, so we only need to look at \u03c0\u03c02:\n\u03c0\u03c02 = \u2212\n\ufffd\nI odd,I\u228aI\u2032\u2032\nJ\u228aJ\u2032\u2032\n+\n(b, h\u02c6I \u2297hJ)hI\u2032\u2032(\u02c6I)hJ\u2032\u2032\n+(J)s(I, \u02c6I)hI \u2297hJ +\n\ufffd\nI odd,I\u228aI\u2032\u2032\nJ\u228aJ\u2032\u2032\n\u2212\n(b, h\u02c6I \u2297hJ)hI\u2032\u2032(\u02c6I)hJ\u2032\u2032\n\u2212(J)s(I, \u02c6I)hI \u2297hJ.\nSeparate \u03c0\u03c02 into \u03c0\u03c02odd, where we only sum over odd J \u228a J\u2032\u2032\n\u00b1, and \u03c0\u03c02even, where we only sum over\neven J \u228a J\u2032\u2032\n\u00b1. These are orthogonal, so they are individually bounded. Now\n\u2225\u03c0\u03c02odd\u22252\n2 =\n2\n|I\u2032\u2032||J\u2032\u2032|\n\ufffd\nI even,I\u228aI\u2032\u2032\nJ odd,J\u228aJ\u2032\u2032\n\u00b1\n|(b, hI \u2297 hJ)|2 \u2272 C.\nFrom here, it follows easily that\n(19)\n\ufffd\nI even,I\u2286I0\nJ odd,J\u2286J0\n|(b, hI \u2297 hJ)|2 \u2272 |I0||J0|, for all I0, J0 \u2208 D.\nCase 3: I\u2032\u2032 is even and J\u2032\u2032 is odd. This case is symmetrical to Case 2, and yields\n(20)\n\ufffd\nI odd,I\u2286I0\nJ even,J\u2286J0\n|(b, hI \u2297 hJ)|2 \u2272 |I0||J0|, for all I0, J0 \u2208 D.\nCase 4: I\u2032\u2032 and J\u2032\u2032 are both even. In this case we have all four operators in Group III, but we already\nknow from (18), (19) and (20) that all but \u03c0\u03c04 are already bounded. Now\n\u2225\u03c0\u03c04\u22252\n2 =\n4\n|I\u2032\u2032||J\u2032\u2032|\n\ufffd\nI\u228aI\u2032\u2032\n\u00b1\nJ\u228aJ\u2032\u2032\n\u00b1\n|(b, hI \u2297 hJ)|2,\nDYADIC BI-PARAMETER REPEATED COMMUTATOR AND DYADIC PRODUCT BMO\n13\nwhich gives us exactly that\n\ufffd\nI\u2286I0\nJ\u2286J0\n|(b, hI \u2297 hJ)|2 \u2272 |I0||J0|, for all I0, J0 \u2208 D,\nso b \u2208 BMOr.\n\u25a1\n4. Analyzing what is left to estimate if BMOr of the symbol is small\nIn the previous section we proved\n(21)\n\u2225b\u2225BMOr \u2272 \u2225T b\u2225 .\nWe can normalize b to have\n\u2225b\u2225BMOChF = 1 .\nHence, to get an estimate of T b from below we can assume\n(22)\n\u2225b\u2225BMOr \u2272 \u03b50 ,\nwhere \u03b50 is a very small positive absolute number.\nWe recall that everything is dyadic.\nDe\ufb01nition 4.1. The Haar support of function \u03b1 is the collection of dyadic rectangles such that Haar\ncoe\ufb03cient does not vanish: \u03c3H(\u03b1) := {R : (\u03b1, hR) \u0338= 0}.\nDe\ufb01nition 4.2. Let R = I \u00d7 J, p(R) := \u02c6R = \u02c6I \u00d7 \u02c6J, pm(R) = \u02c6pm\u22121(R).\nDe\ufb01nition 4.3. Let U0 be a \ufb01nite union of dyadic rectangles. We call such U0 a dyadic open set. For every\nsuch U0 we denote by U0 the collection of all dyadic rectangles lying inside U0.\nDe\ufb01nition 4.4. We say that function \u03b1 is deep inside a dyadic open set U if pm(\u03c3H(\u03b1)) \u2282 U. We can call\nsuch \u03b1 m-deep inside U.\nDe\ufb01nition 4.5. T b\n\u2217 = [T \u2217\n2 , [T \u2217\n1 , b]].\n4.1. Plan. We will try to estimate T b from below under assumptions:\n(1) \u03c3H(b) is \ufb01nite;\n(2) \u2225b\u2225BMOChF = 1;\n(3) \u2225b\u2225BMOr \u2264 \u03b50;\n(4) U0 is a dyadic open set such that \u2225b\u2225BMOChF =\n1\n|U0|\n\ufffd\nR\u2208U0(b, hR)2.\nBy rescaling we can assume that |U0| = 1.\nWe will stay soon only with \u03c0\u03c0 part of repeated commutator.\nLemma 2 ( Symbol is \u201csmaller\u201d than test function) T hI\u2032 \u2297hJ\u2032\n\u2217\n(hI\u2032\u2032 \u2297 hJ\u2032\u2032) \u0338= 0 \u21d2 I\u2032 \u2264 \u02c6I\u2032\u2032, J\u2032 \u2264 \u02c6\nJ\u2032\u2032.\nProof. Direct calculation.\n\u25a1\nLemma 3 ( Symbol is \u201csmaller\u201d than test function) T hI\u2032 \u2297hJ\u2032(hI\u2032\u2032 \u2297 hJ\u2032\u2032) \u0338= 0 \u21d2 I\u2032 \u2264 I\u2032\u2032, J\u2032 \u2264 J\u2032\u2032.\nProof. Direct calculation.\n\u25a1\nDe\ufb01nition 4.6. Given U0, we use a standard notation U for the set = {M d\ns 1U0 \u2265\n1\n16}, where M d\ns denotes\nthe strong dyadic maximal function.\nLemma 4 Let U0 be a \ufb01nite union of dyadic rectangles. Let U be as in the De\ufb01nition 4.6. Let \u03c1 be such\nthat \u03c3H(\u03c1) \u2282 U0. Then T \u03b2\n\u2217 (\u03c1) = 0 for any \u03b2 such that \u03c3H(\u03b2) \u2229 U = \u2205.\nProof. Follows from Lemma 2.\n\u25a1\nLemma 5 Let U0 be a \ufb01nite union of dyadic rectangles. Let U be as in the De\ufb01nition 4.6. Let \u03c1 be such\nthat \u03c3H(\u03c1) \u2282 U. Then T \u03b2(\u03c1) = 0 for any \u03b2 such that \u03c3H(\u03b2) \u2229 U = \u2205.\n14\nI. HOLMES, S. TREIL, AND A. VOLBERG\nProof. Follows from Lemma 3.\n\u25a1\nDe\ufb01nition 4.7. Edgem(U0) = {R : R \u2208 U0, pm\u22121(R) \u2208 U0, pm(R)\u2229U c\n0 \u0338= \u2205}. Edge(U0) := Edge1(U0). The\nsame for U from De\ufb01nition 4.6. Edge(U) = {R : R \u2282 U, \u02c6R \u2229 U c \u0338= \u2205}.\nSo Edgem(U0) describes rectangles in U0 that are \u201cdeep, but not so deep\u201d in U0, they are on the edge.\nGiven b and U0, we consider U built as in De\ufb01nition 4.6 and we consider the decomposition\n(23)\nb = \u03b10 + \u03b2,\nwhere\n(1) \u03b10 := \ufffd\nR \u2282U(b, hR)hR;\n(2) \u03b2 is the rest, meaning that rectangles giving non-zero \u03b2 coe\ufb03cient have to be like this: R \u2229 U c \u0338= \u2205.\nBy Lemma 41 that says that symbol should be \u201csmaller\u201d than the test function, we get that if \u03c1 is such\nthat \u03c3H(\u03c1) \u2282 U0, then\n(24)\nT \u03b2\n\u2217 (\u03c1) = 0 .\nSo\u2013in estimating T b\n\u2217 (\u03c1) from below we can forget about \u2225T \u03b2\n\u2217 (\u03c1)\u22252 and look only at T \u03b10\n\u2217\n(\u03c1). And the only\nthing we used for claiming that is that Haar spectrum of \u03c1 is in U0 and De\ufb01nition 4.6 of U.\nBy De\ufb01nition 4.6 and weak boundedness of M d\ns we know that\n(25)\n|U| \u2264 C0|U0| .\nObviously, if we normalize |U0| = 1, \u2225\u03c1\u22252 = 1, we have\nC1/2\n0\n\u2225T b\u2225 \u2265 \u2225T b\u2225|U|1/2 \u2265 \u2225T b\u2225\u2225\u03c1\u2225|U|1/2 \u2265 |(1U, T b\n\u2217 (\u03c1))| = |(1U, T \u03b10\n\u2217\n(\u03c1))| .\nSo we are left to estimate |(1U, T \u03b10\n\u2217\n(\u03c1))| from below, where \u03c3H(\u03c1) \u2282 U0.\n5. The estimate of |(T \u03b10(1U), \u03c1| from below, where \u03c3H(\u03c1) \u2282 U0\nTo estimate |(1U, T \u03b10\n\u2217\n(\u03c1))| from below let us look at our formulas for \u03c0\u03c0, \u03c0Z, . . . , DD for\nb = \u03b10, f = 1U .\nRemark 5.1. If needed we can always replace \u03b10 that was such that \u03c3H(\u03b10) \u2282 U, by \u03b1m\u22121, that is\n\u03c3H(\u03b1m\u22121) \u2282 U. This is only if we need this. The result one obtains after such change is weaker, but it still\nwould give the information on some part of Chang\u2013Fe\ufb00erman BMO norm of b.\n5.1. Signature and parts of commutator that vanish. We use the notion of signature. We look at\nthe functions employed in the de\ufb01nition of each part. There are 3 functions in I position and 3 functions\nin J position. We write signature as a matrix, where the \ufb01rst row is assigned to 3 functions in I position\nand the second row is assigned to 3 functions in J position. The element of the matrix is 0 if the integral\nof corresponding function is 0 (e.g. hI), and the element of the matrix is 1 if the integral of corresponding\nfunction is not 0 (e.g. 1I). For example,\n\ufffd0, 0, 0\n0, 0, 0\n\ufffd\nis the signature of DD part of repeated commutator, and\n\ufffd0, 0, 0\n0, 1, 0\n\ufffd\n.\nis the signature of D\u03c0 part. DZ part has signature\n\ufffd0, 0, 0\n0, 0, 1\n\ufffd\n.\nDYADIC BI-PARAMETER REPEATED COMMUTATOR AND DYADIC PRODUCT BMO\n15\nLemma 6 All parts having only one 1 part in the signature can be estimates by C\u2225\u03b10\u2225BMOr \u2264 C\u03b50.\nProof. Direct calculation.\n\u25a1\nThus those parts can be disregarded. These are all D..., ...D parts.\nConsider now parts with Z..., ...Z. These are terms with signatures\n\ufffd0, 1, 0\n0, 0, 1\n\ufffd\n,\nand\n\ufffd0, 0, 1\n0, 1, 0\n\ufffd\n.\nAlso ZZ has signature\n\ufffd0, 0, 1\n0, 0, 1\n\ufffd\n.\nThey will necessarily consist of the terms having the following factors:\n(1) (1U, hI \u2297 hJ);\n(2) (1U, hI \u2297 \u02dc1J);\n(3) (1U, T \u2217\n1 hI \u2297 \u02dc1J);\n(4) (1U, \u02dc1I \u2297 T \u2217\n1 hJ);\n(5) (1U, hI \u2297 T \u2217\n2 \u02dc1J);\n(6) (1U, T \u2217\n1 hI \u2297 T \u2217\n2 hJ);\n(7) et cetera... .\nIt is important to remember that here we can count only those I, J such that I \u00d7 J are inside U0. This\nfollows from our choice of \u03c1: \u03c3H(\u03c1) \u2282 U0. But as I \u00d7 J are inside U0 almost all those scalar products above\nare equal to zero. Unfortunately not all, number (5) does not vanish as T \u2217\n2 \u02dc1J is a very non-localized function.\nBut let us even assume for a while that all such terms disappear (which is false as we just explained, some\nterms stay).\nLet \u03c1 be an arbitrary test function with Haar spectrum inside U0 (we can actually use functions with\nHaar spectrum m-deep in U0 if needed). Build U as in De\ufb01nition 4.6. We have (25). We denoted by \u03b10 the\npart of b having Haar spectrum in U.\nAfter the bookkeeping we see that in |(1U, T \u03b10\n\u2217\n\u03c1)| only \u03c0\u03c0 part rests because all other parts either vanish\nor are smaller than C\u2225b\u2225BMOr \u2264 C\u03b50.\nLet us write down all four terms of \u03c0\u03c0 part of (1U, T \u03b10\n\u2217\n\u03c1), \u03c3H(\u03c1) \u2282 U0,\n\u03c0\u03c0(\u03b10, 1U; T) =\n\ufffd\n(\u03b10, hI \u2297 hJ)(1U, \u02dc1I \u2297 \u02dc1J)T1hI \u2297 T2hJ\u2212\n(26)\n\ufffd\n(\u03b10, hI \u2297 hJ)(1U, T \u2217\n1 \u02dc1I \u2297 \u02dc1J)hI \u2297 T2hJ\u2212\n\ufffd\n(\u03b10, hI \u2297 hJ)(1U, \u02dc1I \u2297 T \u2217\n2 \u02dc1J)T1hI \u2297 hJ+\n\ufffd\n(\u03b10, hI \u2297 hJ)(1U, T \u2217\n1 \u02dc1I \u2297 T \u2217\n2 \u02dc1J)hI \u2297 hJ = I \u2212 II \u2212 III + IV .\nThe range of I, J can be naturally associated with the de\ufb01nition of T1, T2, and with the nature of \u03c1:\nI \u00d7 J \u2282 U0.\n5.2. Conjugate operator. It seems to be obvious that we can replace both Ti by T \u2217\ni , and get the similar\nexpression. Now we want to estimate |(1U, T \u03b10\n\u2217\n(\u03c1))| from below. Let \u03c1 be such that \u03c3H(\u03c1) \u2282 U. We denoted\nby \u03b10 the part of b having Haar spectrum in U. By Lemma 3\n(1U, T \u03b10(\u03c1)) = (1U, T b(\u03c1)) .\nIn estimating (1U, T \u03b10(\u03c1)) we the terms having the following factors:\n16\nI. HOLMES, S. TREIL, AND A. VOLBERG\n(1) (1U, hI \u2297 hJ);\n(2) (1U, hI \u2297 \u02dc1J);\n(3) (1U, T1hI \u2297 \u02dc1J);\n(4) (1U, \u02dc1I \u2297 T1hJ);\n(5) (1U, hI \u2297 T2\u02dc1J);\n(6) (1U, T1hI \u2297 T2hJ);\n(7) et cetera... .\nBy the choice of \u03b10 just mentioned above, I \u00d7 J \u2282 U here. Therefore all these scalar products seem to\nvanish. But the attentive reader can notice that, yes, e.g. (1U, T1hI \u2297 \u02dc1J) does vanish, but (1U, hI \u2297 T2\u02dc1J)\ndoes not. This will create a big di\ufb03culty below.\nHowever, let us assume for a while that in estimating (1U, T \u03b10(\u03c1)) from below we will be left with sum\nof terms estimated by C\u2225b\u2225BMOr and with the following \u03c0\u03c0 terms that we cannot cancel out:\n\u03c0\u03c0(\u03b10, 1U; T\u2217) =\n\ufffd\n(\u03b10, hI \u2297 hJ)(1U, \u02dc1I \u2297 \u02dc1J)T \u2217\n1 hI \u2297 T \u2217\n2 hJ\u2212\n(27)\n\ufffd\n(\u03b10, hI \u2297 hJ)(1U, T1\u02dc1I \u2297 \u02dc1J)hI \u2297 T \u2217\n2 hJ\u2212\n\ufffd\n(\u03b10, hI \u2297 hJ)(1U, \u02dc1I \u2297 T2\u02dc1J)T \u2217\n1 hI \u2297 hJ+\n\ufffd\n(\u03b10, hI \u2297 hJ)(1U, T1\u02dc1I \u2297 T2\u02dc1J)hI \u2297 hJ = A \u2212 B \u2212 C + D .\nWe do not write the scalar product with \u03c1, \u03c3H(\u03c1) \u2282 U, but we keep it in mind. The range of I, J can be\nnaturally associated with the de\ufb01nition of T1, T2, and with the nature of \u03b10: de\ufb01nitely I \u00d7 J \u2282 U, but for\nexample the term with T \u2217\n1 hI \u2297 T \u2217\n2 hJ disappears if I \u00d7 J \u2282 U, but \u02c6I \u00d7 \u02c6J is not inside U. This term will be\n\u201ccut-out\u201d by the scalar product with \u03c1, \u03c3H(\u03c1) \u2282 U.\nBut notice that all terms such that I \u00d7 J \u2282 U0 stay, they are not cut-out. This is because by De\ufb01nition\n4.6 we have \u02c6I \u00d7 \u02c6J \u2282 U as soon as I \u00d7 J \u2282 U0.\nWe like the \ufb01rst line of (27) (and we also like the \ufb01rst line of (26)). If the \ufb01rst line were alone in (27)\nthen:\n\u2225\u03c0\u03c0(\u03b10, 1U; T\u2217)\u22252\n2 = \u2225A\u22252\n2 \u2265\n\ufffd\n(\u03b10, hR)2 =\n\ufffd\nR \u2282 U0\nR odd odd\n(b, hR)2 .\nAnd we would get\n(28)\n\u2225T b\u2225 = \u2225T b\n\u2217 \u2225 \u2265 c\n\ufffd\nR \u2282 U0\nR odd odd\n(b, hR)2 ,\nwhich is \u201calmost\u201d what we want (in fact that would be 25 percent of what we want). Of course we want\nmore, namely, the summation not restricted to just even-even R. So we have several problems:\n(1) how to get the summation over all R\u2019s inside U0?\n(2) what to do with terms II, III, IV ?\nOf course we need summation over all R not just (odd, odd), but still, (28) would be a step in the direction\nof proving the ultimate estimate:\n(29)\n\u2225T b\u2225 \u2265 c\n\ufffd\nR \u2282 U0\n(b, hR)2 .\nDYADIC BI-PARAMETER REPEATED COMMUTATOR AND DYADIC PRODUCT BMO\n17\n5.3. Coming back to (1U, T \u03b10\n\u2217\n(\u03c1)) and trying other test functions.\nRemark 5.2. We can try to use T11U, T21U, T1T21U as test functions instead of 1U in (26). Again it is\neasy to see that if we choose instead of \u03b10 a deeper function \u03b11 = \ufffd\nR is 2\u2212deep in U0(b, hR)hR, then after\nbookkeeping we see that in |(Ti1U, T \u03b11(\u03b11))| only the \u03c0\u03c0 part rests because all other parts either vanish or\nare smaller than C\u2225b\u2225BMOr \u2264 C\u03b50.\nLet us look at (we use that (T \u2217\n1 )2 = 0)\n\u03c0\u03c0(\u03b11, T11U) =\n\ufffd\n(\u03b11, hI \u2297 hJ)(1U, T \u2217\n1 \u02dc1I \u2297 \u02dc1J)T1hI \u2297 T2hJ+\n(30)\n\ufffd\n(\u03b11, hI \u2297 hJ)(1U, T \u2217\n1 \u02dc1I \u2297 T \u2217\n2 \u02dc1J)T1hI \u2297 hJ .\nWe immediately conclude that the second sum restricted to I and J even is orthogonal to what is rest, so\n(31)\n\ufffd\nI,J even,even\n(\u03b11, hI \u2297 hJ)2(1U, T \u2217\n1 \u02dc1I \u2297 T \u2217\n2 \u02dc1J)2 \u2264 C\u2225T b\u22252 .\nLet us look at (we use that (T \u2217\n2 )2 = 0)\n\u03c0\u03c0(\u03b11, T21U) =\n\ufffd\n(\u03b11, hI \u2297 hJ)(1U, \u02dc1I \u2297 T \u2217\n2 \u02dc1J)T1hI \u2297 T2hJ+\n(32)\n\ufffd\n(\u03b11, hI \u2297 hJ)(1U, T \u2217\n1 \u02dc1I \u2297 T \u2217\n2 \u02dc1J)hI \u2297 T2hJ .\nWe again conclude that the second sum restricted to I and J even is orthogonal to what is rest, so the same\ninequality follows:\n(33)\n\ufffd\nI,J even,even\n(\u03b11, hI \u2297 hJ)2(1U, T \u2217\n1 \u02dc1I \u2297 T \u2217\n2 \u02dc1J)2 \u2264 C\u2225T b\u22252 .\nExactly the same inequality follows if we consider \u03c0\u03c0(\u03b11, T1T21U).\nBut what would be needed is the \u201copposite\u201d sum estimate:\n(34)\n\ufffd\nI,J odd,odd\n(\u03b11, hI \u2297 hJ)2(1U, T \u2217\n1 \u02dc1I \u2297 T \u2217\n2 \u02dc1J)2 \u2264 C\u2225T b\u22252 ,\nbecause exactly this sum entangles with the \ufb01rst line of (26): \ufffd(\u03b10, hI \u2297 hJ)(1U, \u02dc1I \u2297 \u02dc1J)T1hI \u2297 T2hJ.\nProblem. So far we did not guess how to get (28) from estimating formula (27), not to mention that\n(29) rests even less clear. But we will proceed in the next two sections.\n6. One parameter case and (27)\nLet us take a look at the one parameter case. We obviously can assume that we have localization, and\nthat eventually we just need to \ufb01nd out how to estimate the analog of, say, (27) from below.\nHere is this analog. It has two rather than four sums because we are in one parameter situation. The\n\u201copen\u201d set U in one parameter case is just a dyadic interval I0. We can assume that\n|I0| = 1 .\n\u03c0(\u03b10, 1I0; T \u2217) =\n\ufffd\nI\u2208D(I0)\n(b, hI)\u27e8T \u22171I0\u27e9IhI \u2212\n\ufffd\nI\u2208D(I0)\n(b, hI)\u27e81I0\u27e9IT \u2217hI =\n(35)\n\ufffd\nI\u2208D(I0)\n(b, hI)\u27e8T \u22171I0\u27e9IhI \u2212\n\ufffd\nI\u2208D(I0)\n(b, hI)T \u2217hI =\nA \u2212 B .\nBefore plunging into the consideration of (35), let us notice that the choice of 1U in two parameter case\nwas initiated by the wish to stay only with \u03c0\u03c0 part and to bring many other parts of the commutator to\nzero.\n18\nI. HOLMES, S. TREIL, AND A. VOLBERG\nSuch a problem is not present in one parameter case. In this case we can notice that the estimate of the\ncommutator can be reduced to the estimate from below of the following expression, where the test function\nf \u0338= 1I0. In fact we can choose test function di\ufb00erently. So consider the following more general expression\n\u03c0(\u03b10, fI0; T ) =\n\ufffd\nI\u2208D(I0)\n(b, hI)\u27e8T \u2217fI0\u27e9IhI \u2212\n\ufffd\nI\u2208D(I0)\n(b, hI)\u27e8fI0\u27e9IT \u2217hI =\n(36)\nAf \u2212 Bf .\nLet us now choose a very simple fI0 \u0338= 1I0. Here it is convenient to think that I0 is odd (and normalized\n|I0| = 1/2). In this case our choice of test function is the \u201cuncle\u201d function:\nfI0 = hsI0 .\nHere sI0 is a sibling of I0. By the de\ufb01nition of T \u2217,\nhsI0|I0 = 0,\nT \u2217hsI0|I0 = sgn(I0, \u02c6I0)h\u02c6I0 = \u00b1 1\n\u221a\n2\n.\nWe plug into (36) above and Bf disappears. The estimate of Af gives\n\ufffd\nI\u2208D(I0)\n(b, hI)2 \u2264 C\u2225\u03c0(\u03b10, fI0; T )\u22252\n2 \u2264 C\u2225the commutator\u22252\n2 .\nIn fact, for even I0 the choice f = hs(\u02c6I0) would work. We are done.\nRemark 6.1. What serves as \u201cthe uncle\u201d function F = fU of U in the two parameter case\u2013this is not clear.\nNow let us come back to (35), and let us try to obtain \ufffd\nI\u2208D(I0)(b, hI)2 \u2264 C\u2225the commutator\u22252\n2 directly\nfrom (35).\nRecall that T \u2217hI = sgn(I, \u02c6I)h\u02c6I for odd I and 0 for even.\nLet us consider I \u2208 D(I0) such that \u02c6I \u2208 D(I0), and then we have a term \u2212 sgn(I, \u02c6I)(b, hI)h\u02c6I in \u2212B\nsum (this is when I is odd, when I is even this term vanishes), and we have another term h\u02c6I \u00b7 (b, h\u02c6I) with\ncoe\ufb03cient cI := \u27e8T \u22171I0\u27e9\u02c6I. This term is always present, for even and odd I.\nLet us understand, what is cI, which is equal to the constant value of the constant function T \u22171I0|I0\n(recall that \u02c6I \u2282 I0). Let I1 denote the father of I0, I2 denote the father of I1, et cetera.\n1I0 = (1I0, hI1)hI1 + (1I0, hI2)hI2 + . . . .\nHence\n(T \u22171I0)|I0 = (1I0, hI1)(T \u2217hI1)|I0 + (1I0, hI2)(T \u2217hI2)|I0 + . . . .\nWe recall that |I0| = 1. De\ufb01nitely the \ufb01rst term of the series is at most\n1\n2\n\u221a\n2 by absolute value (it can be\nzero too). In fact, hI1 gives the contribution of\n1\n\u221a\n2 and T \u2217hI1 gives the contribution 1\n2. The next term of\nthe series is at most\n1\n2\n\u221a\n2: hI2 gives the contribution of 1\n2 and T \u2217hI2 gives the contribution 0 or\n1\n2\n\u221a\n2. It is\nclear that\n(37)\n1\n8 \u2264 |cI| \u2264\n1\n\u221a\n2 < 1 .\nWe see that for I such that \u02c6I \u2282 I0 the sum A \u2212 B of (35) has the term\nh\u02c6I \u00b7 (\u2212 sgn(I, \u02c6I) \u00b7 [(b, hI) \u2212 dI(b, h\u02c6I)],\n|dI| \u2264\n1\n\u221a\n2 ,\nwhen I is odd, and the term\nh\u02c6I \u00b7 (sgn(I, \u02c6I) \u00b7 dI(b, h\u02c6I),\n|dI| \u2265 1\n8 ,\nwhen I is even.\nDYADIC BI-PARAMETER REPEATED COMMUTATOR AND DYADIC PRODUCT BMO\n19\nAll terms are orthogonal, and we get\n(38)\n\ufffd\nI:\u02c6I\u2208D(I0),Iodd\n|(b, hI) \u2212 dI(b, h\u02c6I)|2 \u2264 C\u2225the commutator\u22252\n2 ,\nand\n(39)\n\ufffd\nI:I\u2208D(I0),Iodd\n|(b, hI)|2 \u2264\n\ufffd\nI:\u02c6I\u2208D(I0),Ieven\n|(b, h\u02c6I)|2 \u2264 C\u2225the commutator\u22252\n2 ,\nFrom these two inequalities and from the estimates of dI, we can immediately obtain\n(40)\n\ufffd\nI:I\u2208D(I0)\n|(b, hI)|2 \u2264 C\u2225the commutator\u22252\n2 ,\nNotice that (38) alone would give us an interesting information.\nWe want to get from (38) alone that\n(41)\n\ufffd\nI:\u02c6I\u2208D(I0),Iodd\n(b, hI)2 \u2264 C\u2225\u03c0(\u03b10, fI0; T )\u22252\n2 \u2264 C\u2225the commutator\u22252\n2 .\n(This is stated in (39), but suppose that we do not have it, suppose that we have only (38).) If this is\nobtained, then it is easy to get\n(42)\n\ufffd\nI\u2208D(I0),Iodd\n(b, hI)2 \u2264 C\u2225\u03c0(\u03b10, fI0; T )\u22252\n2 \u2264 C\u2225the commutator\u22252\n2 .\nNow (38) \u21d2 (41) seems is easy by the following lemmas.\nLemma 7 Let |dn| \u2264 q < 1, let bn := an \u2212 dnan\u22121. Assume that b := {bn}\u221e\nn=0 \u2208 \u21132, then a := {an}\u221e\nn=0 \u2208 \u21132.\nProof. We can write\nan = bn + dnan\u22121 = bn + dnbn\u22121 + dndn\u22121an\u22122 = \u00b7 \u00b7 \u00b7 = bn + D1bn\u22121 + D2bn\u22122 + \u00b7 \u00b7 \u00b7 + Dnb0 ,\nwhere D1 := dn, D2 = dndn\u22121, . . . , |Dk| \u2264 qk. Therefore, a = Ab, where A is a triangular matrix (with 1\u2019s\none the diagonal), which clearly satis\ufb01es Schur test. Hence, A : \u21132 \u2192 \u21132 and lemma is proved.\n\u25a1\nIn fact we need this type of lemma on the dyadic tree T of dyadic lattice D(I0). But here it is.\nLemma 8 Let m(I, J) is a matrix on T such that m(I, J) = 0 if I \u228a J and for c > 0\nm(I, J) =\n\ufffd |I|\n|J|\n\ufffdc\notherwise. Then this matrix is a bounded operator from \u21132(T ) to itself.\nProof. This matrix acts boundedly from \u2113\u221e(T ) to \u21131(T ). In fact,\n\ufffd\nJ\nm(I, J) \u2264 C0\n\u2200I .\nBut its adjoint also acts boundedly from \u2113\u221e(T ) to \u21131(T ). In fact\n\ufffd\nI\nm(I, J) \u2264 C0\n\u2200J .\nBy interpolation it maps \u21132(T ) to itself boundedly.\n\u25a1\n20\nI. HOLMES, S. TREIL, AND A. VOLBERG\n7. Back to the estimate from below of (26), (27)\nFirst we just loosely discuss what we are going to do.\nThe \u201cactual idea\u201d follows in Subsection 7.1.\nDisclaimer: Subsection 7.1 contains three deliberate mistakes. We will indicate all of them at the end of\nSubsection 7.1. If the reader can circumvent those problems, then the main result will be proved: repeated\ndyadic paraproduct is bounded if and only if its symbol is in Chang\u2013Fe\ufb00erman dyadic BMO.\nRemark 7.1. We actually prove this result in Theorem 9.2 below, but only under the extra conditions on\nthe symbol. We cannot get rid of those extra assumptions at this time.\nLet us repeat: we just need to be able to estimate the sum in (26) from below by constant or by\nc \ufffd\nI\u00d7J\u2282U(b, hI \u2297 hJ)2. Even the estimate from below by\nc\n\ufffd\nI\u00d7J\u2282U, I\u00d7J is m deep, I,J even,even\n(b, hI \u2297 hJ)2\nwould be a meaningful achievement. Similarly, even the estimate from below by\nc\n\ufffd\nI\u00d7J\u2282U, I\u00d7J is m deep, I,J odd,odd\n(b, hI \u2297 hJ)2\nwould be a meaningful achievement as well.\nRecall\n\u03c0\u03c0(\u03b10, 1U; T) =\n\ufffd\n(\u03b10, hI \u2297 hJ)(1U, \u02dc1I \u2297 \u02dc1J)T1hI \u2297 T2hJ\u2212\n(43)\n\ufffd\n(\u03b10, hI \u2297 hJ)(1U, T \u2217\n1 \u02dc1I \u2297 \u02dc1J)hI \u2297 T2hJ\u2212\n\ufffd\n(\u03b10, hI \u2297 hJ)(1U, \u02dc1I \u2297 T \u2217\n2 \u02dc1J)T1hI \u2297 hJ+\n\ufffd\n(\u03b10, hI \u2297 hJ)(1U, T \u2217\n1 \u02dc1I \u2297 T \u2217\n2 \u02dc1J)hI \u2297 hJ = I \u2212 II \u2212 III + IV .\nDe\ufb01nition 7.2. Let 0 < \u03b51 \u2264\n1\n100. The rectangle I \u00d7 J \u2282 U is called \u03b51 small if\n|(1U, T \u2217\n1 \u02dc1I \u2297 \u02dc1J)| \u2264 \u03b51 .\nLemma 9 Let I \u00d7 J be m-deep in U, m \u2265 2. Let R = I \u00d7 J be \u03b51-small. Then R1 = \u02c6I \u00d7 J and R2 = I \u00d7 \u02c6J,\n\u02c6R = \u02c6I \u00d7 \u02c6J are \u03b51-small.\nProof. Let us consider R1. We look at\n(1U, T \u2217\n1 \u02dc1I \u2297 \u02dc1J) \u2212 (1U, T \u2217\n1 \u02dc1\u02c6I \u2297 \u02dc1J)\nand notice that \u02dc1I \u2212 \u02dc1\u02c6I is proportional to h\u02c6I, so \u02dc1I \u2297 \u02dc1J \u2212 \u02dc1\u02c6II \u2297 \u02dc1J is proportional to h\u02c6I \u2297 hJ. Hence\nT \u2217\n1 (\u02dc1I \u2297 \u02dc1J \u2212 \u02dc1\u02c6II \u2297 \u02dc1J) is proportional to hI \u2297 hJ, where I is the parent of \u02c6I (grandparent of I). The scalar\nproduct with 1U returns 0 if R is at least 2 deep.\nDe\ufb01nition 7.3. Let \u02dc1R temporarily denote \u02dc1I \u2297 \u02dc1J for R = I \u00d7 J.\nWe proved that\n(44)\n(1U, T \u2217\n1 \u02dc1R) = (1U, T \u2217\n1 \u02dc1R1) ,\nif R is at least 2-deep. Therefore, R1 is also \u03b51 small.\nThe same proof works for R2. And then going from R2 to \u02c6R involves the same reasoning. In particular\nwe get\n(45)\n(1U, T \u2217\n1 \u02dc1R) = (1U, T \u2217\n1 \u02dc1R1) = (1U, T \u2217\n1 \u02dc1R2) = (1U, T \u2217\n1 \u02dc1 \u02c6R) .\nAnd we conclude that all R1, R2, \u02c6R are \u03b51 small as soon as R is such.\n\u25a1\nDYADIC BI-PARAMETER REPEATED COMMUTATOR AND DYADIC PRODUCT BMO\n21\nLemma 10 Let R = I \u00d7 J be such that R \u2282 U and moreover R is at least 1 deep. Let R be \u03b51-small. Let\nI\u2032 \u2208 ch(I), J\u2032 \u2208 ch(J). Then R1 = \u02c6I\u2032 \u00d7 J and R2 = I \u00d7 \u02c6J\u2032, R12 = \u02c6I\u2032 \u00d7 \u02c6J\u2032 are \u03b51-small.\nProof. The proof is exactly the same, again the di\ufb00erence of two characteristic functions normalized as we\ndid gives us a proportional to Haar function, T \u2217\n1 moves it only one step up, and so the result is still orthogonal\nto 1U.\n\u25a1\nNow we can prove (only with I and J interchanged) that the same (50) will hold for the terms (1U, \u02dc1I \u2297\nT \u2217\n2 \u02dc1J) instead of (1U, T \u2217\n1 \u02dc1I\u2297\u02dc1J). And then, again we can repeat the same reasoning for the terms (1U, T \u2217\n1 \u02dc1I\u2297\nT \u2217\n2 \u02dc1J).\nConclusion:\n\u2022 1) in (26) either all terms (1U, T \u2217\n1 \u02dc1I \u2297 \u02dc1J), (1U, \u02dc1I \u2297 T \u2217\n2 \u02dc1J), (1U, T \u2217\n1 \u02dc1I \u2297 T \u2217\n2 \u02dc1J) are\n1\n100 small, or\n\u2022 2) two brand of terms, e.g. all (1U, T \u2217\n1 \u02dc1I\u2297\u02dc1J), (1U, \u02dc1I\u2297T \u2217\n2 \u02dc1J) are\n1\n100 small and all (1U, T \u2217\n1 \u02dc1I\u2297T \u2217\n2 \u02dc1J)\nare NOT\n1\n100 small (there are three choices of such a situation), or\n\u2022 3) one brand of terms, e.g. all (1U, T \u2217\n1 \u02dc1I \u2297 \u02dc1J) are all\n1\n100 small, and two other brands are NOT\n1\n100\nsmall, or\n\u2022 4) all terms of all three brands are NOT\n1\n100 small.\nLet us consider item 1) and item 4). The rest should follow suit.\nSo suppose all terms of all three brands are\n1\n100 small. Then notice that (b, hI \u2297 hJ) from the \ufb01rst line of\n(26) has coe\ufb03cient (1U \u02dc1I \u2297 \u02dc1J) = 1\u2013and of course all this stands in front of some hI\u2032 \u2297 hJ\u2032 (children). If we\ncollect the same hI\u2032 \u2297 hJ\u2032 terms from all 3 other lines of (26) the b-Haar coe\ufb03cient (maybe not (b, hI \u2297 hJ),\nbut some other Haar coe\ufb03cient of a some rectangle \u201cclose\u201d to I \u00d7 J) will appear but with the factor less\nor equal than\n1\n100 by absolute value. So we will have that the sum in (26) is exactly equal to the sum of\northogonal terms\n[1 \u00b7 (b, hI \u2297 hJ) + \u03b51(b, . . . ) + \u03b52(b, . . . ) + \u03b53(b, . . . )]hI\u2032 \u2297 hJ\u2032 ,\nwhere . . . stand for some hI\u2032\u2032\ni \u00d7J\u2032\u2032\ni , i = 1, 2, 3, where I\u2032\u2032\ni \u00d7 J\u2032\u2032\ni is a close relative of I \u00d7 J. Hence (26) has the\nnorm squared bounded from below by the sum\n|1 \u00b7 (b, hI \u2297 hJ) + \u03b51(b, . . . ) + \u03b52(b, . . . ) + \u03b53(b, . . . )|2 ,\nwhere the summation is over all those I \u00d7 J, that are, say, at least 2-deep in U and I, J are both even. And\nof course |\u03b5i| \u2264 1/100.\nThen using the analog of Lemma 8 but for double tree, we conclude that the square of the norm of the\nsum in (26) is bounded from below by the sum\nc |(b, hI \u2297 hJ)|2 ,\nwhere the summation is over all I \u00d7 J, say, at least 2-deep in U and and I, J are both even, and we got what\nwe wanted at least for even, even part of b.\nLet us consider now item 4): all coe\ufb03cients of all three brands are bigger than\n1\n100 by absolute value.\nLet us start with the fourth line of (26). It contains I even, J even sum, and this sum is orthogonal to\nthe rest. So immediately we get (using that |(1U, T \u2217\n1 \u02dc1I \u2297 T \u2217\n2 \u02dc1J)| \u2265 1/100 by assumption 4))\n(46)\n\ufffd\nIeven, J even\n(b, hI \u2297 hJ)2 \u2264 C\u2225sum of (26)\u22252\n2 .\nSo looks like we estimated \u2225beven,even\u2225BMOChF from above by the norm of the repeated commutator.\n22\nI. HOLMES, S. TREIL, AND A. VOLBERG\n7.1. \u201cA proof\u201d of the Chang\u2013Fe\ufb00erman BMO norm estimate of bodd,odd. In this subsection we\nprefer to work with T \u2217\n1 , T \u2217\n2 rather than T1, T2 and we notice that this change is basically symmetric. So our\ngoal will be to estimate Chang\u2013Fe\ufb00erman norm of beven,even by the norm of [T \u2217\n1 , [T \u2217\n2 , b]].\nAbsolutely symmetrically to what has been done above we can reduce the above mentioned task to\nestimating the norm of the following sum from below by Chang\u2013Fe\ufb00erman norm of bodd,odd.\n\u03c0\u03c0(\u03b10, 1U; T\u2217) =\n\ufffd\n(\u03b10, hI \u2297 hJ)(1U, \u02dc1I \u2297 \u02dc1J)T \u2217\n1 hI \u2297 T \u2217\n2 hJ\u2212\n(47)\n\ufffd\n(\u03b10, hI \u2297 hJ)(1U, T1\u02dc1I \u2297 \u02dc1J)hI \u2297 T \u2217\n2 hJ\u2212\n\ufffd\n(\u03b10, hI \u2297 hJ)(1U, \u02dc1I \u2297 T2\u02dc1J)T \u2217\n1 hI \u2297 hJ+\n\ufffd\n(\u03b10, hI \u2297 hJ)(1U, T1\u02dc1I \u2297 T2\u02dc1J)hI \u2297 hJ = I \u2212 II \u2212 III + IV .\nThe summation is over I, J, I \u00d7 J \u2282 U.\nDe\ufb01nition 7.4. Let 0 < \u03b51 \u2264\n1\n100. The rectangle I \u00d7 J \u2282 U is called \u03b51 small if\n|(1U, T1\u02dc1I \u2297 \u02dc1J)| \u2264 \u03b51 .\nLet us start with the fourth line of (47). It contains I, J (odd, odd) sum, and this sum is orthogonal to\nthe rest. So immediately we get, using the assumption |(1U, T1\u02dc1I \u2297 T2\u02dc1J)| \u2265 \u03b52, that\n(48)\n\ufffd\nIodd, J odd\n(b, hI \u2297 hJ)2 \u2264 C\u03b5\u22122\n2 \u2225sum of (26)\u22252\n2 .\nThe next lemma says that if |(1U, T1\u02dc1I \u2297 T2\u02dc1J)| \u2265 \u03b52 happens for one I \u00d7 J inside U it happens for all\nsuch rectangles inside U. (If U is connected, which we can assume by considering connected components\none by one.)\nWe just saw that the assumption |(1U, T1\u02dc1I \u2297 T2\u02dc1J)| \u2265 \u03b52 implies (48).\nLet us now assume that\n|(1U, T1\u02dc1I \u2297 T2\u02dc1J)| \u2264 \u03b52 for (odd, odd) I, J, then by lemmas below we can assume that for all I \u00d7 J\ninside U we have\n|(1U, T1\u02dc1I \u2297 T2\u02dc1J)| \u2264 \u03b52 .\nDe\ufb01nition 7.5. Let \u02dc1R temporarily denote \u02dc1I \u2297 \u02dc1J for R = I \u00d7 J.\nLemma 11 Let I \u00d7 J be m-deep in U, m \u2265 2. Let R = I \u00d7 J be \u03b51-small. Then R1 = \u02c6I \u00d7 J and R2 = I \u00d7 \u02c6J,\n\u02c6R = \u02c6I \u00d7 \u02c6J are \u03b51-small.\nProof. Let us consider R1. We look at\n(1U, T1\u02dc1I \u2297 \u02dc1J) \u2212 (1U, T1\u02dc1\u02c6I \u2297 \u02dc1J)\nand notice that \u02dc1I \u2212 \u02dc1\u02c6I is proportional to h\u02c6I, so \u02dc1I \u2297 \u02dc1J \u2212 \u02dc1\u02c6II \u2297 \u02dc1J is proportional to h\u02c6I \u2297 hJ. Hence\nT1(\u02dc1I \u2297 \u02dc1J \u2212 \u02dc1\u02c6II \u2297 \u02dc1J) is proportional to hI \u2297 hJ, where I is the parent of \u02c6I (grandparent of I). The scalar\nproduct with 1U returns 0 if R is in U.\nWe proved that\n(49)\n(1U, T1\u02dc1R) = (1U, T1\u02dc1R1) ,\nif R is in U. Therefore, R1 is also \u03b51 small.\nThe same proof works for R2. And then going from R2 to \u02c6R involves the same reasoning. In particular\nwe get\n(50)\n(1U, T1\u02dc1R) = (1U, T1\u02dc1R1) = (1U, T1\u02dc1R2) = (1U, T1\u02dc1 \u02c6R) .\nAnd we conclude that all R1, R2, \u02c6R are \u03b51 small as soon as R is such.\nNotice that there was nothing special about T1 in this equality. So we can write the same thing for the\naction by T2 and for the action of T1 \u2297 T2:\nDYADIC BI-PARAMETER REPEATED COMMUTATOR AND DYADIC PRODUCT BMO\n23\n(51)\n(1U, T2\u02dc1R) = (1U, T2\u02dc1R1) = (1U, T2\u02dc1R2) = (1U, T2\u02dc1 \u02c6R) .\n(52)\n(1U, T1 \u2297 T2\u02dc1R) = (1U, T1 \u2297 T2\u02dc1R1) = (1U, T1 \u2297 T2\u02dc1R2) = (1U, T1 \u2297 T2\u02dc1 \u02c6\nR) .\n\u25a1\nLemma 12 Let R = I \u00d7 J be such that R \u2282 U and moreover R is at least 1 deep. Let R be inside U, and let\nit be \u03b51-small. Let I\u2032 \u2208 ch(I), J\u2032 \u2208 ch(J). Then R1 = I\u2032 \u00d7 J and R2 = I \u00d7 J\u2032, R12 = I\u2032 \u00d7 J\u2032 are \u03b51-small.\nProof. The proof is exactly the same, again the di\ufb00erence of two characteristic functions normalized as we\ndid gives us a function proportional to Haar function, T1 moves it only one step down, and so the result is\nstill orthogonal to 1U.\n\u25a1\nLet us \ufb01x two small constants \u03b52 << \u03b51 \u2264\n1\n100. We look at the terms (1U, T1\u02dc1I \u2297 T2\u02dc1J) in (47) and we\nknow by Lemma 11 and Lemma 12 that all those terms are the same. So if they are for all I, J (even, even)\nare like this:\n|(1U, T1\u02dc1I \u2297 T2\u02dc1J)| \u2265 \u03b52\nthen (46) is immediately true with C = \u03b5\u22122\n2 . Now suppose that all of those terms are like that:\n|(1U, T1\u02dc1I \u2297 T2\u02dc1J)| \u2264 \u03b52 .\nNotice that then the same is true for I, J (even, odd). In fact, this follows from (52). Those (even, odd)\noutput terms also happens in this sum\n\ufffd\n(\u03b10, hI\u2032 \u2297 hJ\u2032)(1U, \u02dc1I\u2032 \u2297 T2\u02dc1J\u2032)T \u2217\n1 hI\u2032 \u2297 hJ\u2032,\nwhen I\u2032, J\u2032 are (odd, odd). Notice that the sum itself is in (even, odd) space. Therefore, when we consider\nthe (even, odd) output it can come only from the fourth and the third line of (47). In fact, the \ufb01rst line of\n(47) is in (even, even) space and the second line is totally in (odd, even) space. Therefore, each term of this\n(even, odd) part of the output will have the form (I odd, J odd):\nhI \u2297 hJ[(\u03b10, h\u02c6I \u2297 hJ)(smaller by abs. value than \u03b52) + (\u03b10, hI \u2297 hJ) \u00b7 (1U, \u02dc1I \u2297 T2\u02dc1J)] .\nHence, taking (even, odd) part of (47) we have\n\ufffd\nIodd,Jodd\n|(\u03b10, h\u02c6I \u2297 hJ)(smaller by abs. value than \u03b52) + (\u03b10, h\u02c6I \u2297 hJ)(1U, \u02dc1I \u2297 T2\u02dc1J)|2 \u2264 C\u2225sum in (47)\u22252\n2 .\nNow we remember that either 1) all |(1U, \u02dc1\u02c6I \u2297 T2\u02dc1J)| \u2265 \u03b51 >> \u03b52; or 2) all |(1U, \u02dc1\u02c6I \u2297 T2\u02dc1J)| \u2264 \u03b51.\nLet us formulate now an analog of Lemma 8, but for a dyadic bi-tree T \u00d7 T . Bi-tree is a graph of dyadic\nrectangles, where the edges connect rectangles i\ufb00 one of them is inside the other and the ratio of their areas\nis 2. In the next lemma R = I \u00d7 J, R\u2032 = I\u2032 \u00d7 J\u2032. In other words R, R\u2032 are two end-points of the same edge\nif either I is a parent of I\u2032, J\u2032 = J, or I\u2032 is a parent of I, J\u2032 = J; or J is a parent of J\u2032, I\u2032 = I, or J\u2032 is a\nparent of J, I\u2032 = I.\nLemma 13 Let us consider a matrix enumerated by the couples of vertices (R, R\u2032), R\u2032 \u2208 T \u00d7T , R\u2032 \u2208 T \u00d7T .\nLet its matrix elements m(R, R\u2032) = 0 unless R \u2282 R\u2032 or R\u2032 \u2282 R. In the latter cases, if R \u2282 R\u2032, then\nm(R, R\u2032) =\n\ufffd\n|R|\n|R\u2032|\n\ufffdA\n, and if R\u2032 \u2282 R, then m(R, R\u2032) =\n\ufffd\n|R\u2032|\n|R|\n\ufffdA\n, where A is a su\ufb03ciently large constant.\nThen this matrix de\ufb01nes a bounded operator from \u21132(T \u00d7 T ) to itself.\nProof. This is easy to see by applying Schur\u2019s test as in the proof of Lemma 8.\n\u25a1\n24\nI. HOLMES, S. TREIL, AND A. VOLBERG\nIf we have 1), then by Lemma 13 (it is an analog of Lemma 8 for bi-tree) we will get from the last display\n(53)\n\ufffd\nIodd,Jodd\n(\u03b10, hI \u2297 hJ)2 \u2264 C\u03b5\u22122\n1 \u2225sum in (47)\u22252\n2 .\nThis is because \u03b51 >> \u03b52. And (53) is exactly (48).\nAt this moment we established the following dichotomy: either we have proved (48), or, otherwise we\nhave |(1U, \u02dc1I \u2297 T2\u02dc1J)| \u2264 \u03b51 (for all I, J!), and we also have |(1U, T1\u02dc1I \u2297 T2\u02dc1J)| \u2264 \u03b52 (again for all I, J!).\nWhen we say \u201call\u201d we mean all I, J such that I \u00d7 J \u2282 U. (We think here that U is connected, this does not\nrestrict the generality as we can consider the connected components of U one by one.)\nNow we call the attention of the reader that third and second lines of (47) are totally symmetric under\nthe interchange of I and J. So we consider again two cases: either 1) |(1U, T1\u02dc1I \u2297 \u02dc1J)| \u2264 \u03b51 (for all I, J);\nor, 2) |(1U, T1\u02dc1I \u2297 \u02dc1J)| \u2265 \u03b51 (for all I, J).\nIn the second case we obtain a form of (53) symmetric under I versus J exchange:\n(54)\n\ufffd\nIodd,Jodd\n(\u03b10, hI \u2297 hJ)2 \u2264 C\u03b5\u22122\n1 \u2225sum in (47)\u22252\n2 .\nBut (54) is exactly (48).\nNow we are left with case 1), namely, |(1U, T1\u02dc1I \u2297 \u02dc1J)| \u2264 \u03b51 (for all I, J). We remind that we came to\nthe following conclusion: either we already proved (48) or we have two other sets of inequalities: |(1U, \u02dc1I \u2297\nT2\u02dc1J)| \u2264 \u03b51 (for all I, J!), and we also have |(1U, T1\u02dc1I \u2297 T2\u02dc1J)| \u2264 \u03b52 (again for all I, J!). Again, when we\nsay \u201call\u201d we mean all I, J such that I \u00d7 J \u2282 U.\nSo all three terms |(1U, T1\u02dc1I \u2297 T2\u02dc1J)|, |(1U, \u02dc1I \u2297 T2\u02dc1J)|, |(1U, T1\u02dc1I \u2297 T2\u02dc1J)| for all I, J are small.\nAt this moment we consider the \ufb01rst line of (47). Notice that its output is in the (even, even) space by\nthe de\ufb01nition of T \u2217\n1 , T \u2217\n2 .\nAll other three lines also have some of their output in (even, even) space. So we collect the factor in front\nof the same hI\u2032 \u2297 hJ\u2032, I\u2032, J\u2032 being (even, even) from all four lines of (47).\nWe will have that the (even, even) part of the sum in (47) is exactly equal to the sum of orthogonal terms\n(\u02c6I, \u02c6J are (even, even)):\n[1 \u00b7 (b, hI \u2297 hJ) + \u02dc\u03b51(b, . . . ) + \u02dc\u03b52(b, . . . ) + \u02dc\u03b53(b, . . . )]h\u02c6I \u2297 h \u02c6\nJ ,\nwhere I, J are children of of \u02c6I, \u02c6J correspondingly, where dots . . . stand for some hI\u2032\u2032\ni \u00d7J\u2032\u2032\ni , i = 1, 2, 3, and\nwhere I\u2032\u2032\ni \u00d7 J\u2032\u2032\ni is a close relative of I \u00d7 J. These close relatives will be h\u02c6I \u2297 hJ, hI \u2297 h \u02c6\nJ and h\u02c6I \u2297 h \u02c6\nJ. Also\n|\u02dc\u03b51| \u2264 \u03b51 << \u03b52, |\u02dc\u03b52| \u2264 \u03b51 << \u03b52, |\u02dc\u03b53| \u2264 \u03b52.\nHence (47) has the norm squared bounded from below by the sum\n\ufffd\nI,J are odd,odd...\n|1 \u00b7 (b, hI \u2297 hJ) + \u02dc\u03b51(b, h\u02c6I \u2297 hJ) + \u02dc\u03b52(b, hI \u2297 h \u02c6\nJ) + \u02dc\u03b53(b, h\u02c6I \u2297 h \u02c6\nJ)|2 ,\nwhere the summation is over all those I \u00d7 J, that are inside U and I, J are both odd. As we have seen\n|\u02dc\u03b51| \u2264 \u03b51 << \u03b52, |\u02dc\u03b52| \u2264 \u03b51 << \u03b52, |\u02dc\u03b53| \u2264 \u03b52. Using this smallness and Lemma 13 for double tree, we conclude\nthat the square of the norm of the sum in (47) is bounded from below by the sum\nc |(b, hI \u2297 hJ)|2 ,\nwhere the summation is over all I \u00d7 J, say, at least 1-deep in U and and I, J are both odd, and we got what\nwe wanted at least for odd, odd part of b, namely we got (46).\nWe just proved the following \u201ctheorem\u201d.\nDYADIC BI-PARAMETER REPEATED COMMUTATOR AND DYADIC PRODUCT BMO\n25\nTheorem 7.6 Let T1, T2 be dyadic shifts introduced at the beginning of this article. There is a universal\nconstant C < \u221e such that\n\u2225bodd,odd\u2225BMOChF \u2264 C \u2225[T \u2217\n1 , [T \u2217\n2 , b]]\u2225 .\nNow if we have repeated commutator with not just one but with 4 shifts of our type (our shift is even\neven to odd odd, but there are three analogous shifts obviously with di\ufb00erent input/output).\nIf repeated commutator of b with all these 4 shifts are bounded we conclude as before that the full\n\u2225b\u2225BMOChF norm is the estimate from above for the maximum of norms of those repeated commutators with\nmultiplication by b. To formulate the theorem, let us denote the shifts we used above by\nT1 =: T eo\n1 , T2 =: T eo\n2 .\nNotice that those shifts have one drawback: they have huge kernels. So it is easy to understand that may\nbe repeated commutator looses some information about the symbol b.\nHowever we have three more couple T oe\n1 , T oe\n2 , T eo\n1 , T oe\n2 , T oe\n1 , T eo\n2 . Then we can repeat the argument above\nfor each of those couples. Then we get the \u201ctheorem\u201d:\nTheorem 7.7 There s a universal constant C < \u221e such that\n\u2225b\u2225BMOChF \u2264 C max\n\ufffd\n\u2225[T eo\n1 , [T eo\n2 , b]]\u2225, \u2225[T oe\n1 , [T oe\n2 , b]]\u2225, \u2225[T eo\n1 , [T oe\n2 , b]]\u2225, \u2225[T oe\n1 , [T eo\n2 , b]]\u2225\n\ufffd\n.\nIt is well known that the estimates from above in this theorem also holds, see e.g. [LM].\n7.2. Discussion of the deliberate mistakes.\n(1) In Lemmas 9, 11, and equation (49) we checked the claim for R1 = \u02c6I \u00d7 J, and it is correct. But it is\nincorrect for and R2 = I \u00d7 \u02c6J. In other words it is not true that one small coe\ufb03cients automatically\nmeans that all of them are small. We can \u201cspread smallness\u201d horizontally, but not vertically. Lemmas\n9, 11 were about T1. The similar claims about T2 would allow to \u201cspread smallness\u201d vertically, but\nnot horizontally. So we cannot \u201cspread smallness\u201d throughout the whole of connected set U.\n(2) In estimating the repeated paraproduct from below we can disregard all parts with D (see Section 8),\nas they are bounded by BMOr norm of the symbol. This is true. Also it is trues that substituting\nf = 1U eliminates all ZZ sums. But it is not true that substituting f = 1U eliminates all \u03c0Z, Z\u03c0\nterms of repeated paraproduct and leaves us only with \u03c0\u03c0 part.\nIn fact, if one take a look at\nall the 16 \ufb01rst sums comprising repeated paraproduct except for parts with D (see the beginning\nof Section 9), we can see that \u03c0Z unfortunately does not cancel out completely. The term \u03c0Z3\ncontains (T \u2217\n1 , \u02dc1I \u2297 hJ), and this term is not obliged to be zero. (But (T \u2217\n2 , \u02dc1I \u2297 hJ) is zero.) Again\n\u03c0Z4 contains (T \u2217\n1 T \u2217\n2 , \u02dc1I \u2297 hJ), and this term is not obliged to be zero. So \u03c0Z3, \u03c0Z4 survive, which\nis very unfortunate, they join all for lines of \u03c0\u03c0 survivors. Moreover, by the same reason Z\u03c02 and\nZ\u03c04 also survive. The more terms survive (now we have 6 of them, the more di\ufb03cult is to separate\ntheir action.\n(3) At least all \u03c0\u03c0 terms are almost orthogonal. Adding \u03c0Z3, \u03c0Z4, Z\u03c02 and Z\u03c04, makes the survival\npart not to be the sum of almost orthogonal terms.\n(4) Let us assume for a while that we are left only with almost orthogonal part, that is, with \u03c0\u03c0. This\nwould happen if we consider the repeated commutator, but not with multiplication by b but with\nbi-parameter paraproduct \u03c0b. This is also interesting, in principle. Let us take a look how we can use\nalmost orthogonality. So f = 1U, b = \u03b10 and we collect the terms in front of hK \u2297 hL in \u03c0\u03c0 all four\n26\nI. HOLMES, S. TREIL, AND A. VOLBERG\nlines below. Here is the coe\ufb03cient in front of hK \u2297 hL. Recall that K, L are such that \u02c6K \u00d7 \u02c6L \u2282 U.\nsgn(K, \u02c6K) sgn(L, \u02c6L)(b, h \u02c6\nK \u2297 h\u02c6L) \u00b7 (1U, \u02dc1 \u02c6\nK \u2297 \u02dc1\u02c6L)\u2212\n\u2212 sgn(K, \u02c6K)(b, h \u02c6\nK \u2297 hL)(1U, \u02dc1 \u02c6\nK \u2297 T2\u02dc1L)\u2212\n\u2212 sgn(L, \u02c6L)(b, hK \u2297 h\u02c6L)(1U, T1\u02dc1K \u2297 \u02dc1\u02c6L)+\n(b, hK \u2297 hL)(1U, T1\u02dc1K \u2297 T2\u02dc1L) =\n\u00b1 (b, h \u02c6\nK \u2297 h\u02c6L)\u2212\n\u00b1 (b, h \u02c6\nK \u2297 hL)(1U, \u02dc1 \u02c6\nK \u2297 T2\u02dc1L)\u2212\n\u00b1 (b, hK \u2297 h\u02c6L)(1U, T1\u02dc1K \u2297 \u02dc1\u02c6L)\n+ (b, hK \u2297 hL)(1U, T1\u02dc1K \u2297 T2\u02dc1L)\n=: xK,L .\nSo we are able to conclude immediately that the boundedness of the repeated commutator with\nbi-parameter \u03c0b (not with multiplication by b!) implies that\n(55)\n\ufffd\nK,L: \u02c6\nK\u00d7\u02c6L\u2282U\nx2\nK,L \u2264 \u2225repeated commutator with \u03c0b\u22252|U| .\nBut the ultimate goal would be to get a di\ufb00erent inequality:\n(56)\n\ufffd\nK,L: \u02c6\nK\u00d7\u02c6L\u2282U\n(b, h \u02c6\nK \u2297 h\u02c6L)2 \u2264 \u2225repeated commutator with \u03c0b\u22252|U| .\nThose inequalities are close to each other: just by the previous calculation of xK,L above. But\nthey are not the same. How to get rid of extra terms in xK,L? Lemma 13 should help, but to apply\nit we need the smallness of \u201cparasite\u201d terms (1U, \u02dc1 \u02c6\nK \u2297 T2\u02dc1L), (1U, T1\u02dc1K \u2297 \u02dc1\u02c6L), (1U, T1\u02dc1K \u2297 T2\u02dc1L).\nBut the size of those terms is probably approximately 1, and as we already noticed Lemma 11, that\ndealt with this size, is only partially true.\n(5) And a \ufb01nal di\ufb03culty is that in (b, h \u02c6\nK \u2297 h\u02c6L) above we have only \u02c6K, \u02c6L (even, even) by the de\ufb01nition\nof our dyadic shifts.\n8. The lists of building blocks of repeated commutators with T and T\u2217\nHere are all the blocks of repeated commutator with T \u2217\n1 \u2297 T \u2217\n2 . The blocks of repeated commutator with\nT1 \u2297 T2 are exactly the same, only stars are deleted. All parts with D letter are estimated by \u2272 \u2225b\u2225BMOr.\nUnder the localization to U0 we put f = 1U, where U is the enlargement of U0.\nThen ZZ part vanishes and Z\u03c03. The rest stays and should be estimated from below. In the next section\nwe show that this is easy if b has some extra property. In this section we show how di\ufb03cult is the problem\nwhen this extra property is not assumed. However, there is a hope because the main part that is left after\nlocalization is \u03c0\u03c0 and it has the property of almost orthogonality.\n\u03c0\u03c0 :\n\ufffd\n(b, hI \u2297 hJ)\u27e8f\u27e9I\u00d7J(T \u2217\n1 hI) \u2297 (T \u2217\n2 hJ)\n\u2212\n\ufffd\n(b, hI \u2297 hJ)\u27e8T \u2217\n2 f\u27e9I\u00d7J(T \u2217\n1 hI) \u2297 (hJ)\n\u2212\n\ufffd\n(b, hI \u2297 hJ)\u27e8T \u2217\n1 f\u27e9I\u00d7J(hI) \u2297 (T \u2217\n2 hJ)\n+\n\ufffd\n(b, hI \u2297 hJ)\u27e8T \u2217\n1 T \u2217\n2 f\u27e9I\u00d7J(hI) \u2297 (hJ)\nDYADIC BI-PARAMETER REPEATED COMMUTATOR AND DYADIC PRODUCT BMO\n27\n\u03c0Z :\n\ufffd\n(b, hI \u2297 hJ)(f, \u02dc1I \u2297 hJ)(T \u2217\n1 hI) \u2297 (T \u2217\n2 \u02dc1J)\n\u2212\n\ufffd\n(b, hI \u2297 hJ)(T \u2217\n2 f, \u02dc1I \u2297 hJ)(T \u2217\n1 hI) \u2297 (\u02dc1J)\n\u2212\n\ufffd\n(b, hI \u2297 hJ)(f, T \u2217\n1 \u02dc1I \u2297 hJ)(hI) \u2297 (T \u2217\n2 \u02dc1J)\n+\n\ufffd\n(b, hI \u2297 hJ)(T \u2217\n1 T \u2217\n2 f, \u02dc1I \u2297 hJ)(hI) \u2297 (\u02dc1J)\nZ\u03c0 :\n\ufffd\n(b, hI \u2297 hJ)(f, hI \u2297 \u02dc1J)(T \u2217\n1 \u02dc1I) \u2297 (T \u2217\n2 hJ)\n\u2212\n\ufffd\n(b, hI \u2297 hJ)(T \u2217\n2 f, hI \u2297 \u02dc1J)(T \u2217\n1 \u02dc1I) \u2297 (hJ)\n\u2212\n\ufffd\n(b, hI \u2297 hJ)(T \u2217\n1 f, hI \u2297 \u02dc1J)(\u02dc1I) \u2297 (T \u2217\n2 hJ)\n+\n\ufffd\n(b, hI \u2297 hJ)(T \u2217\n1 T \u2217\n2 f, hI \u2297 \u02dc1J)(\u02dc1I) \u2297 (hJ)\nZZ :\n\ufffd\n(b, hI \u2297 hJ)(f, hI \u2297 hJ)(T \u2217\n1 \u02dc1I) \u2297 (T \u2217\n2 \u02dc1J)\n\u2212\n\ufffd\n(b, hI \u2297 hJ)(f, T \u2217\n2 hI \u2297 hJ)(T \u2217\n1 \u02dc1I) \u2297 (\u02dc1J)\n\u2212\n\ufffd\n(b, hI \u2297 hJ)(T \u2217\n1 f, hI \u2297 hJ)(\u02dc1I) \u2297 (T \u2217\n2 \u02dc1J)\n+\n\ufffd\n(b, hI \u2297 hJ)(T \u2217\n1 T \u2217\n2 f, hI \u2297 hJ)(\u02dc1I) \u2297 (\u02dc1J)\n\u03c0D : \u2212\n\ufffd\n(b, hI \u2297 h \u02c6\nJ)(f, \u02dc1I \u2297 hJ)\n1\n\ufffd\n| \u02c6J|\n(T \u2217\n1 hI) \u2297 h \u02c6\nJ\n+\n\ufffd\n(b, hI \u2297 h \u02c6\nJ)(T \u2217\n1 f, \u02dc1I \u2297 hJ)\n1\n\ufffd\n| \u02c6J|\n(hI) \u2297 h \u02c6\nJ\nZD : \u2212\n\ufffd\n(b, hI \u2297 h \u02c6\nJ)(f, hI \u2297 hJ)\n1\n\ufffd\n| \u02c6J|\n(T \u2217\n1 \u02dc1I) \u2297 h \u02c6\nJ\n+\n\ufffd\n(b, hI \u2297 h \u02c6\nJ)(T \u2217\n1 f, hI \u2297 hJ)\n1\n\ufffd\n| \u02c6J|\n(\u02dc1I) \u2297 h \u02c6\nJ\nD\u03c0 : \u2212\n\ufffd\n(b, h\u02c6I \u2297 hJ)(f, hI \u2297 \u02dc1J)\n1\n\ufffd\n|\u02c6I|\n(h\u02c6I) \u2297 T \u2217\n2 hJ\n+\n\ufffd\n(b, h\u02c6I \u2297 hJ)(T \u2217\n2 f, hI \u2297 \u02dc1J)\n1\n\ufffd\n|\u02c6I|\n(h\u02c6I) \u2297 hJ\nDZ : \u2212\n\ufffd\n(b, h\u02c6I \u2297 hJ)(f, hI \u2297 hJ)\n1\n\ufffd\n|\u02c6I|\n(h\u02c6I) \u2297 (T \u2217\n2 \u02dc1J)\n+\n\ufffd\n(b, h\u02c6I \u2297 hJ)(T \u2217\n2 f, hI \u2297 hJ)\n1\n\ufffd\n|\u02c6I|\n(h\u02c6I) \u2297 (\u02dc1J)\nDD :\n\ufffd\n(b, h\u02c6I \u2297 hJ)(f, hI \u2297 hJ)h\u02c6I \u2297 h \u02c6\nJ\n28\nI. HOLMES, S. TREIL, AND A. VOLBERG\n9. Why everything works for b skipping scales?\nAs nothing works for general b, let us assume that our b skips scales. We mean here extra assumption\nthat\n(57)\n(b, hI \u2297 hJ) \u0338= 0 \u21d2 I J, are even, even .\nIn this special case we get the following\nTheorem 9.1 Let b satisfy (57). Then for any dyadic open set U0 we have\n\ufffd\nI\u00d7J\u2282U0\n(b, hI \u2297 hJ)2 \u2264 C1\u2225T b\u22252|U0| + C2\u2225b\u22252\nBMOr|U0| .\nProof. Just in front of this section the reader can see the table of all parts of the commutator. It is easy to\nprove that all parts D\u03c0, \u03c0D, ZD, DZ are bounded by \u2225b\u22252\nBMOr|U0. The DD part is bounded just be\nsup\nI,J\n(b, hI \u2297 hJ)2\n|I||J|\n\u2225f\u22252\n2,\nwhich is bounded by \u2225b\u22252\nBMOr\u2225f\u22252\n2 again.\nIf b is reduced to \u03b10\u2013the part of b with Haar spectrum in U0. We can consider such reduced b = \u03b10 by\nLemma 2. At the same times this means that I, J in \u03c0\u03c0, \u03c0Z, Z\u03c0, ZZ parts are such that I \u00d7 J \u2282 U0.\nIf f = 1U, where U is chosen in (4.6), |U| \u2264 C|U0|, then ZZ part vanishes, if b is reduced to \u03b10\u2013the part\nof b with Haar spectrum in U0.\nIf f = 1U, in \u03c0nZ part the \ufb01rst and the second lines vanish, but \u03c0Z3, \u03c0Z4 do not vanish, in Z\u03c0 part the\n\ufb01rst and the third lines vanish but Z\u03c02, Z\u03c04 do not vanish.\nNotice that by assumption (57) \u03c0Z3, \u03c0Z4 are in (even, any), and Z\u03c02, Z\u03c04 are in (any, even).\nLet us take a look at the \u03c0\u03c01-the \ufb01rst line of \u03c0\u03c0 part. It is is (odd, odd) part, and so it is orthogonal to\n\u03c0Z3, \u03c0Z4, Z\u03c02, Z\u03c04.\nIt is also orthogonal to \u03c0\u03c02, \u03c0\u03c03, \u03c0\u03c04-the second, third and fourth lines of \u03c0\u03c0 part. In fact, by assumption\n(57) \u03c0\u03c02 is in (odd, even), \u03c0\u03c03 is in (even, odd), \u03c0\u03c02 is in (even, even) parts.\nTherefore,\n(58)\n\ufffd\nI\u00d7J\u2282U0\n(\u03b10, hI \u2297 hJ)2 \u2264 \u2225\u03c0\u03c01(\u03b10, 1U)\u22252\n2 \u2264 \u2225\u03c0\u03c0(\u03b10, 1U) + \u03c0Z(\u03b10, 1U) + Z\u03c0(\u03b10, 1U)\u22252\n2 .\nOn the other hand,\nsup\n\u2225\u03c1\u22252=1,\u03c3H(\u03c1)\u2282U0\n|(1U, T b\n\u2217 (\u03c1))| =\nsup\n\u2225\u03c1\u22252=1,\u03c3H(\u03c1)\u2282U0\n|(1U, T \u03b10\n\u2217\n(\u03c1))| =\n\u2225\u03c0\u03c0(\u03b10, 1U) + \u03c0Z(\u03b10, 1U) + Z\u03c0(\u03b10, 1U) + ZZ(\u03b10, 1U) + parts with D(\u03b10, 1U)\u22252 \u2265\n\u2225\u03c0\u03c0(\u03b10, 1U) + \u03c0Z(\u03b10, 1U) + Z\u03c0(\u03b10, 1U)\u22252 \u2212 \u2225parts with D(1U, \u03b10)\u22252 .\nNow we already noticed that all parts D\u03c0, \u03c0D, ZD, DZ, DD are bounded by \u2225b\u22252\nBMOr|U0, and ZZ(\u03b10, 1U) =\n0. This and (58) prove theorem.\n\u25a1\nTheorem 9.2 Let b satisfy (57). Then for any dyadic open set U0\n\ufffd\nI\u00d7J\u2282U0\n(b, hI \u2297 hJ)2 \u2264 C1\u2225T b\u22252|U0| .\nDYADIC BI-PARAMETER REPEATED COMMUTATOR AND DYADIC PRODUCT BMO\n29\nProof. Let us consider two cases: 1) \u2225b\u2225BMOr \u2264\n1\n4C2 \u2225b\u2225BMOCHF , 2) \u2225b\u2225BMOr \u2265\n1\n4C2 \u2225b\u2225BMOCHF . In the\nsecond case we use Section 3 and conclude the claim of the theorem.\nIn the \ufb01rst case we use Theorem 9.1. We choose the dyadic open set U0 that gives us the Chang\u2013Fe\ufb00erman\nBMO norm of b, and we write down the conclusion of Theorem 9.1. The left hand side of\n\ufffd\nI\u00d7J\u2282U0\n(b, hI \u2297 hJ)2 \u2264 C1\u2225T b\u22252|U0| + C2\u2225b\u22252\nBMOr|U0|\nis \u2225b\u22252\nBMOChF |U0| because of extremal property of U0. Now we use \u2225b\u2225BMOr \u2264\n1\n4C2 \u2225b\u2225BMOCHF to absorb\nC2\u2225b\u22252\nBMOr|U0| into the left hand side. It is well known that the estimates from above in this theorem also\nholds, see e.g. [LM].\n\u25a1\n10. A counterexample\nMany results su\ufb00er from the same gap as [FL], if they all rely on the claim of the form that follows or a\nsimilar claim:\n(59)\n\u2225\u03c6\u22252 \u2272 \u2225P\u03c6\u22252 ,\nwhere P is a projection given by a Fourier multiplier whose symbol is the indicator of a product of half-\nspaces (in the original case of [FL], simply R+ \u00d7 R+ \u2282 R2) and the Fourier transform of \u03c6 is \u201csymmetric\u201d.\nIn practice, \u03c6 takes the form \u03c6 = |\u03b1|2 for some function \u03b1 analytic in C2\n+. Obviously \u03c6 is non-negative and\nin particular real-valued, so some symmetry of Fourier transform should follow.\nIn the one parameter case the simple symmetry shows that the previous claim is obviously correct. But\nnot so in two parameter case anymore, as an example below shows.\nThe statement (59) should be avoided (in this generality \u03c6 = |\u03b1|2, \u03b1 being nice analytic function in C2\n+)\nin the future corrected proof. However, something like that should be in the proof, as it is the only estimate\nfrom below in the whole reasoning: all other estimates in [FL] are the estimates of operators from above.\nLet \u03b1 be an analytic function in C+ \u00d7 C+ and let it be just Fourier transform of \u03c8(\u03be), \u03be = (\u03be1, \u03be2) \u2208 R2\n++,\n\u03c8 \u2208 L2(d\u03be1d\u03be2). Let the support of \u03c8 be in Q := [0, 2]2. In what follows d\u03be = d\u03be1d\u03be2.\n|\u03b1(x1, x2)|2 =\n\ufffd \ufffd\neix1(\u03be1\u2212\u03b71)+ix2(\u03be2\u2212\u03b72)\u03c8(\u03be) \u00af\u03c8(\u03b7)d\u03bed\u03b7 =\n\ufffd \ufffd\neix1t1+ix2t2\u03c8(\u03be1, \u03be2)\u03c8(\u03be1 \u2212 t1, \u03be2 \u2212 t2)d\u03be1d\u03be2dt1dt2\nHence Fourier transform\n(F|\u03b1|2)(t1, t2) =\n\ufffd\nQ0\n\u03c8(\u03be1, \u03be2)\u03c8(\u03be1 \u2212 t1, \u03be2 \u2212 t2)d\u03be1d\u03be2\nIf \u03c8 is a characteristic function of \u01eb neighborhood of \u03be1 + \u03be2 = 1, \u03bei \u2265 0, then for positive vectors t this\nquantity is uniformly bounded by C\u01eb. Moreover, this quantity is zero if positive vector t has norm bigger\nthan C\u01eb.\nHence\n\u2225P++|\u03b1|2\u22252 \u224d\n\u221a\n\u01eb2 \u00b7 \u01eb2 = \u01eb2\nOn the other hand,\n\u2225\u03b1\u22252 \u224d \u01eb1/2 .\nAlso let us look at P+\u2212|\u03b1|2. Now we look at\n(F|\u03b1|2)(t1, \u2212t2) =\n\ufffd\nQ0\n\u03c8(\u03be1, \u03be2)\u03c8(\u03be1 \u2212 t1, \u03be2 + t2)d\u03be1d\u03be2\n30\nI. HOLMES, S. TREIL, AND A. VOLBERG\nfor positive vector t. We can see that this is of order \u01eb for positive vectors t such that they \ufb01ll-in the domain\ninside angle of size \u01eb and diameter 1 and of total measure of order \u01eb. Thus\n\u2225P+\u2212|\u03b1|2\u22252\n2 \u224d \u01eb3 .\nSo\n\u2225\u03b1\u22252\n4 = \u2225|\u03b1|2\u22252 \u2265 \u01eb3/2 .\nIn fact,\n\u2225\u03b1\u22252\n4 = \u2225|\u03b1|2\u22252 \u224d \u01eb3/2 .\nSo both inequalities below are false:\n\u2225P++|\u03b1|2\u22252 \u2265 c\u2225\u03b1\u22252\n2;\n\u2225P++|\u03b1|2\u22252 \u2265 c\u2225\u03b1\u22252\n4.\nNormalization of \u03b1 does not help. Let \u02dc\u03b1 = \u01eb\u22121/2\u03b1. Then\n\u2225\u02dc\u03b1\u22252 \u224d 1,\n\u2225\u02dc\u03b1\u22252\n4 = \u2225|\u02dc\u03b1|2\u22252 \u224d \u01eb1/2 .\nAnd\n\u2225P++|\u02dc\u03b1|2\u22252 \u224d \u01eb .\nSo the inequality below is false:\n\u2225P++|\u02dc\u03b1|2\u22252 \u2265 c.\nEven though \u2225\u02dc\u03b1\u22252 \u224d 1.\nThus the inequality on page 208 line 4 top of [L] cannot be true as written. Similarly, inequalities in [FL]\non page 149 line 3 at the end of the page cannot be true as written.\nSymmetry works in estimating from below positive frequency part of the Fourier (of real function) via\nthe whole Fourier transform of this function perfectly well for functions of one variable. But for functions of\ntwo variables this does not work. Even if the function is a) positive and b) the modulus squared of analytic\nfunction in C+ \u00d7 C+ as the example above shows.\nOne can guess what is missing is one more normalization (which we do not have in the example above):\n(60)\n1 \u224d \u2225\u02dc\u03b1\u22252 \u2272 \u2225\u02dc\u03b1\u22254 .\nHowever, there is a modi\ufb01cation of this counterexample suggested by T. Hyt\u00a8onen that has this property\nas well.\n",
    "Path": "../data/test_pdfs/2101.00763.pdf",
    "sha_256": "75c2c8e9e9a3da8f0438f52b40fe2a8e9ca9508ec5be567ad13878416c37bc25",
    "language": "en",
    "language_probability": 0.9999989602175381,
    "Authors": "",
    "Title": "",
    "url": "",
    "date": ""
}