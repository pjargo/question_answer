{
    "tokens": [
        "\u0120corrections",
        ".",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]",
        "[PAD]"
    ],
    "tokens_less_sw": [
        "\u0120corrections",
        "."
    ],
    "token_embeddings": [
        [
            0.004493637476116419,
            0.01968648098409176,
            0.0044986712746322155,
            -0.001182346255518496,
            -0.002064097672700882,
            -0.011112605221569538,
            -0.00572760496288538,
            0.0109980134293437,
            -0.01726747490465641,
            0.007018468342721462,
            -0.008590567857027054,
            -0.008459817618131638,
            -0.02015097625553608,
            0.013502906076610088,
            0.011810241267085075,
            -0.016447460278868675,
            0.0033888272009789944,
            0.0034952713176608086,
            0.004406321793794632,
            -0.01102888211607933,
            -0.00947396270930767,
            0.004679024685174227,
            0.0016778026474639773,
            -0.0028450230602174997,
            0.006795674562454224,
            -0.00564561365172267,
            -0.0003641595540102571,
            0.00010154430492548272,
            -7.724449824308977e-05,
            0.005308576859533787,
            0.009730544872581959,
            0.00036427180748432875,
            0.003413862781599164,
            -0.008607598952949047,
            -0.0014986180467531085,
            0.006832328625023365,
            0.009898880496621132,
            -0.015410298481583595,
            0.01445705071091652,
            -0.001367554534226656,
            0.005888761952519417,
            -0.008760586380958557,
            0.007299479562789202,
            0.0027198249008506536,
            0.005969139281660318,
            -0.004071162547916174,
            -0.025613494217395782,
            -0.006180978380143642,
            0.00872958917170763,
            0.00425462331622839,
            -0.007967984303832054,
            -0.0070375180803239346,
            -0.010840154252946377,
            -0.003403992159292102,
            0.0008261738694272935,
            -0.007289703469723463,
            -0.002165792975574732,
            0.00019357606652192771,
            0.0029778447933495045,
            0.008653919212520123,
            -0.001819463213905692,
            0.008856474421918392,
            0.005402527749538422,
            0.004700843710452318,
            -0.009876040741801262,
            0.008356635458767414,
            0.009291368536651134,
            0.019246138632297516,
            -0.009344162419438362,
            0.019213905557990074,
            0.002290911739692092,
            0.0064000291749835014,
            0.01739063858985901,
            0.007476100232452154,
            0.0021209190599620342,
            0.008679451420903206,
            0.007594408933073282,
            -0.02554141916334629,
            -0.016956277191638947,
            -0.0007857733871787786,
            -0.007396624889224768,
            -0.007691703271120787,
            0.004066339693963528,
            0.005692599806934595,
            0.011912532150745392,
            -0.005511285271495581,
            -0.007390774320811033,
            0.01011988241225481,
            0.014243567362427711,
            0.013401417061686516,
            0.01755625568330288,
            0.0023094022180885077,
            0.0037932831328362226,
            -0.012649672105908394,
            0.009930596686899662,
            0.005675324704498053,
            0.013308036141097546,
            -0.02967677265405655,
            0.010281218215823174,
            0.0010571797611191869
        ],
        [
            -0.3950701057910919,
            0.991113543510437,
            0.5974463224411011,
            1.014809489250183,
            -0.31379440426826477,
            -0.6532874703407288,
            -0.38230565190315247,
            0.7814406752586365,
            -1.8558025360107422,
            -0.49996134638786316,
            0.4344589114189148,
            -0.7662081122398376,
            -0.3794088661670685,
            0.37751591205596924,
            -0.4511248469352722,
            -0.7692809700965881,
            0.05599931254982948,
            -0.1928980052471161,
            -1.0985190868377686,
            -0.8322224617004395,
            -0.14043380320072174,
            0.17259134352207184,
            0.08618989586830139,
            -0.12080004811286926,
            -0.17222341895103455,
            -0.030355485156178474,
            0.5471551418304443,
            -0.1583760678768158,
            0.08737155795097351,
            0.28621795773506165,
            0.07430898398160934,
            -0.4193645119667053,
            0.18209625780582428,
            -1.1029767990112305,
            0.050972871482372284,
            0.25910064578056335,
            0.11428067088127136,
            -0.6435522437095642,
            0.27783218026161194,
            -1.0046039819717407,
            0.10425248742103577,
            0.35086315870285034,
            -0.3764670789241791,
            -0.23079226911067963,
            0.0764627605676651,
            -1.0902060270309448,
            -0.3994710147380829,
            -0.6021047234535217,
            0.8554877638816833,
            -0.37731844186782837,
            -0.41529038548469543,
            -0.26066187024116516,
            -0.6333084106445312,
            0.16350558400154114,
            0.4207836091518402,
            0.02597932144999504,
            0.4430818557739258,
            -0.40478259325027466,
            -0.08966505527496338,
            0.2729630470275879,
            -0.15732717514038086,
            -0.3783261477947235,
            0.4311046600341797,
            -0.1696193367242813,
            -0.7111539244651794,
            1.1818400621414185,
            0.09175307303667068,
            1.0396851301193237,
            -0.5952656865119934,
            0.966075599193573,
            0.45171791315078735,
            0.9094718098640442,
            0.9143469333648682,
            0.3074776530265808,
            0.0344000943005085,
            0.5948631167411804,
            0.2291257232427597,
            -0.3841550350189209,
            -0.37917065620422363,
            -0.3118537664413452,
            -0.3739915192127228,
            -0.24161939322948456,
            -0.760607123374939,
            0.42738452553749084,
            -0.17587397992610931,
            -0.7596330642700195,
            -0.2819942533969879,
            0.42412686347961426,
            0.08762022107839584,
            0.8948532938957214,
            -0.2966003715991974,
            0.7680585980415344,
            0.30303144454956055,
            -0.40337374806404114,
            1.6416957378387451,
            0.257341206073761,
            -0.07278383523225784,
            -1.1187039613723755,
            1.1232489347457886,
            1.17220938205719
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ]
    ],
    "token_embeddings_less_sw": [
        [
            0.004493637476116419,
            0.01968648098409176,
            0.0044986712746322155,
            -0.001182346255518496,
            -0.002064097672700882,
            -0.011112605221569538,
            -0.00572760496288538,
            0.0109980134293437,
            -0.01726747490465641,
            0.007018468342721462,
            -0.008590567857027054,
            -0.008459817618131638,
            -0.02015097625553608,
            0.013502906076610088,
            0.011810241267085075,
            -0.016447460278868675,
            0.0033888272009789944,
            0.0034952713176608086,
            0.004406321793794632,
            -0.01102888211607933,
            -0.00947396270930767,
            0.004679024685174227,
            0.0016778026474639773,
            -0.0028450230602174997,
            0.006795674562454224,
            -0.00564561365172267,
            -0.0003641595540102571,
            0.00010154430492548272,
            -7.724449824308977e-05,
            0.005308576859533787,
            0.009730544872581959,
            0.00036427180748432875,
            0.003413862781599164,
            -0.008607598952949047,
            -0.0014986180467531085,
            0.006832328625023365,
            0.009898880496621132,
            -0.015410298481583595,
            0.01445705071091652,
            -0.001367554534226656,
            0.005888761952519417,
            -0.008760586380958557,
            0.007299479562789202,
            0.0027198249008506536,
            0.005969139281660318,
            -0.004071162547916174,
            -0.025613494217395782,
            -0.006180978380143642,
            0.00872958917170763,
            0.00425462331622839,
            -0.007967984303832054,
            -0.0070375180803239346,
            -0.010840154252946377,
            -0.003403992159292102,
            0.0008261738694272935,
            -0.007289703469723463,
            -0.002165792975574732,
            0.00019357606652192771,
            0.0029778447933495045,
            0.008653919212520123,
            -0.001819463213905692,
            0.008856474421918392,
            0.005402527749538422,
            0.004700843710452318,
            -0.009876040741801262,
            0.008356635458767414,
            0.009291368536651134,
            0.019246138632297516,
            -0.009344162419438362,
            0.019213905557990074,
            0.002290911739692092,
            0.0064000291749835014,
            0.01739063858985901,
            0.007476100232452154,
            0.0021209190599620342,
            0.008679451420903206,
            0.007594408933073282,
            -0.02554141916334629,
            -0.016956277191638947,
            -0.0007857733871787786,
            -0.007396624889224768,
            -0.007691703271120787,
            0.004066339693963528,
            0.005692599806934595,
            0.011912532150745392,
            -0.005511285271495581,
            -0.007390774320811033,
            0.01011988241225481,
            0.014243567362427711,
            0.013401417061686516,
            0.01755625568330288,
            0.0023094022180885077,
            0.0037932831328362226,
            -0.012649672105908394,
            0.009930596686899662,
            0.005675324704498053,
            0.013308036141097546,
            -0.02967677265405655,
            0.010281218215823174,
            0.0010571797611191869
        ],
        [
            -0.3950701057910919,
            0.991113543510437,
            0.5974463224411011,
            1.014809489250183,
            -0.31379440426826477,
            -0.6532874703407288,
            -0.38230565190315247,
            0.7814406752586365,
            -1.8558025360107422,
            -0.49996134638786316,
            0.4344589114189148,
            -0.7662081122398376,
            -0.3794088661670685,
            0.37751591205596924,
            -0.4511248469352722,
            -0.7692809700965881,
            0.05599931254982948,
            -0.1928980052471161,
            -1.0985190868377686,
            -0.8322224617004395,
            -0.14043380320072174,
            0.17259134352207184,
            0.08618989586830139,
            -0.12080004811286926,
            -0.17222341895103455,
            -0.030355485156178474,
            0.5471551418304443,
            -0.1583760678768158,
            0.08737155795097351,
            0.28621795773506165,
            0.07430898398160934,
            -0.4193645119667053,
            0.18209625780582428,
            -1.1029767990112305,
            0.050972871482372284,
            0.25910064578056335,
            0.11428067088127136,
            -0.6435522437095642,
            0.27783218026161194,
            -1.0046039819717407,
            0.10425248742103577,
            0.35086315870285034,
            -0.3764670789241791,
            -0.23079226911067963,
            0.0764627605676651,
            -1.0902060270309448,
            -0.3994710147380829,
            -0.6021047234535217,
            0.8554877638816833,
            -0.37731844186782837,
            -0.41529038548469543,
            -0.26066187024116516,
            -0.6333084106445312,
            0.16350558400154114,
            0.4207836091518402,
            0.02597932144999504,
            0.4430818557739258,
            -0.40478259325027466,
            -0.08966505527496338,
            0.2729630470275879,
            -0.15732717514038086,
            -0.3783261477947235,
            0.4311046600341797,
            -0.1696193367242813,
            -0.7111539244651794,
            1.1818400621414185,
            0.09175307303667068,
            1.0396851301193237,
            -0.5952656865119934,
            0.966075599193573,
            0.45171791315078735,
            0.9094718098640442,
            0.9143469333648682,
            0.3074776530265808,
            0.0344000943005085,
            0.5948631167411804,
            0.2291257232427597,
            -0.3841550350189209,
            -0.37917065620422363,
            -0.3118537664413452,
            -0.3739915192127228,
            -0.24161939322948456,
            -0.760607123374939,
            0.42738452553749084,
            -0.17587397992610931,
            -0.7596330642700195,
            -0.2819942533969879,
            0.42412686347961426,
            0.08762022107839584,
            0.8948532938957214,
            -0.2966003715991974,
            0.7680585980415344,
            0.30303144454956055,
            -0.40337374806404114,
            1.6416957378387451,
            0.257341206073761,
            -0.07278383523225784,
            -1.1187039613723755,
            1.1232489347457886,
            1.17220938205719
        ]
    ],
    "Document": "2101.01291.pdf",
    "Abstract": ". We generalize our previous new de\ufb01nition of Euler Gamma function\nto higher Gamma functions. With this uni\ufb01ed approach, we characterize Barnes\nhigher Gamma functions, Mellin Gamma functions, Barnes multiple Gamma func-\ntions, Jackson q-Gamma function, and Nishizawa higher q-Gamma functions. The\nmethod presented extends to more general functional equations. This generalization\nreveals the multiplicative group structure of solutions of the functional equation that\nappears as a cocycle equation. We also generalize Barnes hierarchy of higher Gamma\nfunction and multiple Gamma functions. With this new de\ufb01nition, Barnes-Hurwitz\nzeta functions are no longer needed in the de\ufb01nition of Barnes multiple Gamma\nfunctions. This simpli\ufb01es the classical de\ufb01nition, without the necessary analytic\npreliminaries about the meromorphic extension of Barnes-Hurwitz zeta functions,\nand allows to de\ufb01ne a larger class of Gamma functions. For some algebraic inde-\npendence conditions on the parameters, we do have uniqueness of the solutions.\nThis implies the identi\ufb01cation of a subclass of our multiple Gamma functions with\nclassical Barnes multiple Gamma functions.\n1. ",
    "Text": "we generalize our previous new de\ufb01nition of euler gamma function to higher gamma functions. with this uni\ufb01ed approach, we characterize barnes higher gamma functions, mellin gamma functions, barnes multiple gamma functions, jackson q-gamma function, and nishizawa higher q-gamma functions. the method presented extends to more general functional equations. this generalization reveals the multiplicative group structure of solutions of the functional equation that appears as cocycle equation. we also generalize barnes hierarchy of higher gamma function and multiple gamma functions. with this new de\ufb01nition, barnes-hurwitz zeta functions are no longer needed in the de\ufb01nition of barnes multiple gamma functions. this simpli\ufb01es the classical de\ufb01nition, without the necessary analytic preliminaries about the meromorphic extension of barnes-hurwitz zeta functions, and allows to de\ufb01ne larger class of gamma functions. for some algebraic independence conditions on the parameters, we do have uniqueness of the solutions. this implies the identi\ufb01cation of subclass of our multiple gamma functions with classical barnes multiple gamma functions. 1. introduction the \ufb01rst result is new characterization and de\ufb01nition of euler gamma function that was \ufb01rst presented in the article [19] dedicated to euler gamma function. we can develop in natural way the classical formulas in the theory from this new de\ufb01nition. we denote the right half complex plane by c+ {s c; re 0}. theorem 1.1. there is one and only one \ufb01nite order meromorphic function \u03b3(s), c, without zeros nor poles in c+, with \u03b3(1) 1, \u03b3\u2032(1) r, that satis\ufb01es the functional equation \u03b3(s 1) \u03b3(s) de\ufb01nition 1.2 (euler gamma function). the only solution to the above conditions is the euler gamma function. 2010 mathematics subject classi\ufb01cation. primary: secondary: key words and phrases. gamma function, barnes gamma function, mellin gamma functions, jackson q-gamma function, multiple gamma functions. r. p\u00b4erez-marco without the condition \u03b3\u2032(1) we don\u2019t have uniqueness, but we have the following result: theorem 1.3. let be \ufb01nite order meromorphic function in c, without zeros nor poles in c+, and satis\ufb01es the functional equation 1) then there exists and such that moreover, if then we have the proof can be found in [19], but we reproduce it here as preliminary result for the generalizations which are the core of this article. we refer to the companion article [19] for the various de\ufb01nitions of euler gamma function and the historical development of the subject of eulerian integrals. we strongly encourage the reader to study \ufb01rst [19], and also consult the bibliographic notes in [20] before studying this article. in the proof we use the elementary theory of entire function that can be found in classical textbooks as [5] (this is recalled in the appendix of [19]). proof. we \ufb01rst prove existence and then uniqueness. existence: if we have function satisfying the previous conditions then its divisor must be contained in c\u2212c+, and the functional equation implies that it has no zeros and only simple poles at the non-positive integers. we can directly construct such meromorphic function with such divisor, for example, (1) g(s) +\u221e \ufffd\u22121 es/n which converges since +\u221e, and is meromorphic function of \ufb01nite order. now, we have that the meromorphic function has no zeros nor poles and it is also of \ufb01nite order (as ratio of \ufb01nite order meromorphic functions), hence there exists polynomial such that g(s 1) ep (s) consider polynomial such that (2) 1) p(s) on the definition of higher gamma functions the polynomial is uniquely determined from up to constant, hence we can freely choose by the product de\ufb01nition, is real and positive for positive real numbers, and we choose log now we have that \u03b3(s) satis\ufb01es the functional equation, \u03b3(1) 1, and \u03b3\u2032(1) because is real analytic in the positive reals. thus we proved existence. uniqueness: consider second solution f. let then is an entire function of \ufb01nite order without zeros, hence we can write exp a(s) for some polynomial a. moreover, the functional equation shows that is z-periodic. hence, there exists an integer z, such that for any c, a(s 1) a(s) it follows that a(s) 2\u03c0ias for some c. since 1, we have 1. since \u2032(1) r, and \u2032(1) we have 0, thus is constant, and \u03b3. remarks. using the functional equation we can weaken the conditions and request only that the function is meromorphic only on c+ with the corresponding \ufb01nite order growth. we can also assume that it is only de\ufb01ned on cone containing the positive real axes, vertical strip of width larger than 1, or in general with any region which is transitive region for the integer translations and satis\ufb01es the \ufb01nite order growth condition in when +\u221e. proposition 1.4. let domain such that for any there exists an integer n(s) such that n(s) \u03c9, and |n(s)| for some constants c, depending only on \u03c9. then any function \u02dc\u03b3 satisfying \ufb01nite order estimate in and the functional equation \u02dc\u03b3(s 1) s\u02dc\u03b3(s) when s, \u03c9, extends to \ufb01nite order meromorphic function on c. proof. let \u02dc\u03b3 be such function. let be corresponding region. iterating the functional equation we get that \u02dc\u03b3 extends meromorphically to the whole complex plane. then, if is the weierstrass product (1) and polynomial given by (2), the function is z-periodic entire function. since is an entire function of \ufb01nite order, we have in the \ufb01nite order estimate for h. using that |n(s)| we get that is of \ufb01nite order, hence \u02dc\u03b3 is meromorphic and of \ufb01nite order in the plane. assuming real-analytic we get \u03b3\u2032(1) r, but this last condition is much weaker. also, as it follows from the proof, we can replace this condition by \u03b3(a) for some z, or only request that is asymptotically real, r. p\u00b4erez-marco im \u03b3(x) 0. without the condition \u03b3\u2032(1) the proof shows that is uniquely determined up to factor with z. 2. general definition. 2.1. general de\ufb01nition and characterization. we \ufb01rst need to recall the notion of \u201cleft located divisor\u201d (lld) function that is useful in the theory of poissonnewton formula for \ufb01nite order meromorphic functions ([14], [15]). de\ufb01nition 2.1 (lld function). meromorphic function in is in the class lld (left located divisor) if has no zeros nor poles in c+, i.e. c+. the function is in the class cld (cone located divisor) if its divisor is contained in closed cone in the closed half plane c+. the following theorem is generalization of theorem 1.1 which results for the simple lld function s. theorem 2.2. let be real analytic lld meromorphic function in of \ufb01nite order. there exists unique function \u03b3f, the gamma function associated to f, satisfying the following properties: (1) (2) 1) (3) \u03b3f is meromorphic function of \ufb01nite order, (4) \u03b3f is lld, (5) \u03b3f is real analytic. if is cld then \u03b3f is cld. proof. the proof follows the same lines as the proof of theorem 1.1. first, we prove that the functional equation (2) determines the divisor of \u03b3f, then we construct solution using weierstrass product, and \ufb01nally we prove uniqueness. determination of the divisor. as usual, we denote the divisor of as the formal sum where the sum is extended over and is the multiplicity of the zero if is zero, the negative multiplicity of the pole if is pole, or if is neither zero or pole. hence the function n\u03c1 is an almost zero function. divisor is said to be lld, resp. cld, if it is the divisor of lld, resp. cld, function. on the definition of higher gamma functions lemma 2.3. if \u03b3f is lld and satis\ufb01es the functional equation (2), then the divisor of \u03b3f is (\u03c1 k) where (\u03c1) and (3) |\u03c1| if the divisor is lld, resp. cld, then is lld, resp. cld. we allow ourselves the slight abuse of notation to denote the divisor of potential solution \u03b3f when we have not yet proved the existence of \u03b3f. proof. for any c, the functional equation gives or equivalently hence, by induction, we have for 1, and since \u03b3f is lld, for |\u03c1| re \u03c1| re we have 0, so (4) |\u03c1|\u22121 +\u221e and we get, with \u03c1\u2032 k, (\u03c1) n\u03c1\u2032 (\u03c1\u2032 k) which gives the formula for r. p\u00b4erez-marco convergence exponent of divisor. de\ufb01nition 2.4. the divisor of has exponent of convergence if || \u03c1\u0338=0 +\u221e we recall that meromorphic function of \ufb01nite order has divisor with some \ufb01nite exponent of convergence. more precisely, if o(f) +\u221e is the order of f, then for any 0, o(f) is an exponent of convergence of its divisor. proposition 2.5. if is lld of \ufb01nite order, then given by lemma 2.3 is lld and of \ufb01nite order. more precisely, if is of oder then is of order 1. we prove \ufb01rst more precise result when is in the class cld. proposition 2.6. if is an exponent of convergence for in the class cld, then \u03b3f is cld and \u03b1+1 is an exponent of convergence for \u03b3f. more precisely, there exists constant such that || || || proof. lemma 2.3 proves that \u03b3f is cld if we start with cld. now, if is cld, there is constant such that for any and in the left cone (the constant depends on the cone) |\u03c1 c(|\u03c1| on the definition of higher gamma functions then we have, with \u03c1\u2032 k, || \u03c1\u0338=0 \u03c1\u0338=0 |\u03c1| \u03c1\u2032 /\u2208n +\u221e |\u03c1\u2032 k|\u2212\u03b2 \u03c1\u2032\u0338=0 +\u221e (|\u03c1\u2032| k)\u2212\u03b2 \u03c1\u2032\u0338=0 \u03c1\u2032\u0338=0 +\u221e (|\u03c1\u2032| x)\u2212\u03b2 \u03c1\u2032\u0338=0 \u03c1\u2032\u0338=0 || || hence, for the sum is converging and we prove the lemma. now we prove proposition 2.5. proof. we consider the part of the divisor of \u03b3f contained in the cone {| im \u03c1| re \u03c1}. the same argument as before proves that (5) +\u221e this can be seen by observing that is generated by families \u03c1, \u03c1\u22121, \u03c1\u22122, where the part of this sequence contained in the cone is of the form \u03c10, \u03c10 1, \u03c10 2, ., where \u03c10 for some integer 0. now, since re 0, we have |\u03c10|\u2212\u03b1 |\u03c1|\u2212\u03b1. hence, if we consider the meromorphic function with divisor generated by the (\u03c10), we do have || || and we use proposition 2.6 to prove (5). now, we have to care about the convergence of the remaining sum and prove (6) +\u221e r. p\u00b4erez-marco any such divisor point of \u03b3f is generated by zero or pole /\u2208 of f, that generates \u03c1, 1, 2, .. there are at most |\u03c1| such points associated to each \u03c1. hence we can bound the sum || and the result follows. existence of \u03b3f. since has \ufb01nite order, the divisor of has \ufb01nite convergence exponent. hence, determined by lemma 2.3 has \ufb01nite exponent of convergence. let be an integer that is an exponent of convergence for this divisor (the case only occurs for \ufb01nite divisor). we consider the weierstrass product, g(s) \u03c1\u0338=0 ed(s/\u03c1)n\u03c1(\u03b3f where (1 x) exp then has order and therefore the meromorphic function g(s 1) is of \ufb01nite order and has no zeros nor poles. so, it is an entire function of \ufb01nite order without zeros. therefore, there exists polynomial such that (7) g(s 1) e\u03c6(s) there is unique polynomial such that \u03c8(0) and (8) \u03c8(s 1) \u03c8(s) \u03c6(s). we can obtain directly by developing on the bases of falling factorial polynomials, s(s 1) (s 1), that diagonalize the di\ufb00erence operator, \u03c6(s) k! on the definition of higher gamma functions then \u03c8(s) +\u221e (k 1)! now, considering constant such that ec the meromorphic function (9) satis\ufb01es (condition (1)), the functional equation (2) and all the other conditions in theorem 2.2, and we have proved the existence. uniqueness of \u03b3f. consider second solution g. let then is an entire function of \ufb01nite order without zeros, hence we can write exp a(s) for some polynomial a. moreover, the functional equation shows that is z-periodic. therefore, there exists an integer z, such that for any c, a(s 1) a(s) it follows that a(s) 2\u03c0ias for some c. since 1, we have 1. since \u2032(1) r, and \u2032(1) we have 0, thus is constant, and \u03b3f. 2.2. uniqueness results. it is interesting to note, following the argument for uniqueness, that we can drop the normalisation condition (1) and the real-analyticity condition (5) and we obtain the following theorem (this is similar to theorem 1.3), theorem 2.7. let be lld meromorphic function in of \ufb01nite order. we consider function satisfying (1) g(s 1) (2) is meromorphic function of \ufb01nite order, (3) is lld, then there is always solution and any other solution is of the form g(s) for some and c. if is cld then the solutions are cld. moreover, we have possible further normalizations: if we add the condition 1, or for some n\u2217, then all solutions are of the form g(s) if \u22121 has pole at and we add the condition then all solutions are of the form g(s) 10 r. p\u00b4erez-marco if has no zero at then we can add the condition and all solutions are of the form g(s) if we add the conditions and g(\u03c9) where r+ then \u03b3f is unique. if we add the conditions and then the solution \u03b3f is unique. if we add the hypothesis that is real analytic and the condition that is real analytic then all solutions are of the form g(s) with r\u2217. proof. with the same proof as before we get the existence of solution such that 1. and that any other solution is of the form g(s) (note that the constant function is not lld). for another solution g, the condition for implies 1, hence the \ufb01rst normalization result. for the second statement we observe that ebress=0\u03b3f hence 1. the third statement is similar to the \ufb01rst one observing that has no pole at 0. the fourth normalization condition forces (\ufb01rst statement) and which implies because is irrational. for the \ufb01fth statement, for second solution we have, from 1, g(s) di\ufb00erentiate and set 1, then we get \u03b3f\ufffd\u2032 (1) hence and the solution is unique. for the last statement, g(s) and and \u03b3f real analytic forces 0, and r\u2217. example 2.8. for and the conditions real analytic and 1, this theorem is just theorem 1.1 and the only solution g(s) \u03b3(s) is euler gamma function. let c+ and consider \u03c9s. then g(s) \u03c9s\u03b3(s) is solution and all the solutions are of the form g(s) log \u03c9+b\u03b3(s) for and (note that the choice of the branch of log is irrelevant). if c\u2217 and we request 1, then all solutions are of the form, with z, (10) g(s) e(s\u22121)(2\u03c0ia+log \u03c9) \u03b3(s) if r+, then \u03c9s is real analytic, and if we request to be real analytic and 1, then, taking the real branch of log \u03c9, we must have and (11) g(s) log \u03b3(s) on the definition of higher gamma functions 11 example 2.9. another particular example that is worth noting in this theorem is when ep (s). then the solutions are of the form g(s) where for z, where is the di\ufb00erence operator. this means that b, where c. if we want solutions normalized such that then and 2.3. continuity result. we prove the continuity of the operator \ufffd\u2192 \u03b3f for the appropriate natural topology. theorem 2.10. let be sequence of meromorphic functions with uniformly bounded convergence exponent and such that || |n\u03c1||\u03c1|\u2212\u03b1 +\u221e for uniform bound 0. we assume that the functions satisfy the hypothesis of theorem 2.2 and that when +\u221e, where is meromorphic function and the convergence is uniform on compact sets outside the poles of f. then has convergence exponent bounded by 0, || +\u221e and satis\ufb01es the hypothesis of theorem 2.2, and also we have, uniformly outside the poles, lim n\u2192+\u221e \u03b3f proof. we can read the divisors as an integer valued functions with discrete support which are converging to uniformly on compact sets. by uniform boundedness of the sums || |n\u03c1||\u03c1|\u2212\u03b1 we can pass to the limit and || lim n\u2192+\u221e || therefore has \ufb01nite order. the class of lld real analytic functions is closed. the class of functions satisfying the functional equation is also closed, hence satis\ufb01es the hypothesis of theorem 2.2, so \u03b3f is well de\ufb01ned. now, since we have using lemma 2.3 that on compact sets outside of the support of the sequence of meromorphic functions is uniformly bounded (otherwise we would have subsequence with poles out of the limit that would contradict the convergence of the divisor). 12 r. p\u00b4erez-marco hence, we can extract converging subsequences. but any limit is identi\ufb01ed by the uniqueness of theorem 2.2, and we have convergence. 2.4. multiplicative group property. consider the space of lld \ufb01nite order meromorphic functions in the plane. we have that en where en is the subgroup of meromorphic functions of order n. on en we consider the topology given by convergence of the divisor on compact sets and the convergence of functions on compact sets outside the limit divisor. on we consider the inductive topology from the exhaustion by the en spaces. also and en are stable under multiplication, and (e, .) and (en, .) are multiplicative topological group. consider the closed subgroup of real-analytic functions normalized such that 1. theorem 2.11. the map such that \u03b3(f) \u03b3f is an continuous injective group morphism. proof. continuity results from theorem 2.10. we observe that from 1) \u03b3g(s 1) g(s)\u03b3g(s) we get 1) and by uniqueness of theorem 2.2 we get also, if \u03b3f 1, then directly from the functional equation we get that 1, and ker(\u03b3) {1}. this theorem justi\ufb01es using euler gamma function as building block of the general solution by decomposing along the divisor. remark. consider the shift operator e, \ufffd\u2192 1) and the associated multiplicative cohomological equation in with given, on the definition of higher gamma functions 13 we have proved that the cohomological equation can be solved in by the group morphism \u03b3, \u03b3f. for e\u03b1 it can be solved in we observe similar phenomenon of \u201closs of regularity\u201d as in \u201csmall divisors\u201d problems than in our setting can be interpreted as \u201closs of transalgebraicity\u201d. 3. application: barnes higher gamma functions. now we can generalize the hierarchy of classical barnes gamma functions. de\ufb01nition 3.1. let be real analytic lld meromorphic function of \ufb01nite order such that 1. the higher gamma functions associated to is family (\u03b3f satisfying the following properties: (1) \u03b3f (2) \u03b3f 1, (3) \u03b3f 1) \u03b3f \u03b3f for 0, (4) \u03b3f is meromorphic function of \ufb01nite order, (5) \u03b3f is lld, (6) \u03b3f is real analytic. theorem 3.2. let be real analytic lld meromorphic function of \ufb01nite order such that 1. there exists unique family of higher gamma functions (\u03b3f associated to f. if is cld then the \u03b3f are cld. proof. we set \u03b3f and for 0, the function \u03b3f is constructed from using theorem 2.2, and is unique. the uniqueness property implies the following multiplicative group morphism property: corollary 3.3. for 0, we consider the map \u03b3n de\ufb01ned by \u03b3f n. then \u03b3n is continuous injective group morphism. proof. given f, it is clear that the sequence of functions \u03b3f n.\u03b3g satisfy all the properties of higher gamma functions associated to hence, by uniqueness, we have \u03b3f n\u03b3g n, hence the group morphism property. the kernel is reduced to the constant function by uniqueness, hence the injectivity. the continuity follows as before from theorem 2.10. de\ufb01nition 3.4 (barnes higher gamma functons \u03b3n). the higher gamma functions associated to is the family of higher barnes gamma functions where \u03b31 is euler gamma function. 14 r. p\u00b4erez-marco note that vign\u00b4eras\u2019 normalization (1979, [28]) is slightly di\ufb00erent and de\ufb01nes (for s) hierarchy of functions as in de\ufb01nition 3.1 but with the functional equation replaced by 1) we have simple direct relation between the two hierarchies (\u03b3f for we obtain which is barnes g-function (barnes, 1900, [3]). the convention in de\ufb01nition 3.1 is compatible with barnes multiple gamma functions that generalize the (\u03b3n) (barnes, 1904, [4], see section 6). proposition 3.5. the higher barnes gamma function \u03b3n is cld of order n, and div(\u03b3n) +\u221e \ufffdn .(\u2212n) proof. the function \u03b3n is in the class cld by induction since is in this class. any is exponent of convergence for s, so by proposition 2.6 we have by induction that any is exponent of convergence for \u03b3n. we can check this directly using the formula for the divisor that follows by induction from lemma 2.3 and the combinatorial identity \ufffdn \ufffdk if we write the weierstrass factorization and denotes the weierstrass polynomial, we have that deg 1, and by induction the same proof gives that deg n. when we drop the real analyticity condition, there is no longer uniqueness, but we can prove the following theorem, theorem 3.6. let be lld meromorphic function of \ufb01nite order such that 1. consider family satisfying the following properties: (1) (2) 1, (3) 1) for 0, (4) is meromorphic function of \ufb01nite order, (5) is lld, on the definition of higher gamma functions 15 then there exists an integer sequence such that n(s) exp an\u2212k \ufffds \ufffd\ufffd \u03b3f n(s) proof. this follows by induction from theorem 2.7. we can also give direct argument using the group structure. for any solution the functions \u03b3f n/gf are solution for 1. the case is easily resolved. by induction, the solutions have no zeros nor poles, and \ufb01nite order, so we have n(s) where the is sequence of polynomials satisfying \u2206an+1 \u2212an and z. the di\ufb00erence equation and the sequence an determines the sequence of polynomials that are given by the explicit formula an(s) an\u2212k \ufffds 4. application: jackson q-gamma function. for 1, jackson (1905, [10], [11]) (see also the precursor work by halphen [7], vol. 1, p. 240; and h\u00a8older [8]) de\ufb01ned the q-gamma function \u03b3q by the product formula (q; q)\u221e q)\u221e (1 where the \u221e-pochhammer symbol is (z; q)\u221e +\u221e (1 the q-gamma function satis\ufb01es the functional equation 1) and euler gamma function appears as the limit when 1, \u03b3(s) lim askey ([1], 1980) proved q-analog of the bohr-mollerup theorem characterizing \u03b3q by its functional equation, the normalization 1, and the real log-convexity of 16 r. p\u00b4erez-marco \u03b3q. it is natural to investigate if we can use our approach. the answer is a\ufb03rmative as shows the next theorem. theorem 4.1. the q-gamma function is the only real analytic, \ufb01nite order meromorphic function such that and satisfying the functional equation, 1) proof. this is an application of our general theorem 2.2 with which is an order real analytic function in the class lld (but not cld), 1, and 1. log an application of the continuity theorem 2.10 shows: proposition 4.2. we have lim \u03b3q uniformly on compact sets of c. proof. uniformly on compact sets of we have lim and we use theorem 2.10. nishiwaza (1996, [16]) has de\ufb01ned the q-analog of barnes higher gamma functions \u03b3n following the bohr-mollerup approach. with our methods we can obtain nishiwaza\u2019s functions directly from the higher hierarchy generated by using de\ufb01nition 3.1 and theorem 3.2 using the uniqueness of the solution. theorem 4.3. nishiwaza\u2019s higher q-gamma functions are obtained by the higher hierarchy from theorem 3.2 \u03b3f associated to the real analytic function on the definition of higher gamma functions 17 5. application: mellin gamma functions. mellin (1897, [13]) considered general gamma functions satisfying the functional equation 1) r(s)f(s) where is rational function. he constructs solutions by using euler gamma function as building block along the divisor. an application of the extension of our general theorem 2.7, and the group structure theorem 2.11, gives the precise existence characterization of mellin gamma functions. de\ufb01nition 5.1. meromorphic function is lld at in\ufb01nite if a) is lld for some r. since a)) this means that the divisor of is in some left half plane (not necessarily c+). theorem 5.2. let be rational function, r(s) a(s \u03b11) (s \u03b1n) (s \u03b21) (s \u03b2m) where c\u2217, and (\u03b1k) and (\u03b2k) are the zeros, resp. the poles, of counted with multiplicity. consider the \ufb01nite order meromorphic functions, lld at in\ufb01nite, that are solutions of the functional equation (12) 1) r(s)f(s) they are of the form as \u03b3(s \u03b11) \u03b3(s \u03b1n) \u03b3(s \u03b21) \u03b3(s for some z. in particular, if and is real analytic there is only one real analytic solution such that 1. proof. let be zero or pole. we consider the linear function and solution \u03b3f\u03b1 to 1) 1) also as is solution to then, theorem 2.7 and the group structure of the solutions, theorem 2.11, shows that the general solutions of the functional 18 r. p\u00b4erez-marco equation (12) are of the form as where n, kn, z, and kn we \ufb01nish the proof by observing that we can take \u03b3(s \u03b1). when is real analytic, r\u2217, the set of roots (\u03b1j) and poles (\u03b2j) are self-conjugated, and we must have to have real analytic. considering lld rational function r, real analytic and such that 1, we can de\ufb01ne the unique associated higher gamma functions hierarchy (\u03b3r given by theorem 3.2. these higher mellin gamma functions seem to be new in the literature. 6. application: barnes multiple gamma functions. for and parameters (\u03c91, \u03c9n) +, barnes multiple gamma functions \u03c9n) \u03b3(s|\u03c9) are generalization by barnes (1904, [4]) of barnes higher gamma functions \u03b3n studied in section 3. when \u03c91 \u03c9n we recover \u03b3n as \u03b3n(s) 1) barnes only considers the apparently more general case where \u03c91, \u03c9n all belong to half plane limited by line through the origin ([4] this situation that can be reduced to our case by rotation. also, he assumes \u03c9n) to have an essentially di\ufb00erent situation from the double gamma function that he studied previously, although this condition is not the appropriate one. barnes de\ufb01nes these multiple gamma functions `a la lerch. first, barnes de\ufb01nes the barnes-hurwitz zeta functions, multiple version of hurwitz zeta function, as \u03b6(t, \u03c9n) (s kn\u03c9n)\u2212t which is converging for re n, and symmetric on \u03c91, \u03c9n. this multiple zeta function reduces to hurwitz zeta function for (hurwitz, 1882, [9]). its analytic continuation and lerch formula (lerch, 1894, [12]) (13) log \u03b3(s) \u2202t\u03b6(t, s) \u03b6\u2032(0) on the definition of higher gamma functions 19 allows to de\ufb01ne euler gamma function. barnes generalizes this approach and he shows, using hankel type integral, that \u03b6(s, \u03c9n) has meromorphic extension in (s, t). then he de\ufb01nes \u03b3b(s|\u03c9) \u03c1n(\u03c9) exp \ufffd\ufffd \u2202t\u03b6(t, s|\u03c9) where \u03c1n(\u03c9) is barnes modular function, and is de\ufb01ned to provide the normalization such that \u03b3b(s|\u03c9) has residue at 0, (14) lim s\u03b3b(s|\u03c9) from the de\ufb01nition we get that both \u03c1n(\u03c9) and \u03b3b(s|\u03c9) are necessarily symmetric on \u03c91, \u03c9n. note that for euler gamma function, because of the form of the functional equation, the normalization \u03b3(1) is equivalent to 1. in general, for \u03b3f the normalization is equivalent to \u22121 for barnes higher gamma functions \u03b3n discussed in section 3, we see that the normalization is equivalent to when we make in 1) we get and the result follows by induction. barnes ([4], observes that log \u03c1(\u03c9) plays the role of stirling\u2019s constant of the asymptotic expansion when +\u221e of the divergent sum \u03c9\u2208\u03c9\u2217,|\u03c9|\u2264k log |\u03c9| where \u03c9\u2217 {0}. also, log \u03c1(\u03c9) can be de\ufb01ned in this way. later applications to number theory by shintani in the 70\u2019s of barnes multiple gamma functions (1976,[25], [26], [27]), and modern presentations [22]), drop barnes normalization. they de\ufb01ne multiple gamma functions directly by the formula \u03b3(s|\u03c9) exp \ufffd\ufffd \u2202t\u03b6(t, s|\u03c9) we keep shintani\u2019s normalization that has become the standard one in the modern literature. this normalization has the advantage to yield simpler functional equation not involving barnes modular function \u03c1(\u03c9). we denote by \u02c6\u03c9 the dimensional 20 r. p\u00b4erez-marco vector obtained from removing the k-th coordinate. then we have the following ladder functional equation for the zeta function, (15) \u03b6(t, \u03c9k|\u03c9) \u03b6(t, s|\u03c9) \u2212\u03b6(t, s|\u02c6\u03c9) where we start with \u03b6(t, s|\u2205) s\u2212t from the zeta function functional equation we get the functional equation for the multiple gamma functions, (16) \u03b3(s \u03c9k|\u03c9) with the convention \u03b3(s|\u2205) s. note that the functional equation for barnes normalized multiple gamma functions is di\ufb00erent, and we have di\ufb00erent functional equation: (17) \u03b3b(s \u03c9k|\u03c9) example 6.1. for 1, \u03b3(s|\u03c9) can be computed explicitly from euler gamma function (see [24], lemma 6.2. we have \u03b3(s|\u03c9) (2\u03c0)\u22121/2e( 2) log \u03c11(\u03c9) 2\u03c0 and therefore \u03b3b(s|\u03c9) 2\u03c0 \u03b3(s|\u03c9) e( \u22121) log and \u03b3(\u03c9|\u03c9) 2\u03c0 2\u03c0 \u03b3b(\u03c9|\u03c9) in particular, \u03b3(s) 2\u03c0 \u03b3(s) on the definition of higher gamma functions 21 proof. for 1, \u03b6(t, \u03b6(t, s) is the original hurwitz zeta function that generalizes riemann zeta function \u03b6(t) \u03b6(t, 1), \u03b6(t, s) (s k)\u2212t making in the \ufb01rst formula from lemma 3.18 from [19] we have the classical result (see also [29] (18) \u03b6(0, s) observe now that we have \u03b6(t, s|\u03c9) \u03c9\u2212t\u03b6 t, hence \u2202t\u03b6(t, s|\u03c9) \u2212(log \u03c9)\u03c9\u2212t\u03b6 t, \u03c9\u2212t \u2202t\u03b6(t, s) and making 0, using formula (18) and lerch formula (13), we get log \u03b3(s|\u03c9) log log \u03b6\u2032(0) now, \u03b6\u2032(0) \u22121 gives the \ufb01rst formula. then using this formula we get lim s\u03b3(s|\u03c9) (2\u03c0)\u22121/2e\u2212 log \u03c9\u03c9 2\u03c0 for we create new transcendentals \u03b3(s|\u03c9), which are not generated from euler gamma function. for example for 2, if \u03c91 and \u03c92 are q-independent we get new transcendentals. when the parameters are q-dependent then can be expressed from barnes g-function, \u03b3\u22121 considering the functional equations, from our point of view, it is natural to aim to characterize \u03b3(s|\u03c9) by solving tower of di\ufb00erence equations corresponding to the sequence our approach leads to new de\ufb01nition, not needing barneshurwitz zeta functions. we start by considering real analytic multiple zeta functions that are those relevant in shintani\u2019s applications to real quadratic number \ufb01elds (1978, [26]). the following theorem follows from theorem 2.7. theorem 6.3. let r+. let be real analytic lld meromorphic function in of \ufb01nite order. there exists unique function satisfying the following properties: (1) (2) \u03c9|\u03c9) (3) is meromorphic function of \ufb01nite order, (4) is lld, 22 r. p\u00b4erez-marco (5) \u03b3f is real analytic. if is cld then \u03b3f is cld. if we drop condition (1) then is unique up to multiplication by constant r\u2217. if \u22121 1, we can replace condition (1) by the condition 1. proof. we make the change of variables the application of theorem 2.7 to the real analytic function h(t) f(\u03c9t) gives unique real analytic solution \u03b3h(t) such that and \u03b3h(t 1) h(t)\u03b3h(t) if we set this equation becomes \u03c9|\u03c9) 1) and satis\ufb01es all conditions. furthermore, is unique from the uniqueness of \u03b3h that follows from the last uniqueness condition in theorem 2.7. in view of this uniqueness result, the two last statement are clear. also if is then is example 6.4. for the proof gives h(t) \u03c9t and solution \u03b3h the condition is equivalent to \u03b3h 1, then according to example 2.8 there is unique real analytic solution \u03b3h(t) log \u03b3(t) \u03b3(\u03c9\u22121) and it follows that e( \u22121) log \u03b3(\u03c9\u22121) therefore, by uniqueness of the normalization, \u03b3b(s|\u03c9) and we recover the formula for \u03b3b(s|\u03c9) from lemma 6.2 \u03b3b(s|\u03c9) e( \u22121) log then the formula for \u03b3(s|\u03c9) follows from \u03b3(s|\u03c9) 2\u03c0 \u03b3b(s|\u03c9) (2\u03c0)\u22121/2e( 2) log we have established, on the definition of higher gamma functions 23 proposition 6.5. for we have \u03b3(s|\u03c9) 2\u03c0 \u03b3(\u03c9\u22121) where is the unique solution in theorem 6.3. using similar ideas, the general version of theorem 2.7 for c+ and without the hypothesis of being real analytic is the following: theorem 6.6. let c+. let be lld meromorphic function in of \ufb01nite order. we consider function satisfying (1) 1, (2) g(s \u03c9) (3) is meromorphic function of \ufb01nite order, (4) is lld, then there is solution any other solution is of the form g(s) for some z. if we remove condition (1) then all solutions are of the form the form g(s) for some and c. proof. as before, we make the change of variables and apply theorem 2.7 to the function h(t) f(\u03c9t) gives an unconditional solution from the general uniqueness statement in 2.7 we know that all the other solutions removing condition (1) are of the form g(s) +b for some and c. condition (1) is then equivalent to with z, hence the general form. therefore, in general for c\u2217, \u03b3f is not uniquely determined, but its values on z.\u03c9 are well determined. more precisely, we have, proposition 6.7. the values taken by solutions at the points k\u03c9 for are uniquely determined and do not depend on the solution chosen. if c+, any solution is uniquely determined by im in particular, if is real analytic then there is unique real analytic solution. if \u03c9) 2, any solution is uniquely determined by its value g(r) for rational value \u0338= and 0. 24 r. p\u00b4erez-marco proof. from the functional equation we have k\u03c9) j\u03c9) j\u03c9) hence the \ufb01rst claim. now, consider two solutions and such that im g\u2032 1(1) im g\u2032 2(1). since they are of the form for some z, taking logarithmic derivatives we have g\u2032 g\u2032 \u03b3f\ufffd\u2032 (1|\u03c9) \u03b3f\ufffd\u2032 (1|\u03c9) hence g\u2032 1(1) g\u2032 2(1) and the condition c+ forces now assume \u03c9) and consider two solutions and such that for some rational with and \u0338= 1. then, since is neither zero nor pole because is lld, we have for some thus we have (r l\u03c9 and, by q-independence, we must have and (r 0, thus, since \u0338= 1, we must have and general multiple gamma hierarchies. now, we can iterate theorem 6.3 to de\ufb01ne new real-analytic multiple gamma functions corresponding to and to positive real parameters (\u03c91, \u03c9n) rn for an in\ufb01nite sequence of parameters (\u03c91, \u03c92, .) c\u221e we can also de\ufb01ne generalization of barnes multiple gamma hierarchy. we denote \u03c9n (\u03c91, \u03c9n) +. de\ufb01nition 6.8 (general multiple gamma hierarchy). let (\u03c91, \u03c92, .) c\u221e and be lld meromorphic function in of \ufb01nite order. general multiple gamma hierarchy (\u03b3f associated to is sequence of functions satisfying: (1) \u03b3f (2) \u03b3f \u03b3f \u03b3f for 0, (3) \u03b3f n(s|\u03c9n) is meromorphic function of \ufb01nite order, on the definition of higher gamma functions 25 (4) \u03b3f n(s|\u03c9n) is lld. next we show that, with some simple normalization, general multiple gamma hierarchies are unique for real parameters and real analytic. theorem 6.9. let (\u03c91, \u03c92, .) r\u221e and real analytic lld meromorphic function of \ufb01nite order, such that 1. there exists unique general multiple gamma hierarchy (\u03b3f associated to f, and normalized such that \u03b3f if is cld then the \u03b3f n(s|\u03c9n) are cld. proof. the existence and uniqueness is proved by induction on 0. for 0, \u03b3f we assume that the result has been proved for 0. then we construct \u03b3f by using theorem 6.3 using the function \u03b3f in the particular case where s, using uniqueness, we obtain barnes multiple gamma functions for real parameters \u03c9. this gives new approach to de\ufb01ne barnes multiple gamma functions. de\ufb01nition 6.10 (barnes multiple gamma functions). for (\u03c91, \u03c92, .) r\u221e the general multiple gamma hierarchy associated to is barnes multiple gamma hierarchy (\u03b3f with the normalization \u03b3f 1. we simplify the notation and we denote \u03b3f n(s|\u03c9n) we observe that since the barnes multiple gamma functions are symmetric on the real parameters (\u03c91, \u03c9n) then, by uniqueness, the solutions of theorem 6.9 for must also be symmetric on the parameters, which is not obvious priori. this is general when we can de\ufb01ne the gamma functions `a la lerch, including the case of complex parameters (\u03c91, \u03c92, .) c\u221e consider real analytic lld meromorphic function of \ufb01nite order, such that, and re for c+. these conditions are su\ufb03cient to de\ufb01ne f(s)\u2212t for c+ by taking the principal branch of log in c+, f(s)\u2212t exp(\u2212t log we assume that the multiple barnes-hurwitz multiple zeta function associated to f, \u03b6f(t, \u03c9n) kn\u03c9n)\u2212t is well de\ufb01ned and holomorphic in right half plane re for all c+, and has meromorphic extension to c. then we can de\ufb01ne f(s)\u2212t, and, `a la 26 r. p\u00b4erez-marco lerch, for c+, \u03b3f l(s|\u03c9n) exp \ufffd\ufffd \u2202t\u03b6f(t, \u2202t\u03b6f(t, note that we have normalized these functions such that \u03b3f 1. by construction, these functions are obviously symmetric on the parameters \u03c91, \u03c9n. as before, these functions satisfy the functional equations, (19) \u03b3f l(s \u03b3f l(s|\u03c9n) which show that they have meromorphic extension to all c. now, using the uniqueness from theorem 6.9 we get for real parameters: theorem 6.11. let (\u03c91, \u03c92, .) r\u221e when \u03b3f l(s|\u03c9n) is well de\ufb01ned, we have \u03b3f l(s|\u03c9n) \u03b3f n(s|\u03c9n) where the (\u03b3f are the solutions of theorem 6.9. corollary 6.12. let (\u03c91, \u03c92, .) r\u221e the barnes multiple gamma hierarchy de\ufb01ned by theorem 6.9, \u03b3f n(s|\u03c9n) are symmetric on the parameters \u03c9n (\u03c91, \u03c92, \u03c9n). we note that our de\ufb01nition of the hierarchies using the functional equation is more general than barne\u2019s de\ufb01nition `a la lerch, since we need extra conditions on to de\ufb01ne the multiple f-barnes-hurwitz zeta function and prove that it is holomorphic in half plane. if we don\u2019t add the normalization condition \u03b3f then there exists solutions that are non-symmetric on the parameters. as we see next, this is even more evident for complex parameters since in that case, without further hypothesis, there is no symmetry on the parameters \u03c9. this proves that our functional equation approach de\ufb01nes larger class of functions than the classical ones. we observe also that the existence and uniqueness of theorem 6.9 implies the morphism property. let er be the multiplicative group of real-analytic lld meromorphic functions of \ufb01nite order and er er and let er the subgroup of functions such that 1. with the same arguments as before, we prove: on the definition of higher gamma functions 27 theorem 6.13. for (\u03c91, \u03c92, .) r\u221e and 0, we consider the map er er de\ufb01ned by \u03b3f then is continuous injective group morphism. the uniqueness property of the general multiple gamma hierarchy associated to f, proves that we obtain the same hierarchy, shifting the index by 1, if we use \u03b3f 1(., \u03c91) instead of f, more precisely we have: proposition 6.14. under the assumptions of theorem 6.9, if we denote \u03c9\u2032 (\u03c92, \u03c9n), we have \u03b3f 1(.,\u03c91) (.|\u03c9\u2032 n) \u03b3f complex parameters. we study now the non-real-analytic case for complex parameters \u03c91, \u03c9n c+. in general we don\u2019t have uniqueness as in theorem 6.9. we consider lld meromorphic function in of \ufb01nite order with and study the question of existence and uniqueness of general multiple gamma functions hierarchy as in de\ufb01nition 6.8 with the normalization \u03b3f without imposing the real analyticity condition, we have the following result: theorem 6.15. let (\u03c91, \u03c92, .) c\u221e and lld meromorphic function of \ufb01nite order such that 1. there exists general multiple gamma hierarchy (\u03b3f associated to f, and for any other hierarchy (\u02dc\u03b3f there exists sequence of polynomials such that \u02dc\u03b3f n(s|\u03c9n) exp \u03b3f n(s|\u03c9n) with z, is constant integer, and for we have where \u2206\u03c9 is the \u03c9-di\ufb00erence operator \u2206\u03c9p p(s \u03c9) p(s). the polynomials belongs to an additive group of polynomials isomorphic to subgroup of if the functions is cld then \u03b3f n(s|\u03c9n) and all the other solutions are cld. proof. for the existence result, we carry out the same proof by induction as for theorem 6.9 (without the normalization condition) and using theorem 6.6. if second solution (\u02dc\u03b3f exists, then (\u02dc\u03b3f n(s|\u03c9n)/\u03b3f is solution of the problem for the constant function 1. the solution for has 28 r. p\u00b4erez-marco no divisor and is of \ufb01nite order, hence they are of the form exp(pn) where are polynomial which satisfy the above di\ufb00erence equations. the structure of the space of polynomials becomes clear from the study of the di\ufb00erence operators that follows. we observe that the integer sequence of values taken at 1, and the di\ufb00erence equation determine uniquely the sequence of polynomials we de\ufb01ne the \u03c9-descending factorial that form triangular bases for the action of the operator \u2206\u03c9 on polynomials. de\ufb01nition 6.16. let c\u2217. for and for an integer 1, we de\ufb01ne the \u03c9-descending factorial as s(s \u03c9) (s (k 1)\u03c9) for we get the usual descending factorial. simple computation shows: proposition 6.17. we have (k to simplify the recurrence, we write 1) and an the polynomials satisfy the di\ufb00erence equations now, we can give the general structure of the solutions of this system of di\ufb00erence equations. proposition 6.18. for 1, the general solution of the above system of di\ufb00erence equations is given by an\u2212k \u03c91\u03c92 \u03c9k \ufffds[k,\u03c9n] k! \u03c9n, s) where the an,k are universal polynomials with integer coe\ufb03cients in variables and their total degree in the \ufb01rst variables is strictly less than k, and the coe\ufb03cient an are arbitrary integers. from this proposition it is clear that the space of solutions and the one of is isomorphic to quotient subgroup of by the kernel of the map an) \ufffd\u2192 the proof of this proposition follows by induction on 1, solving the di\ufb00erence equation on the definition of higher gamma functions 29 for this, we develop the polynomials s[k,\u03c9n] k! \u03c9n, s) in the bases then we change to the bases using the following lemma: lemma 6.19. for 1, where 1, and deg k. proof. we proceed by induction. the result is clear for 1, and developing s(s \u03c9) (s (n 1)\u03c9) we get with z, and the induction hypothesis proves the result. observe than if in this change of bases we keep track of the total degree of the monomials on the variables and \u03c9, it is constant. hence, when we chage to the bases we have the degree property of the polynomials an,k. now we can study uniqueness conditions. if we assume some algebraic independence condition on the parameters, we have generalization by induction of the uniqueness result from proposition 6.7. theorem 6.20. under the same conditions as in theorem 6.15, and if we assume that for n, (20) \u03c9n] then the hierarchy (\u03b3f is uniquely determined by any value \u03b3f at some rational value \u0338= and 0. proof. if we have two solutions and the equality, at the rational value c+, that is neither zero nor pole of the functions that are lld, shows that the corresponding polynomials and satisfy 1) 1) then, using proposition 6.18, this gives an\u2212k \u02dcan\u2212k \u03c91\u03c92 \u03c9k \ufffd(r k! \u03c9n, 1) 30 r. p\u00b4erez-marco or, multiplying by \u03c91\u03c92 \u03c9n, we get the algebraic relation n! (an \u02dcan \u03c9n where the dots part is polynomial of degre in \u03c9n with coe\ufb03cients in since \u03c9n] we must have therefore we have using the induction hypothesis on (replacing by we then get by induction an \u02dcan. to conclude this section, we note that (2000, [22]) exploited also the di\ufb00erence equations and their minimal solutions to prove numerous properties of barnes multiple gamma functions. shintani (1976, [25]) extended barnes approach to multiple gamma functions to several variable setting. friedman and (2004, [6]) extended shintani\u2019s multiple gamma functions. we can also apply our functional equation approach to de\ufb01ne these several variables gamma functions without barnes-hurwitz zeta functions and we will study these functions in forthcoming article. acknowledgements. am grateful to prof. david bl\u00b4azquez for his comments and corrections.",
    "Abstract_Original": ". We generalize our previous new de\ufb01nition of Euler Gamma function\nto higher Gamma functions. With this uni\ufb01ed approach, we characterize Barnes\nhigher Gamma functions, Mellin Gamma functions, Barnes multiple Gamma func-\ntions, Jackson q-Gamma function, and Nishizawa higher q-Gamma functions. The\nmethod presented extends to more general functional equations. This generalization\nreveals the multiplicative group structure of solutions of the functional equation that\nappears as a cocycle equation. We also generalize Barnes hierarchy of higher Gamma\nfunction and multiple Gamma functions. With this new de\ufb01nition, Barnes-Hurwitz\nzeta functions are no longer needed in the de\ufb01nition of Barnes multiple Gamma\nfunctions. This simpli\ufb01es the classical de\ufb01nition, without the necessary analytic\npreliminaries about the meromorphic extension of Barnes-Hurwitz zeta functions,\nand allows to de\ufb01ne a larger class of Gamma functions. For some algebraic inde-\npendence conditions on the parameters, we do have uniqueness of the solutions.\nThis implies the identi\ufb01cation of a subclass of our multiple Gamma functions with\nclassical Barnes multiple Gamma functions.\n1. ",
    "Original_Text": ". We generalize our previous new de\ufb01nition of Euler Gamma function\nto higher Gamma functions. With this uni\ufb01ed approach, we characterize Barnes\nhigher Gamma functions, Mellin Gamma functions, Barnes multiple Gamma func-\ntions, Jackson q-Gamma function, and Nishizawa higher q-Gamma functions. The\nmethod presented extends to more general functional equations. This generalization\nreveals the multiplicative group structure of solutions of the functional equation that\nappears as a cocycle equation. We also generalize Barnes hierarchy of higher Gamma\nfunction and multiple Gamma functions. With this new de\ufb01nition, Barnes-Hurwitz\nzeta functions are no longer needed in the de\ufb01nition of Barnes multiple Gamma\nfunctions. This simpli\ufb01es the classical de\ufb01nition, without the necessary analytic\npreliminaries about the meromorphic extension of Barnes-Hurwitz zeta functions,\nand allows to de\ufb01ne a larger class of Gamma functions. For some algebraic inde-\npendence conditions on the parameters, we do have uniqueness of the solutions.\nThis implies the identi\ufb01cation of a subclass of our multiple Gamma functions with\nclassical Barnes multiple Gamma functions.\n1. Introduction\nThe \ufb01rst result is a new characterization and de\ufb01nition of Euler Gamma function\nthat was \ufb01rst presented in the article [19] dedicated to Euler Gamma function. We can\ndevelop in a natural way the classical formulas in the theory from this new de\ufb01nition.\nWe denote the right half complex plane by C+ = {s \u2208 C; Re s > 0}.\nTheorem 1.1. There is one and only one \ufb01nite order meromorphic function \u0393(s),\ns \u2208 C, without zeros nor poles in C+, with \u0393(1) = 1, \u0393\u2032(1) \u2208 R, that satis\ufb01es the\nfunctional equation\n\u0393(s + 1) = s \u0393(s)\nDe\ufb01nition 1.2 (Euler Gamma function). The only solution to the above conditions\nis the Euler Gamma function.\n2010 Mathematics Subject Classi\ufb01cation. Primary: 33B15. Secondary: 30D10, 30D15.\nKey words and phrases. Gamma function, Barnes Gamma function, Mellin Gamma functions,\nJackson q-Gamma function, multiple gamma functions.\n1\n2\nR. P\u00b4EREZ-MARCO\nWithout the condition \u0393\u2032(1) \u2208 R we don\u2019t have uniqueness, but we have the fol-\nlowing result:\nTheorem 1.3. Let f be a \ufb01nite order meromorphic function in C, without zeros nor\npoles in C+, and satis\ufb01es the functional equation\nf(s + 1) = s f(s) ,\nthen there exists a \u2208 Z and b \u2208 C such that\nf(s) = e2\u03c0ias+b\u0393(s) .\nMoreover, if f(1) = 1 then we have\nf(s) = e2\u03c0ias\u0393(s) .\nThe proof can be found in [19], but we reproduce it here as a preliminary result\nfor the generalizations which are the core of this article. We refer to the companion\narticle [19] for the various de\ufb01nitions of Euler Gamma function and the historical\ndevelopment of the subject of Eulerian integrals. We strongly encourage the reader\nto study \ufb01rst [19], and also consult the bibliographic notes in [20] before studying this\narticle.\nIn the proof we use the elementary theory of entire function that can be found in\nclassical textbooks as [5] (this is recalled in the Appendix of [19]).\nProof. We \ufb01rst prove existence and then uniqueness.\nExistence: If we have a function satisfying the previous conditions then its divisor\nmust be contained in C\u2212C+, and the functional equation implies that it has no zeros\nand only simple poles at the non-positive integers. We can directly construct such a\nmeromorphic function g with such divisor, for example,\n(1)\ng(s) = s\u22121\n+\u221e\n\ufffd\nn=1\n\ufffd\n1 + s\nn\n\ufffd\u22121\nes/n\nwhich converges since \ufffd\nn\u22651 n\u22122 < +\u221e, and is a meromorphic function of \ufb01nite order.\nNow, we have that the meromorphic function g(s+1)\nsg(s) has no zeros nor poles and it is\nalso of \ufb01nite order (as ratio of \ufb01nite order meromorphic functions), hence there exists\na polynomial P such that\ng(s + 1)\nsg(s)\n= eP (s) .\nConsider a polynomial Q such that\n(2)\n\u2206Q(s) = Q(s + 1) \u2212 Q(s) = P(s)\nON THE DEFINITION OF HIGHER GAMMA FUNCTIONS\n3\nThe polynomial Q is uniquely determined from P up to a constant, hence we can\nfreely choose Q(1). By the product de\ufb01nition, g is real and positive for positive real\nnumbers, and we choose Q(1) = log g(1). Now we have that \u0393(s) = e\u2212Q(s)g(s) satis\ufb01es\nthe functional equation, \u0393(1) = 1, and \u0393\u2032(1) \u2208 R because \u0393 is real analytic in the\npositive reals. Thus we proved existence.\nUniqueness: Consider a second solution f. Let F(s) = \u0393(s)/f(s). Then F is an\nentire function of \ufb01nite order without zeros, hence we can write F(s) = exp A(s) for\nsome polynomial A. Moreover, the functional equation shows that F is Z-periodic.\nHence, there exists an integer a \u2208 Z, such that for any s \u2208 C,\nA(s + 1) = A(s) + 2\u03c0ia .\nIt follows that A(s) = 2\u03c0ias + b for some b \u2208 C. Since F(1) = 1, we have eb = 1.\nSince F \u2032(1) \u2208 R, and F \u2032(1) = F \u2032(1)/F(1) = 2\u03c0ia \u2208 R we have a = 0, thus F is\nconstant, F \u2261 1 and f = \u0393.\n\u25a1\nRemarks.\n\u2022 Using the functional equation we can weaken the conditions and request only\nthat the function is meromorphic only on C+ with the corresponding \ufb01nite\norder growth. We can also assume that it is only de\ufb01ned on a cone containing\nthe positive real axes, a vertical strip of width larger than 1, or in general\nwith any region \u2126 which is a transitive region for the integer translations and\nf satis\ufb01es the \ufb01nite order growth condition in \u2126 when s \u2192 +\u221e.\nProposition 1.4. Let \u2126 \u2282 C a domain such that for any s \u2208 C there exists\nan integer n(s) \u2208 Z such that s + n(s) \u2208 \u2126, and |n(s)| \u2264 C|s|d, for some\nconstants C, d > 0 depending only on \u2126. Then any function \u02dc\u0393 satisfying a\n\ufb01nite order estimate in \u2126 and the functional equation \u02dc\u0393(s + 1) = s\u02dc\u0393(s) when\ns, s + 1 \u2208 \u2126, extends to a \ufb01nite order meromorphic function on C.\nProof. Let \u02dc\u0393 be such a function. Let \u2126 be corresponding region. Iterating\nthe functional equation we get that \u02dc\u0393 extends meromorphically to the whole\ncomplex plane. Then, if g is the Weierstrass product (1) and Q a polynomial\ngiven by (2), the function h(s) = \u02dc\u0393(s)/(e\u2212Q(s)g(s)) is a Z-periodic entire\nfunction. Since 1/(e\u2212Qg) is an entire function of \ufb01nite order, we have in \u2126\nthe \ufb01nite order estimate for h. Using that |n(s)| \u2264 C|s|d, we get that h is of\n\ufb01nite order, hence \u02dc\u0393 is meromorphic and of \ufb01nite order in the plane.\n\u25a1\n\u2022 Assuming \u0393 real-analytic we get \u0393\u2032(1) \u2208 R, but this last condition is much\nweaker. Also, as it follows from the proof, we can replace this condition by\n\u0393(a) \u2208 R for some a \u2208 R \u2212 Z, or only request that \u0393 is asymptotically real,\n4\nR. P\u00b4EREZ-MARCO\nlimx\u2208R,x\u2192+\u221e Im \u0393(x) = 0. Without the condition \u0393\u2032(1) \u2208 R the proof shows\nthat \u0393 is uniquely determined up to a factor e2\u03c0iks with k \u2208 Z.\n2. General definition.\n2.1. General de\ufb01nition and characterization. We \ufb01rst need to recall the notion\nof \u201cLeft Located Divisor\u201d (LLD) function that is useful in the theory of Poisson-\nNewton formula for \ufb01nite order meromorphic functions ([14], [15]).\nDe\ufb01nition 2.1 (LLD function). A meromorphic function f in C is in the class LLD\n(Left Located Divisor) if f has no zeros nor poles in C+, i.e. Div(f) \u2282 C \u2212 C+.\nThe function is in the class CLD (Cone Located Divisor) if its divisor is contained\nin a closed cone in the closed half plane C \u2212 C+.\nThe following Theorem is a generalization of Theorem 1.1 which results for the\nsimple LLD function f(s) = s.\nTheorem 2.2. Let f be a real analytic LLD meromorphic function in C of \ufb01nite\norder. There exists a unique function \u0393f, the Gamma function associated to f, sat-\nisfying the following properties:\n(1) \u0393f(1) = 1 ,\n(2) \u0393f(s + 1) = f(s)\u0393f(s) ,\n(3) \u0393f is a meromorphic function of \ufb01nite order,\n(4) \u0393f is LLD,\n(5) \u0393f is real analytic.\nIf f is CLD then \u0393f is CLD.\nProof. The proof follows the same lines as the proof of Theorem 1.1. First, we prove\nthat the functional equation (2) determines the divisor of \u0393f, then we construct a\nsolution using a Weierstrass product, and \ufb01nally we prove uniqueness.\n\u2022 Determination of the divisor.\nAs usual, we denote the divisor of f as the formal sum\nDiv(f) =\n\ufffd\n\u03c1\nn\u03c1(f).(\u03c1)\nwhere the sum is extended over \u03c1 \u2208 C and n\u03c1(f) is the multiplicity of the zero if \u03c1 is\na zero, the negative multiplicity of the pole if \u03c1 is a pole, or n\u03c1(f) = 0 if \u03c1 is neither\na zero or pole. Hence the function n\u03c1 is an almost zero function. A divisor is said to\nbe LLD, resp. CLD, if it is the divisor of a LLD, resp. CLD, function.\nON THE DEFINITION OF HIGHER GAMMA FUNCTIONS\n5\nLemma 2.3. If \u0393f is LLD and satis\ufb01es the functional equation (2), then the divisor\nof \u0393f is\nDiv(\u0393f) = \u2212\n\ufffd\n\u03c1,k\u22650\nn\u03c1(f) \u00b7 (\u03c1 \u2212 k)\nwhere\nDiv(f) =\n\ufffd\n\u03c1\nn\u03c1(f) \u00b7 (\u03c1)\nand\n(3)\nn\u03c1(\u0393f) = \u2212\n|\u03c1|\n\ufffd\nk=0\nn\u03c1+k(f)\nIf the divisor Div(f) is LLD, resp. CLD, then Div(\u0393f) is LLD, resp. CLD.\nWe allow ourselves the slight abuse of notation Div(\u0393f) to denote the divisor of a\npotential solution \u0393f when we have not yet proved the existence of \u0393f.\nProof. For any \u03c1 \u2208 C, the functional equation gives\nn\u03c1+1(\u0393f) = n\u03c1(f) + n\u03c1(\u0393f) ,\nor equivalently\nn\u03c1(\u0393f) = \u2212n\u03c1(f) + n\u03c1+1(\u0393f) ,\nHence, by induction, we have for m \u2265 1,\nn\u03c1(\u0393f) = \u2212\nm\u22121\n\ufffd\nk=0\nn\u03c1+k(f) + n\u03c1+m(\u0393f)\nand since \u0393f is LLD, for m \u2265 |\u03c1| \u2265 | Re \u03c1| = \u2212 Re \u03c1 we have n\u03c1+m(\u0393f) = 0, so\n(4)\nn\u03c1(\u0393f) = \u2212\n|\u03c1|\u22121\n\ufffd\nk=0\nn\u03c1+k(f) = \u2212\n+\u221e\n\ufffd\nk=0\nn\u03c1+k(f)\nand we get, with \u03c1\u2032 = \u03c1 + k,\nDiv(\u0393f) = \u2212\n\ufffd\nk\u22650\n\ufffd\n\u03c1\nn\u03c1+k \u00b7 (\u03c1) = \u2212\n\ufffd\n\u03c1\u2032,k\u22650\nn\u03c1\u2032 \u00b7 (\u03c1\u2032 \u2212 k)\nwhich gives the formula for Div(\u0393f).\n\u25a1\n6\nR. P\u00b4EREZ-MARCO\n\u2022 Convergence exponent of a divisor.\nDe\ufb01nition 2.4. The divisor of f has exponent of convergence \u03b1 > 0 if\n|| Div(f)||\u03b1 =\n\ufffd\n\u03c1\u0338=0\n|n\u03c1(f)|.|\u03c1|\u2212\u03b1 < +\u221e .\nWe recall that a meromorphic function of \ufb01nite order has a divisor with some \ufb01nite\nexponent of convergence. More precisely, if o(f) < +\u221e is the order of f, then for\nany \u01eb > 0, \u03b1 = o(f) + \u01eb is an exponent of convergence of its divisor.\nProposition 2.5. If Div(f) is LLD of \ufb01nite order, then Div(\u0393f) given by Lemma\n2.3 is LLD and of \ufb01nite order.\nMore precisely, if Div(f) is of oder \u03b1 > 0 then Div(\u0393f) is of order \u03b1 + 1.\nWe prove \ufb01rst a more precise result when f is in the class CLD.\nProposition 2.6. If \u03b1 > 0 is an exponent of convergence for f in the class CLD,\nthen \u0393f is CLD and \u03b1+1 is an exponent of convergence for \u0393f. More precisely, there\nexists a constant C > 0 such that\n|| Div(\u0393f)||\u03b1+1 \u2264 C || Div(f)||\u03b1+1 + C\n\u03b1 || Div(f)||\u03b1\nProof. Lemma 2.3 proves that \u0393f is CLD if we start with f CLD. Now, if f is CLD,\nthere is a constant C > 0 such that for any k \u2265 1 and \u03c1 in the left cone (the constant\nC depends on the cone)\n|\u03c1 \u2212 k|\u22121 \u2264 C(|\u03c1| + k)\u22121 .\nON THE DEFINITION OF HIGHER GAMMA FUNCTIONS\n7\nThen we have, with \u03c1\u2032 = \u03c1 + k,\n|| Div(\u0393f)||\u03b2 =\n\ufffd\n\u03c1\u0338=0\n|n\u03c1(\u0393f)|.|\u03c1|\u2212\u03b2\n=\n\ufffd\n\u03c1\u0338=0\n|\u03c1|\n\ufffd\nk=0\n|n\u03c1+k(f)|.|\u03c1|\u2212\u03b2\n=\n\ufffd\n\u03c1\u2032 /\u2208N\n|n\u03c1\u2032(f)|\n+\u221e\n\ufffd\nk=0\n|\u03c1\u2032 \u2212 k|\u2212\u03b2\n\u2264 C\n\ufffd\n\u03c1\u2032\u0338=0\n|n\u03c1\u2032(f)|\n+\u221e\n\ufffd\nk=0\n(|\u03c1\u2032| + k)\u2212\u03b2\n= C\n\ufffd\n\u03c1\u2032\u0338=0\n|n\u03c1\u2032(f)|.|\u03c1\u2032|\u2212\u03b2 + C\n\ufffd\n\u03c1\u2032\u0338=0\n|n\u03c1\u2032(f)|\n\ufffd +\u221e\n0\n(|\u03c1\u2032| + x)\u2212\u03b2 dx\n\u2264 C\n\ufffd\n\u03c1\u2032\u0338=0\n|n\u03c1\u2032(f)|.|\u03c1\u2032|\u2212\u03b2 +\nC\n\u03b2 \u2212 1\n\ufffd\n\u03c1\u2032\u0338=0\n|n\u03c1\u2032(f)|.|\u03c1\u2032|\u2212\u03b2+1\n= C || Div(f)||\u03b2 +\nC\n\u03b2 \u2212 1 || Div(f)||\u03b2\u22121\nhence, for \u03b2 = \u03b1 + 1 the sum is converging and we prove the Lemma.\n\u25a1\nNow we prove Proposition 2.5.\nProof. We consider the part of the divisor of \u0393f contained in the cone C0 = {| Im \u03c1| <\n\u2212 Re \u03c1}. The same argument as before proves that\n(5)\n\ufffd\n\u03c1\u2208C0\n|n\u03c1(\u0393f)|.|\u03c1|\u2212(\u03b1+1) < +\u221e\nThis can be seen by observing that Div(\u0393f) is generated by families \u03c1, \u03c1\u22121, \u03c1\u22122, . . .\nwhere \u03c1 \u2208 Div(f). The part of this sequence contained in the cone C0 is of the form\n\u03c10, \u03c10 \u2212 1, \u03c10 \u2212 2, . . ., where \u03c10 = \u03c1 \u2212 k0 for some integer k0 = k0(\u03c1) \u2265 0. Now, since\nRe \u03c1 < 0, we have |\u03c10|\u2212\u03b1 = |\u03c1\u2212k0|\u2212\u03b1 \u2264 |\u03c1|\u2212\u03b1. Hence, if we consider the meromorphic\nfunction f0 with divisor generated by the (\u03c10), we do have\n|| Div(f0)||\u03b1 \u2264 || Div(f)||\u03b1\nand we use Proposition 2.6 to prove (5).\nNow, we have to care about the convergence of the remaining sum and prove\n(6)\n\ufffd\n\u03c1/\u2208C0\n|n\u03c1(\u0393f)|.|\u03c1|\u2212(\u03b1+1) < +\u221e\n8\nR. P\u00b4EREZ-MARCO\nAny such divisor point of \u0393f is generated by a zero or pole \u03c1 /\u2208 C0 of f, that generates\n\u03c1, \u03c1 \u2212 1, \u03c1 \u2212 2, . . .. There are at most |\u03c1| such points associated to each \u03c1. Hence we\ncan bound the sum\n\ufffd\n\u03c1/\u2208C0\n|n\u03c1(\u0393f)||\u03c1|\u2212(\u03b1+1) \u2264\n\ufffd\n\u03c1\n|n\u03c1(f)||\u03c1|.|\u03c1|\u2212\u03b1 \u2264 || Div(f)||\u03b1+1\nand the result follows.\n\u25a1\n\u2022 Existence of \u0393f.\nSince f has \ufb01nite order, the divisor of f has a \ufb01nite convergence exponent. Hence,\nDiv(\u0393f) determined by Lemma 2.3 has a \ufb01nite exponent of convergence. Let d \u2265 1\nbe an integer that is an exponent of convergence for this divisor (the case d = 0 only\noccurs for a \ufb01nite divisor). We consider the Weierstrass product,\ng(s) = s\u2212n0(f) \ufffd\n\u03c1\u0338=0\nEd(s/\u03c1)n\u03c1(\u0393f )\nwhere\nEd(x) = (1 \u2212 x) exp\n\ufffd\nx + x2\n2 + . . . + xd\nd\n\ufffd\n.\nThen g has order d and Div(g) = Div(\u0393f). Therefore the meromorphic function\ng(s + 1)\nf(s)g(s)\nis of \ufb01nite order and has no zeros nor poles. So, it is an entire function of \ufb01nite order\nwithout zeros. Therefore, there exists a polynomial \u03c6 such that\n(7)\ng(s + 1)\nf(s)g(s) = e\u03c6(s)\nThere is a unique polynomial \u03c8 such that \u03c8(0) = 0 and\n(8)\n\u03c8(s + 1) \u2212 \u03c8(s) = \u03c6(s).\nWe can obtain \u03c8 directly by developing \u03c6 on the bases of falling factorial polynomials,\nsk = s(s \u2212 1) . . . (s \u2212 k + 1), that diagonalize the di\ufb00erence operator, \u2206sk = k sk\u22121,\n\u03c6(s) =\nn\n\ufffd\nk=0\nak\nk! sk\nON THE DEFINITION OF HIGHER GAMMA FUNCTIONS\n9\nthen\n\u03c8(s) =\n+\u221e\n\ufffd\nk=0\nak\n(k + 1)! sk+1 .\nNow, considering a constant c such that ec = e\u2212\u03c6(0)g(1)\u22121 the meromorphic function\n(9)\n\u0393f(s) = e\u03c8(s)+cg(s),\nsatis\ufb01es \u0393f(1) = 1 (condition (1)), the functional equation (2) and all the other\nconditions in Theorem 2.2, and we have proved the existence.\n\u2022 Uniqueness of \u0393f.\nConsider a second solution G. Let F(s) = \u0393f(s)/G(s). Then F is an entire function\nof \ufb01nite order without zeros, hence we can write F(s) = exp A(s) for some polynomial\nA. Moreover, the functional equation shows that F is Z-periodic. Therefore, there\nexists an integer a \u2208 Z, such that for any s \u2208 C,\nA(s + 1) = A(s) + 2\u03c0ia .\nIt follows that A(s) = 2\u03c0ias + b for some b \u2208 C. Since F(1) = 1, we have eb = 1.\nSince F \u2032(1) \u2208 R, and F \u2032(1) = F \u2032(1)/F(1) = 2\u03c0ia \u2208 R we have a = 0, thus F is\nconstant, F \u2261 1 and G = \u0393f.\n\u25a1\n2.2. Uniqueness results. It is interesting to note, following the argument for unique-\nness, that we can drop the normalisation condition (1) and the real-analyticity con-\ndition (5) and we obtain the following Theorem (this is similar to Theorem 1.3),\nTheorem 2.7. Let f be a LLD meromorphic function in C of \ufb01nite order.\nWe\nconsider a function g satisfying\n(1) g(s + 1) = f(s)g(s) ,\n(2) g is a meromorphic function of \ufb01nite order,\n(3) g is LLD,\nThen there is always a solution \u0393f(s) and any other solution g is of the form g(s) =\ne2\u03c0ias+b\u0393f(s) for some a \u2208 Z and b \u2208 C. If f is CLD then the solutions are CLD.\nMoreover, we have possible further normalizations:\n\u2022 If we add the condition g(1) = 1, or g(k) = 1 for some k \u2208 N\u2217, then all\nsolutions are of the form g(s) = e2\u03c0ias\u0393f(s).\n\u2022 If f \u22121 has a pole at 0 and we add the condition Ress=0 g = 1 then all solutions\nare of the form g(s) = e2\u03c0ias\u0393f(s).\n10\nR. P\u00b4EREZ-MARCO\n\u2022 If f has no zero at 0 then we can add the condition g(0) = 1 and all solutions\nare of the form g(s) = e2\u03c0ias\u0393f(s).\n\u2022 If we add the conditions g(1) = 1 and g(\u03c9) \u2208 R where \u03c9 \u2208 R+ \u2212 Q then\ng = \u0393f is unique.\n\u2022 If we add the conditions g(1) = 1 and g\u2032(1) \u2208 R then the solution g = \u0393f is\nunique.\n\u2022 If we add the hypothesis that f is real analytic and the condition that g is real\nanalytic then all solutions are of the form g(s) = c.\u0393f(s) with c \u2208 R\u2217.\nProof. With the same proof as before we get the existence of a solution \u0393f(s) such\nthat \u0393f(1) = 1.\nand that any other solution is of the form g(s) = e2\u03c0ias+b\u0393f(s)\n(note that the constant 0 function is not LLD). For another solution g, the condition\ng(k) = 1 for k \u2208 Z implies eb = 1, hence the \ufb01rst normalization result. For the second\nstatement we observe that\nRess=0g = ebRess=0\u0393f\nhence eb = 1. The third statement is similar to the \ufb01rst one observing that g has no\npole at s = 0. The fourth normalization condition forces b = 0 (\ufb01rst statement) and\ne2\u03c0ia\u03c9 = 1\nwhich implies a = 0 because \u03c9 is irrational. For the \ufb01fth statement, for a second\nsolution we have, from g(1) = 1, g(s) = e2\u03c0ias\u0393f(s). Di\ufb00erentiate and set s = 1, then\nwe get\ng\u2032(1) = 2\u03c0iag(1) +\n\ufffd\n\u0393f\ufffd\u2032 (1) = 2\u03c0ia + 1 \u2208 R\nhence a = 0 and the solution is unique. For the last statement, g(s) = e2\u03c0ias+b\u0393f(s)\nand g and \u0393f real analytic forces a = 0, and eb \u2208 R\u2217.\n\u25a1\nExample 2.8. For f(s) = s and the conditions g real analytic and g(1) = 1, this\nTheorem is just Theorem 1.1 and the only solution g(s) = \u0393(s) is Euler Gamma\nfunction.\nLet \u03c9 \u2208 C+ and consider f(s) = \u03c9s. Then g(s) = \u03c9s\u0393(s) is a solution and all the\nsolutions are of the form\ng(s) = e2\u03c0ias+s log \u03c9+b\u0393(s) =\nfor a \u2208 Z and b \u2208 C (note that the choice of the branch of log \u03c9 is irrelevant).\nIf \u03c9 \u2208 C\u2217 and we request g(1) = 1, then all solutions are of the form, with a \u2208 Z,\n(10)\ng(s) = e(s\u22121)(2\u03c0ia+log \u03c9) \u0393(s)\nIf \u03c9 \u2208 R+, then f(s) = \u03c9s is real analytic, and if we request g to be real analytic and\ng(1) = 1, then, taking the real branch of log \u03c9, we must have a = 0 and\n(11)\ng(s) = e(s\u22121) log \u03c9 \u0393(s)\nON THE DEFINITION OF HIGHER GAMMA FUNCTIONS\n11\nExample 2.9. Another particular example that is worth noting in this Theorem is\nwhen f(s) = eP (s). Then the solutions are of the form g(s) = eQk(s) where\n\u2206Qk = P + 2\u03c0ik\nfor k \u2208 Z, where \u2206 is the di\ufb00erence operator. This means that Qk(s) = Q0(s) +\n2\u03c0iks + b, where b \u2208 C. If we want solutions normalized such that g(1) = 1 then\neb = 1 and b \u2208 2\u03c0iZ.\n2.3. A continuity result. We prove the continuity of the operator \u0393 : f \ufffd\u2192 \u0393f for\nthe appropriate natural topology.\nTheorem 2.10. Let (fn)n\u22650 be a sequence of meromorphic functions with uniformly\nbounded convergence exponent \u03b1 > 0 and such that\n|| Div(fn)||\u03b1 =\n\ufffd\n\u03c1\u2208Div(fn),\u03c1\u0338=0\n|n\u03c1||\u03c1|\u2212\u03b1 \u2264 M < +\u221e\nfor a uniform bound M > 0. We assume that the functions (fn) satisfy the hypothesis\nof Theorem 2.2 and that fn \u2192 f when n \u2192 +\u221e, where f is a meromorphic function\nand the convergence is uniform on compact sets outside the poles of f. Then f has\nconvergence exponent bounded by \u03b1 > 0,\n|| Div(f)||\u03b1 \u2264 M < +\u221e\nand satis\ufb01es the hypothesis of Theorem 2.2, and also we have, uniformly outside the\npoles,\nlim\nn\u2192+\u221e \u0393fn = \u0393f\nProof. We can read the divisors Div(fn) as an integer valued functions with discrete\nsupport which are converging to Div(f) uniformly on compact sets.\nBy uniform\nboundedness of the sums\n|| Div(fn)||\u03b1 =\n\ufffd\n\u03c1\u2208Div(fn),\u03c1\u0338=0\n|n\u03c1||\u03c1|\u2212\u03b1\nwe can pass to the limit and\n|| Div(f)||\u03b1 = lim\nn\u2192+\u221e || Div(fn)||\u03b1 \u2264 M .\nTherefore f has \ufb01nite order. The class of LLD real analytic functions is closed. The\nclass of functions satisfying the functional equation is also closed, hence f satis\ufb01es\nthe hypothesis of Theorem 2.2, so \u0393f is well de\ufb01ned.\nNow, since Div(fn) \u2192 Div(f), we have using Lemma 2.3 that Div(\u0393fn) \u2192 Div(\u0393f).\nOn compact sets outside of the support of Div(\u0393f), the sequence of meromorphic\nfunctions (\u0393fn)n\u22650 is uniformly bounded (otherwise we would have a subsequence\nwith poles out of the limit that would contradict the convergence of the divisor).\n12\nR. P\u00b4EREZ-MARCO\nHence, we can extract converging subsequences. But any limit is identi\ufb01ed by the\nuniqueness of Theorem 2.2, and we have convergence.\n\u25a1\n2.4. Multiplicative group property. Consider the space E of LLD \ufb01nite order\nmeromorphic functions in the plane. We have that\nE =\n\ufffd\nn>0\nEn\nwhere En is the subgroup of meromorphic functions of order \u2264 n. On En we consider\nthe topology given by convergence of the divisor on compact sets and the convergence\nof functions on compact sets outside the limit divisor. On E we consider the inductive\ntopology from the exhaustion by the En spaces.\nAlso E and En are stable under\nmultiplication, and (E, .) and (En, .) are multiplicative topological group. Consider\nthe closed subgroup E0 \u2282 E of real-analytic functions f normalized such that f(1) = 1.\nTheorem 2.11. The map \u0393 : E0 \u2192 E0 such that\n\u0393(f) = \u0393f\nis an continuous injective group morphism.\nProof. Continuity results from Theorem 2.10. We observe that from\n\u0393f(s + 1) = f(s)\u0393f(s)\n\u0393g(s + 1) = g(s)\u0393g(s)\nwe get\n\u0393f(s + 1)\u0393g(s + 1) = f(s)g(s)\u0393f(s)\u0393g(s)\nand by uniqueness of Theorem 2.2 we get\n\u0393f.\u0393g = \u0393fg .\nAlso, if \u0393f = 1, then directly from the functional equation we get that f = 1, and\nKer(\u0393) = {1}.\n\u25a1\nThis Theorem justi\ufb01es using Euler Gamma function as building block of the general\nsolution by decomposing along the divisor.\nRemark.\nConsider the shift operator T : E \u2192 E, f(s) \ufffd\u2192 T(f) = f(s + 1) and the associated\nmultiplicative cohomological equation in g with f given,\nT(g).g\u22121 = f .\nON THE DEFINITION OF HIGHER GAMMA FUNCTIONS\n13\nWe have proved that the cohomological equation can be solved in E by the group\nmorphism \u0393, g = \u0393f. For f \u2208 E\u03b1 it can be solved in E\u03b1+1. We observe a similar\nphenomenon of \u201closs of regularity\u201d as in \u201cSmall Divisors\u201d problems than in our setting\ncan be interpreted as \u201closs of transalgebraicity\u201d.\n3. Application: Barnes higher Gamma functions.\nNow we can generalize the hierarchy of classical Barnes Gamma functions.\nDe\ufb01nition 3.1. Let f be a real analytic LLD meromorphic function of \ufb01nite order\nsuch that f(1) = 1. The higher Gamma functions associated to f is a family (\u0393f\nN)N\u22650\nsatisfying the following properties:\n(1) \u0393f\n0(s) = f(s)\u22121,\n(2) \u0393f\nN(1) = 1,\n(3) \u0393f\nN+1(s + 1) = \u0393f\nN(s)\u22121 \u0393f\nN+1(s), for N \u2265 0,\n(4) \u0393f\nN is a meromorphic function of \ufb01nite order,\n(5) \u0393f\nN is LLD,\n(6) \u0393f\nN is real analytic.\nTheorem 3.2. Let f be a real analytic LLD meromorphic function of \ufb01nite order\nsuch that f(1) = 1. There exists a unique family of higher Gamma functions (\u0393f\nN)N\nassociated to f. If f is CLD then the \u0393f\nN are CLD.\nProof. We set \u0393f\n0(s) = f(s)\u22121, and for N \u2265 0, the function \u0393f\nN+1 is constructed from\n1/\u0393f\nN using Theorem 2.2, and is unique.\n\u25a1\nThe uniqueness property implies the following multiplicative group morphism prop-\nerty:\nCorollary 3.3. For N \u2265 0, we consider the map \u0393N : E0 \u2192 E0 de\ufb01ned by \u0393N(f) =\n\u0393f\nN. Then \u0393N is a continuous injective group morphism.\nProof. Given f, g \u2208 E0, it is clear that the sequence of functions \u0393f\nN.\u0393g\nN satisfy all\nthe properties of higher Gamma functions associated to fg, hence, by uniqueness, we\nhave \u0393fg\nN = \u0393f\nN\u0393g\nN, hence the group morphism property. The kernel is reduced to the\nconstant function 1 by uniqueness, hence the injectivity. The continuity follows as\nbefore from Theorem 2.10.\n\u25a1\nDe\ufb01nition 3.4 (Barnes higher Gamma functons \u0393N). The higher Gamma functions\nassociated to f(s) = s is the family of higher Barnes Gamma functions (\u0393N)N\u22650,\nwhere \u03931 is Euler Gamma function.\n14\nR. P\u00b4EREZ-MARCO\nNote that Vign\u00b4eras\u2019 normalization (1979, [28]) is slightly di\ufb00erent and de\ufb01nes (for\nf(s) = s) a hierarchy of functions (Gf\nN)N\u22650 as in De\ufb01nition 3.1 but with the functional\nequation replaced by\nGf\nN+1(s + 1) = Gf\nN(s)Gf\nN+1(s)\nWe have a simple direct relation between the two hierarchies\nGf\nN = (\u0393f\nN)(\u22121)N+1 .\nFor f(s) = s we obtain Gf\n2 = G which is Barnes G-function (Barnes, 1900, [3]). The\nconvention in De\ufb01nition 3.1 is compatible with Barnes multiple Gamma functions\nthat generalize the (\u0393N) (Barnes, 1904, [4], see Section 6).\nProposition 3.5. The higher Barnes Gamma function \u0393N is CLD of order N, and\nDiv(\u0393N) = \u2212\n+\u221e\n\ufffd\nn=0\n\ufffdn + N \u2212 1\nN \u2212 1\n\ufffd\n.(\u2212n)\nProof. The function \u0393N is in the class CLD by induction since f is in this class. Any\n\u03b1 > 0 is exponent of convergence for f(s) = s, so by Proposition 2.6 we have by\ninduction that any \u03b1 > N is exponent of convergence for \u0393N. We can check this\ndirectly using the formula for the divisor that follows by induction from Lemma 2.3\nand the combinatorial identity\n\ufffdn + N\nN\n\ufffd\n=\nn\n\ufffd\nk=0\n\ufffdk + N \u2212 1\nN \u2212 1\n\ufffd\nIf we write the Weierstrass factorization and QN denotes the Weierstrass polynomial,\nwe have that deg Q1 = 1, and by induction the same proof gives that deg QN = N.\n\u25a1\nWhen we drop the real analyticity condition, there is no longer uniqueness, but we\ncan prove the following Theorem,\nTheorem 3.6. Let f be a LLD meromorphic function of \ufb01nite order such that f(1) =\n1. Consider a family (gf\nN)N\u22650 satisfying the following properties:\n(1) gf\n0(s) = f(s)\u22121,\n(2) gf\nN(1) = 1,\n(3) gf\nN+1(s + 1) = gf\nN(s)\u22121gf\nN+1(s), for N \u2265 0,\n(4) gf\nN is a meromorphic function of \ufb01nite order,\n(5) gf\nN is LLD,\nON THE DEFINITION OF HIGHER GAMMA FUNCTIONS\n15\nThen there exists an integer sequence (ak)k\u22650, such that\ngf\nN(s) = exp\n\ufffd\n2\u03c0i\nN\n\ufffd\nk=0\naN\u2212k\n\ufffds\nk\n\ufffd\ufffd\n\u0393f\nN(s)\nProof. This follows by induction from Theorem 2.7. We can also give a direct argu-\nment using the group structure. For any solution (gf\nN)N\u22650, the functions hf\nN = \u0393f\nN/gf\nN\nare solution for f = 1. The case f = 1 is easily resolved. By induction, the solutions\nhave no zeros nor poles, and \ufb01nite order, so we have\nhf\nN(s) = e2\u03c0iAN(s)\nwhere the (AN)N\u22650 is a sequence of polynomials satisfying\n\u2206AN+1 = \u2212AN\nand A0(s) = a0 \u2208 Z. The di\ufb00erence equation and the sequence aN = (\u22121)NAN(0)\ndetermines the sequence of polynomials (AN)N\u22650 that are given by the explicit formula\nAN(s) =\nN\n\ufffd\nk=0\naN\u2212k\n\ufffds\nk\n\ufffd\n\u25a1\n4. Application: Jackson q-Gamma function.\nFor 0 < q < 1, Jackson (1905, [10], [11]) (see also the precursor work by Halphen\n[7], vol. 1, p. 240; and H\u00a8older [8]) de\ufb01ned the q-Gamma function \u0393q by the product\nformula\n\u0393q(s) = (q; q)\u221e\n(qs; q)\u221e\n(1 \u2212 q)1\u2212s\nwhere the \u221e-Pochhammer symbol is\n(z; q)\u221e =\n+\u221e\n\ufffd\nk=0\n(1 \u2212 zqk) .\nThe q-Gamma function satis\ufb01es the functional equation\n\u0393q(s + 1) = 1 \u2212 qs\n1 \u2212 q \u0393q(s)\nand Euler Gamma function appears as the limit when q \u2192 1,\n\u0393(s) = lim\nq\u21921\u22120 \u0393q(s)\nAskey ([1], 1980) proved a q-analog of the Bohr-Mollerup theorem characterizing \u0393q\nby its functional equation, the normalization \u0393q(1) = 1, and the real log-convexity of\n16\nR. P\u00b4EREZ-MARCO\n\u0393q. It is natural to investigate if we can use our approach. The answer is a\ufb03rmative\nas shows the next Theorem.\nTheorem 4.1. The q-Gamma function is the only real analytic, \ufb01nite order mero-\nmorphic function such that \u0393q(1) = 1 and satisfying the functional equation,\n\u0393q(s + 1) = 1 \u2212 qs\n1 \u2212 q \u0393q(s)\nProof. This is an application of our general Theorem 2.2 with\nf(s) = 1 \u2212 qs\n1 \u2212 q\nwhich is an order 1 real analytic function in the class LLD (but not CLD), f(1) = 1,\nand\nDiv(f) =\n\ufffd\nk\u2208Z\n1.\n\ufffd2\u03c0ik\nlog q\n\ufffd\n.\n\u25a1\nAn application of the continuity Theorem 2.10 shows:\nProposition 4.2. We have\nlim\nq\u21921\u22120 \u0393q = \u0393\nuniformly on compact sets of C.\nProof. Uniformly on compact sets of C we have\nlim\nq\u21921\u22120\n1 \u2212 qs\n1 \u2212 q = s\nand we use Theorem 2.10.\n\u25a1\nNishiwaza (1996, [16]) has de\ufb01ned the q-analog \u0393N,q of Barnes higher Gamma\nfunctions \u0393N following the Bohr-Mollerup approach. With our methods we can obtain\nNishiwaza\u2019s \u0393N,q functions directly from the higher hierarchy generated by f using\nDe\ufb01nition 3.1 and Theorem 3.2 using the uniqueness of the solution.\nTheorem 4.3. Nishiwaza\u2019s higher q-Gamma functions \u0393N,q are obtained by the higher\nhierarchy from Theorem 3.2\n\u0393N,q = \u0393f\nN\nassociated to the real analytic function\nf(s) = 1 \u2212 qs\n1 \u2212 q .\nON THE DEFINITION OF HIGHER GAMMA FUNCTIONS\n17\n5. Application: Mellin Gamma functions.\nMellin (1897, [13]) considered general Gamma functions satisfying the functional\nequation\nF(s + 1) = R(s)F(s)\nwhere R is a rational function. He constructs solutions by using Euler Gamma func-\ntion as building block along the divisor. An application of the extension of our general\nTheorem 2.7, and the group structure Theorem 2.11, gives the precise existence char-\nacterization of Mellin Gamma functions.\nDe\ufb01nition 5.1. A meromorphic function f is LLD at in\ufb01nite if f(s + a) is LLD for\nsome a \u2208 R.\nSince Div(f(s + a)) = Div(f) \u2212 a this means that the divisor of f is in some left\nhalf plane (not necessarily C+).\nTheorem 5.2. Let R be a rational function,\nR(s) = a(s \u2212 \u03b11) . . . (s \u2212 \u03b1n)\n(s \u2212 \u03b21) . . . (s \u2212 \u03b2m)\nwhere a \u2208 C\u2217, and (\u03b1k) and (\u03b2k) are the zeros, resp. the poles, of R counted with\nmultiplicity.\nConsider the \ufb01nite order meromorphic functions, LLD at in\ufb01nite, that are solutions\nof the functional equation\n(12)\nF(s + 1) = R(s)F(s) .\nThey are of the form\nF(s) = as \u0393(s \u2212 \u03b11) . . . \u0393(s \u2212 \u03b1n)\n\u0393(s \u2212 \u03b21) . . . \u0393(s \u2212 \u03b2m)e2\u03c0iks\nfor some k \u2208 Z.\nIn particular, if R(1) = 1 and R is real analytic there is only one real analytic\nsolution such that F(1) = 1.\nProof. Let \u03b1 be a zero or pole. We consider the linear function f\u03b1(s) = s \u2212 \u03b1 and a\nsolution \u0393f\u03b1 to\nF\u03b1(s + 1) = f\u03b1(s)F\u03b1(s + 1) .\nAlso as is a solution to F(s+1) = aF(s). Then, Theorem 2.7 and the group structure\nof the solutions, Theorem 2.11, shows that the general solutions of the functional\n18\nR. P\u00b4EREZ-MARCO\nequation (12) are of the form\nF(s) = ase2\u03c0ins\u0393f\u03b11(s)e2\u03c0ik1s . . . \u0393f\u03b1n(s)e2\u03c0ikns\n\u0393f\u03b21(s)e2\u03c0il1s . . . \u0393f\u03b2m(s)e2\u03c0ilms\n= as \u0393f\u03b11(s) . . . \u0393f\u03b1n(s)\n\u0393f\u03b21(s) . . . \u0393f\u03b2m(s)e2\u03c0iks\nwhere n, k1, . . . , kn, l1, . . . , lm \u2208 Z, and k = n + k1 + . . . kn + l1 + . . . + lm.\nWe \ufb01nish the proof by observing that we can take \u0393f\u03b1(s) = \u0393(s \u2212 \u03b1). When R is\nreal analytic, a \u2208 R\u2217, the set of roots (\u03b1j) and poles (\u03b2j) are self-conjugated, and we\nmust have k = 0 to have F real analytic.\n\u25a1\nConsidering a LLD rational function R, real analytic and such that R(1) = 1, we\ncan de\ufb01ne the unique associated higher Gamma functions hierarchy (\u0393R\nN)N\u22650 given by\nTheorem 3.2. These higher Mellin Gamma functions seem to be new in the literature.\n6. Application: Barnes multiple Gamma functions.\nFor N \u2265 1 and parameters \u03c9 = (\u03c91, . . . , \u03c9n) \u2208 Cn\n+, Barnes multiple Gamma\nfunctions \u0393(s|\u03c91, . . . , \u03c9N) = \u0393(s|\u03c9) are a generalization by Barnes (1904, [4]) of\nBarnes higher Gamma functions \u0393N studied in section 3. When \u03c91 = . . . = \u03c9N = 1\nwe recover \u0393N as\n\u0393N(s) = \u0393(s|1, . . . , 1)\nBarnes only considers the apparently more general case where \u03c91, . . . , \u03c9n all belong to\na half plane limited by a line through the origin ([4] p.387). This situation that can\nbe reduced to our case by a rotation. Also, he assumes dimQ(\u03c91, . . . , \u03c9N) \u2265 3 to have\nan essentially di\ufb00erent situation from the double Gamma function G that he studied\npreviously, although this condition is not the appropriate one. Barnes de\ufb01nes these\nmultiple Gamma functions `a la Lerch. First, Barnes de\ufb01nes the Barnes-Hurwitz zeta\nfunctions, a multiple version of Hurwitz zeta function, as\n\u03b6(t, s|\u03c91, . . . , \u03c9N) =\n\ufffd\nk1,...kN\u22650\n(s + k1\u03c91 + . . . + kN\u03c9N)\u2212t ,\nwhich is converging for Re s > N, and symmetric on \u03c91, . . . , \u03c9N. This multiple zeta\nfunction reduces to Hurwitz zeta function for N = 1 (Hurwitz, 1882, [9]). Its analytic\ncontinuation and Lerch formula (Lerch, 1894, [12])\n(13)\nlog \u0393(s) =\n\ufffd \u2202\n\u2202t\u03b6(t, s)\n\ufffd\nt=0\n\u2212 \u03b6\u2032(0)\nON THE DEFINITION OF HIGHER GAMMA FUNCTIONS\n19\nallows to de\ufb01ne Euler Gamma function. Barnes generalizes this approach and he\nshows, using a Hankel type integral, that \u03b6(s, t|\u03c91, . . . , \u03c9N) has a meromorphic exten-\nsion in (s, t). Then he de\ufb01nes\n\u0393B(s|\u03c9) = \u03c1N(\u03c9) exp\n\ufffd\ufffd \u2202\n\u2202t\u03b6(t, s|\u03c9)\n\ufffd\nt=0\n\ufffd\nwhere \u03c1N(\u03c9) is Barnes modular function, and is de\ufb01ned to provide the normalization\nsuch that \u0393B(s|\u03c9) has residue 1 at s = 0,\n(14)\nRess=0\u0393B(s|\u03c9) = lim\ns\u21921 s\u0393B(s|\u03c9) = 1\nFrom the de\ufb01nition we get that both \u03c1N(\u03c9) and \u0393B(s|\u03c9) are necessarily symmetric\non \u03c91, . . . , \u03c9N.\nNote that for Euler Gamma function, because of the form of the\nfunctional equation, the normalization \u0393(1) = 1 is equivalent to Ress=0\u0393 = 1. In\ngeneral, for \u0393f the normalization \u0393f(1) = 1 is equivalent to\nRess=0\u0393f = Ress=0f \u22121 .\nFor Barnes higher Gamma functions \u0393N discussed in section 3, we see that the nor-\nmalization \u0393N(1) = 1 is equivalent to Ress=0\u0393N = 1 when we make s \u2192 0 in\n\u0393N+1(s + 1) = (s\u0393N(s))\u22121 s\u0393N+1(s)\nwe get\n\u0393N+1(1) = Ress=0\u0393N+1 = 1 .\nand the result follows by induction.\nBarnes ([4], p.397) observes that log \u03c1(\u03c9) plays the role of Stirling\u2019s constant of the\nasymptotic expansion when k \u2192 +\u221e of the divergent sum\n\ufffd\n\u03c9\u2208\u2126\u2217,|\u03c9|\u2264k\nlog |\u03c9|\nwhere \u2126\u2217 = N.\u03c91 + N.\u03c92 + . . . + N.\u03c9N \u2212 {0}. Also, log \u03c1(\u03c9) can be de\ufb01ned in this\nway.\nLater applications to Number Theory by Shintani in the 70\u2019s of Barnes multiple\nGamma functions (1976,[25], [26], [27]), and modern presentations (Ruijsenaars, [22]),\ndrop Barnes normalization. They de\ufb01ne multiple Gamma functions directly by the\nformula\n\u0393(s|\u03c9) = exp\n\ufffd\ufffd \u2202\n\u2202t\u03b6(t, s|\u03c9)\n\ufffd\nt=0\n\ufffd\nWe keep Shintani\u2019s normalization that has become the standard one in the modern\nliterature. This normalization has the advantage to yield a simpler functional equation\nnot involving Barnes modular function \u03c1(\u03c9). We denote by \u02c6\u03c9 the N \u2212 1 dimensional\n20\nR. P\u00b4EREZ-MARCO\nvector obtained from \u03c9 removing the k-th coordinate. Then we have the following\nladder functional equation for the zeta function,\n(15)\n\u03b6(t, s + \u03c9k|\u03c9) \u2212 \u03b6(t, s|\u03c9) = \u2212\u03b6(t, s|\u02c6\u03c9)\nwhere we start with\n\u03b6(t, s|\u2205) = s\u2212t .\nFrom the zeta function functional equation we get the functional equation for the\nmultiple Gamma functions,\n(16)\n\u0393(s + \u03c9k|\u03c9) = \u0393(s|\u02c6\u03c9)\u22121\u0393(s|\u03c9)\nwith the convention \u0393(s|\u2205) = s. Note that the functional equation for Barnes nor-\nmalized multiple Gamma functions is di\ufb00erent, and we have a di\ufb00erent functional\nequation:\n(17)\n\u0393B(s + \u03c9k|\u03c9) = \u03c1(\u02c6\u03c9)\u0393B(s|\u02c6\u03c9)\u22121\u0393B(s|\u03c9) .\nExample 6.1. For N = 1, \u0393(s|\u03c9) can be computed explicitly from Euler Gamma\nfunction (see [24], p.203).\nLemma 6.2. We have\n\u0393(s|\u03c9) = (2\u03c0)\u22121/2e( s\n\u03c9 \u2212 1\n2) log \u03c9 \u0393\n\ufffd s\n\u03c9\n\ufffd\n\u03c11(\u03c9) =\n\ufffd \u03c9\n2\u03c0\nand therefore\n\u0393B(s|\u03c9) =\n\ufffd\n2\u03c0\n\u03c9 \u0393(s|\u03c9) = e( s\n\u03c9 \u22121) log \u03c9 \u0393\n\ufffd s\n\u03c9\n\ufffd\nand\n\u0393(\u03c9|\u03c9) =\n\ufffd \u03c9\n2\u03c0\nRess=0\u0393(s|\u03c9) =\n\ufffd \u03c9\n2\u03c0\n\u0393B(\u03c9|\u03c9) = 1\nRess=0\u0393B(s|\u03c9) = 1\nIn particular,\n\u0393(s|1) = \u0393(s)\n\u221a\n2\u03c0\n\u0393B(s|1) = \u0393(s)\nON THE DEFINITION OF HIGHER GAMMA FUNCTIONS\n21\nProof. For \u03c9 = 1, \u03b6(t, s|1) = \u03b6(t, s) is the original Hurwitz zeta function that gener-\nalizes Riemann zeta function \u03b6(t) = \u03b6(t, 1),\n\u03b6(t, s) =\n\ufffd\nk\u22650\n(s + k)\u2212t .\nMaking t = 0 in the \ufb01rst formula from Lemma 3.18 from [19] we have the classical\nresult (see also [29] p.267)\n(18)\n\u03b6(0, s) = 1\n2 \u2212 s .\nObserve now that we have \u03b6(t, s|\u03c9) = \u03c9\u2212t\u03b6\n\ufffd\nt, s\n\u03c9\n\ufffd\n, hence\n\u2202\n\u2202t\u03b6(t, s|\u03c9) = \u2212(log \u03c9)\u03c9\u2212t\u03b6\n\ufffd\nt, s\n\u03c9\n\ufffd\n+ \u03c9\u2212t \u2202\n\u2202t\u03b6(t, s)\nand making t = 0, using formula (18) and Lerch formula (13), we get\nlog \u0393(s|\u03c9) =\n\ufffd s\n\u03c9 \u2212 1\n2\n\ufffd\nlog \u03c9 + log \u0393\n\ufffd s\n\u03c9\n\ufffd\n+ \u03b6\u2032(0) .\nNow, \u03b6\u2032(0) = \u22121\n2 log(2\u03c0) gives the \ufb01rst formula. Then using this formula we get\nRess=0\u0393(s|\u03c9) = lim\ns\u21921 s\u0393(s|\u03c9) = (2\u03c0)\u22121/2e\u2212 1\n2 log \u03c9\u03c9 =\n\ufffd \u03c9\n2\u03c0 .\n\u25a1\nFor N \u2265 2 we create new transcendentals \u0393(s|\u03c9), which are not generated from\nEuler Gamma function. For example for N = 2, if \u03c91 and \u03c92 are Q-independent we\nget new transcendentals. When the parameters are Q-dependent then \u0393(s|\u03c91\u03c92) can\nbe expressed from Barnes G-function, G2 = \u0393\u22121\n2 .\nConsidering the functional equations, from our point of view, it is natural to aim\nto characterize \u0393(s|\u03c9) by solving a tower of di\ufb00erence equations corresponding to the\nsequence (\u03c9k)1\u2264k\u2264n. Our approach leads to a new de\ufb01nition, not needing Barnes-\nHurwitz zeta functions. We start by considering real analytic multiple zeta functions\nthat are those relevant in Shintani\u2019s applications to real quadratic number \ufb01elds (1978,\n[26]). The following Theorem follows from Theorem 2.7.\nTheorem 6.3. Let \u03c9 \u2208 R+. Let f be a real analytic LLD meromorphic function\nin C of \ufb01nite order. There exists a unique function \u0393f(s|\u03c9) satisfying the following\nproperties:\n(1) \u0393f(1|\u03c9) = 1 ,\n(2) \u0393f(s + \u03c9|\u03c9) = f(s)\u0393f(s|\u03c9) ,\n(3) \u0393f(s|\u03c9) is a meromorphic function of \ufb01nite order,\n(4) \u0393f(s|\u03c9) is LLD,\n22\nR. P\u00b4EREZ-MARCO\n(5) \u0393f is real analytic.\nIf f is CLD then \u0393f is CLD.\nIf we drop condition (1) then \u0393f(s|\u03c9) is unique up to multiplication by a constant\nc \u2208 R\u2217.\nIf Ress=0f \u22121 = 1, we can replace condition (1) by the condition Ress=0\u0393f = 1.\nProof. We make the change of variables t = \u03c9\u22121s. The application of Theorem 2.7\nto the real analytic function h(t) = f(\u03c9t) gives a unique real analytic solution \u0393h(t)\nsuch that \u0393h(1) = 1 and\n\u0393h(t + 1) = h(t)\u0393h(t) .\nIf we set \u0393f(s|\u03c9) = \u0393h(\u03c9\u22121s), this equation becomes\n\u0393f(s + \u03c9|\u03c9) = \u0393h(\u03c9\u22121s + 1) = h(\u03c9\u22121s)\u0393h(\u03c9\u22121s) = f(s)\u0393f(s|\u03c9)\nand \u0393f(s|\u03c9) satis\ufb01es all conditions. Furthermore, \u0393f(s|\u03c9) is unique from the unique-\nness of \u0393h that follows from the last uniqueness condition in Theorem 2.7. In view of\nthis uniqueness result, the two last statement are clear. Also if f is CDL then \u0393f(s|\u03c9)\nis CDL.\n\u25a1\nExample 6.4. For f(s) = s the proof gives h(t) = \u03c9t and a solution \u0393f(s|\u03c9) =\n\u0393h \ufffd t\n\u03c9\n\ufffd\n. The condition \u0393f(1|\u03c9) = 1 is equivalent to \u0393h \ufffd 1\n\u03c9\n\ufffd\n= 1, then according to\nExample 2.8 there is a unique real analytic solution\n\u0393h(t) = e(t\u22121) log \u03c9\n\u0393(t)\n\u0393(\u03c9\u22121)\nand it follows that\n\u0393f(s|\u03c9) = e( s\n\u03c9 \u22121) log \u03c9 \u0393\n\ufffd s\n\u03c9\n\ufffd\n\u0393(\u03c9\u22121)\nTherefore, by uniqueness of the normalization,\n\u0393B(s|\u03c9) = \u0393(\u03c9\u22121)\u0393f(s|\u03c9)\nand we recover the formula for \u0393B(s|\u03c9) from Lemma 6.2\n\u0393B(s|\u03c9) = e( s\n\u03c9 \u22121) log \u03c9 \u0393\n\ufffd s\n\u03c9\n\ufffd\nThen the formula for \u0393(s|\u03c9) follows from\n\u0393(s|\u03c9) =\n\ufffd \u03c9\n2\u03c0 \u0393B(s|\u03c9) = (2\u03c0)\u22121/2e( s\n\u03c9 \u2212 1\n2) log \u03c9 \u0393\n\ufffd s\n\u03c9\n\ufffd\n.\nWe have established,\nON THE DEFINITION OF HIGHER GAMMA FUNCTIONS\n23\nProposition 6.5. For f(s) = s we have\n\u0393(s|\u03c9) =\n\ufffd \u03c9\n2\u03c0 \u0393(\u03c9\u22121) \u0393f(s|\u03c9)\nwhere \u0393f(s|\u03c9) is the unique solution in Theorem 6.3.\nUsing similar ideas, the general version of Theorem 2.7 for \u03c9 \u2208 C+ and without\nthe hypothesis of f being real analytic is the following:\nTheorem 6.6. Let \u03c9 \u2208 C+. Let f be a LLD meromorphic function in C of \ufb01nite\norder. We consider a function g satisfying\n(1) g(1) = 1,\n(2) g(s + \u03c9) = f(s)g(s),\n(3) g is a meromorphic function of \ufb01nite order,\n(4) g is LLD,\nThen there is a solution \u0393f(s|\u03c9). Any other solution g is of the form g(s) = e2\u03c0ia s\u22121\n\u03c9 \u0393f(s|\u03c9)\nfor some a \u2208 Z.\nIf we remove condition (1) then all solutions are of the form the form g(s) = eb+2\u03c0ia s\n\u03c9 \u0393f(s|\u03c9)\nfor some a \u2208 Z and b \u2208 C.\nProof. As before, we make the change of variables t = \u03c9\u22121s and apply Theorem 2.7 to\nthe function h(t) = f(\u03c9t) gives an unconditional solution \u0393f(s|\u03c9) = \u0393h(t)/\u0393h(\u03c9\u22121).\nFrom the general uniqueness statement in 2.7 we know that all the other solutions\nremoving condition (1) are of the form g(s) = e2\u03c0ia s\n\u03c9 +b \u0393f(s|\u03c9) for some a \u2208 Z and\nb \u2208 C. Condition (1) is then equivalent to 2\u03c0ia/\u03c9 + b = 2\u03c0ik with k \u2208 Z, hence the\ngeneral form.\n\u25a1\nTherefore, in general for \u03c9 \u2208 C\u2217, \u0393f is not uniquely determined, but its values on\n1 + Z.\u03c9 are well determined. More precisely, we have,\nProposition 6.7. The values taken by solutions at the points 1 + k\u03c9 for k \u2208 Z are\nuniquely determined and do not depend on the solution chosen.\nIf \u03c9 \u2208 C+, any solution g is uniquely determined by Im g\u2032(1), in particular, if f is\nreal analytic then there is a unique real analytic solution.\nIf dimQ(1, \u03c9) = 2, any solution g is uniquely determined by its value g(r) for\nrational value r \u0338= 1 and r > 0.\n24\nR. P\u00b4EREZ-MARCO\nProof. From the functional equation we have\ng(1 + k\u03c9) = g(1)\nk\u22121\n\ufffd\nj=0\nf(1 + j\u03c9) =\nk\u22121\n\ufffd\nj=0\nf(1 + j\u03c9)\nhence the \ufb01rst claim.\nNow, consider two solutions g1 and g2 such that Im g\u2032\n1(1) = Im g\u2032\n2(1). Since they are\nof the form gj(s) = e2\u03c0iaj s\u22121\n\u03c9 \u0393f(s|\u03c9) for some aj \u2208 Z, taking logarithmic derivatives\nwe have\ng\u2032\nj(1) = g\u2032\nj(1)\ngj(1) = 2\u03c0iaj\n\u03c9 +\n\ufffd\n\u0393f\ufffd\u2032 (1|\u03c9)\n\u0393f(1|\u03c9)\n= 2\u03c0iaj\n\u03c9 +\n\ufffd\n\u0393f\ufffd\u2032 (1|\u03c9)\nhence\ng\u2032\n1(1) \u2212 g\u2032\n2(1) = 2\u03c0i a1 \u2212 a2\n\u03c9\n\u2208 R\nand the condition \u03c9 \u2208 C+ forces a1 = a2.\nNow assume dimQ(1, \u03c9) = 2 and consider two solutions g1 and g2 such that g1(r) =\ng2(r) for some rational r \u2208 Q with r > 0 and r \u0338= 1. Then, since s = r is neither a\nzero nor a pole because g is LLD, we have for some l \u2208 Z\ng1(r)\ng2(r) = e2\u03c0(r\u22121) a1\u2212a2\n\u03c9\n= 1\nthus we have\n(r \u2212 1)(a1 \u2212 a2) \u2212 l\u03c9 = 0\nand, by Q-independence, we must have l = 0 and (r \u2212 1)(a1 \u2212 a2) = 0, thus, since\nr \u0338= 1, we must have a1 = a2 and g1 = g2.\n\u25a1\nGeneral Multiple Gamma Hierarchies.\nNow, we can iterate Theorem 6.3 to de\ufb01ne new real-analytic multiple Gamma\nfunctions corresponding to f and to positive real parameters \u03c9 = (\u03c91, . . . , \u03c9N) \u2208 RN\n+\nFor an in\ufb01nite sequence of parameters \u03c9 = (\u03c91, \u03c92, . . .) \u2208 C\u221e\n+ , we can also de\ufb01ne a\ngeneralization of Barnes multiple Gamma hierarchy. We denote \u03c9N = (\u03c91, . . . , \u03c9N) \u2208\nCN\n+.\nDe\ufb01nition 6.8 (General Multiple Gamma Hierarchy). Let \u03c9 = (\u03c91, \u03c92, . . .) \u2208 C\u221e\n+\nand f be a LLD meromorphic function in C of \ufb01nite order. A general multiple Gamma\nhierarchy (\u0393f\nN(s|\u03c9N))N\u22650 associated to f is a sequence of functions satisfying:\n(1) \u0393f\n0(s) = f(s)\u22121,\n(2) \u0393f\nN+1(s + \u03c9N+1|\u03c9N+1) = \u0393f\nN(s|\u03c9N)\u22121 \u0393f\nN+1(s|\u03c9N+1), for N \u2265 0,\n(3) \u0393f\nN(s|\u03c9N) is a meromorphic function of \ufb01nite order,\nON THE DEFINITION OF HIGHER GAMMA FUNCTIONS\n25\n(4) \u0393f\nN(s|\u03c9N) is LLD.\nNext we show that, with some simple normalization, General Multiple Gamma\nHierarchies are unique for real parameters and f real analytic.\nTheorem 6.9. Let \u03c9 = (\u03c91, \u03c92, . . .) \u2208 R\u221e\n+ and f a real analytic LLD meromorphic\nfunction of \ufb01nite order, such that f(1) = 1. There exists a unique General Multiple\nGamma Hierarchy (\u0393f\nN(s|\u03c9N))N\u22651 associated to f, and normalized such that\n\u0393f\nN(1|\u03c9N) = 1 .\nIf f is CLD then the \u0393f\nN(s|\u03c9N) are CLD.\nProof. The existence and uniqueness is proved by induction on N \u2265 0. For N = 0,\n\u0393f\n0(s) = f(s). We assume that the result has been proved for N \u2265 0. Then we\nconstruct \u0393f\nN+1(s|\u03c9N+1) by using Theorem 6.3 using the function f = \u0393f\nN(s|\u03c9N)\u22121.\n\u25a1\nIn the particular case where f(s) = s, using uniqueness, we obtain Barnes Multiple\nGamma functions for real parameters \u03c9. This gives a new approach to de\ufb01ne Barnes\nMultiple Gamma functions.\nDe\ufb01nition 6.10 (Barnes Multiple Gamma functions). For \u03c9 = (\u03c91, \u03c92, . . .) \u2208 R\u221e\n+ the\nGeneral Multiple Gamma Hierarchy associated to f(s) = s is Barnes Multiple Gamma\nHierarchy (\u0393f\nN(s|\u03c9N))N\u22651 with the normalization \u0393f\nN(1|\u03c9N) = 1. We simplify the\nnotation and we denote \u0393f\nN(s|\u03c9N) = \u0393(s|\u03c9N).\nWe observe that since the Barnes multiple Gamma functions \u0393(s|\u03c9N) are symmet-\nric on the real parameters (\u03c91, . . . , \u03c9N) then, by uniqueness, the solutions of Theorem\n6.9 for f(s) = s must also be symmetric on the parameters, which is not obvious a\npriori. This is general when we can de\ufb01ne the Gamma functions `a la Lerch, including\nthe case of complex parameters \u03c9 = (\u03c91, \u03c92, . . .) \u2208 C\u221e\n+ . Consider f a real analytic\nLLD meromorphic function of \ufb01nite order, such that,\nf(1) = 1\nand Re f(s) > 0 for s \u2208 C+. These conditions are su\ufb03cient to de\ufb01ne f(s)\u2212t for\ns \u2208 C+ by taking the principal branch of log in C+, f(s)\u2212t = exp(\u2212t log f(s)). We\nassume that the multiple Barnes-Hurwitz multiple zeta function associated to f,\n\u03b6f(t, s|\u03c91, . . . , \u03c9N) =\n\ufffd\nk1,...kN\u22650\nf(s + k1\u03c91 + . . . + kN\u03c9N)\u2212t ,\nis well de\ufb01ned and holomorphic in a right half plane Re t > t0 for all s \u2208 C+, and has\na meromorphic extension to t \u2208 C. Then we can de\ufb01ne \u0393f(s|\u2205) = f(s)\u2212t, and, `a la\n26\nR. P\u00b4EREZ-MARCO\nLerch, for s \u2208 C+,\n\u0393f\nL(s|\u03c9N) = exp\n\ufffd\ufffd \u2202\n\u2202t\u03b6f(t, s|\u03c9N)\n\ufffd\nt=0\n\u2212\n\ufffd \u2202\n\u2202t\u03b6f(t, s|\u03c9N)\n\ufffd\nt=0,s=1\n\ufffd\nNote that we have normalized these functions such that \u0393f\nL(1|\u03c9N) = 1. By con-\nstruction, these functions are obviously symmetric on the parameters \u03c91, . . . , \u03c9N. As\nbefore, these functions satisfy the functional equations,\n(19)\n\u0393f\nL(s + \u03c9N|\u03c9N) = \u0393f\nL(s|\u03c9N\u22121)\u22121\u0393f\nL(s|\u03c9N)\nwhich show that they have a meromorphic extension to all s \u2208 C. now, using the\nuniqueness from Theorem 6.9 we get for real parameters:\nTheorem 6.11. Let \u03c9 = (\u03c91, \u03c92, . . .) \u2208 R\u221e\n+ . When \u0393f\nL(s|\u03c9N) is well de\ufb01ned, we\nhave\n\u0393f\nL(s|\u03c9N) = \u0393f\nN(s|\u03c9N)\nwhere the (\u0393f\nN(s|\u03c9N))N\u22650 are the solutions of Theorem 6.9.\nCorollary 6.12. Let \u03c9 = (\u03c91, \u03c92, . . .) \u2208 R\u221e\n+ . The Barnes multiple Gamma hier-\narchy de\ufb01ned by Theorem 6.9, \u0393f\nN(s|\u03c9N) are symmetric on the parameters \u03c9N =\n(\u03c91, \u03c92, . . . , \u03c9N).\nWe note that our de\ufb01nition of the hierarchies using the functional equation is more\ngeneral than Barne\u2019s de\ufb01nition `a la Lerch, since we need extra conditions on f to\nde\ufb01ne the multiple f-Barnes-Hurwitz zeta function and prove that it is holomorphic\nin a half plane. If we don\u2019t add the normalization condition\n\u0393f\nN(1|\u03c9N) = 1\nthen there exists solutions that are non-symmetric on the parameters. As we see\nnext, this is even more evident for complex parameters since in that case, without\nfurther hypothesis, there is no symmetry on the parameters \u03c9. This proves that\nour functional equation approach de\ufb01nes a larger class of functions than the classical\nones.\nWe observe also that the existence and uniqueness of Theorem 6.9 implies the mor-\nphism property. Let ER be the multiplicative group of real-analytic LLD meromorphic\nfunctions of \ufb01nite order and\nER =\n\ufffd\nn\u22651\nER\nn\nand let ER\n0 the subgroup of functions f such that f(1) = 1. With the same arguments\nas before, we prove:\nON THE DEFINITION OF HIGHER GAMMA FUNCTIONS\n27\nTheorem 6.13. For \u03c9 = (\u03c91, \u03c92, . . .) \u2208 R\u221e\n+ and N \u2265 0, we consider the map\n\u0393N(\u03c9N) : ER\n0 \u2192 ER\n0\nde\ufb01ned by \u0393N(\u03c9N)(f) = \u0393f\nN(.|\u03c9N). Then \u0393N(\u03c9N) is a continuous injective group\nmorphism.\nThe uniqueness property of the General Multiple Gamma Hierarchy associated to\nf, proves that we obtain the same hierarchy, shifting the index by 1, if we use \u0393f\n1(., \u03c91)\ninstead of f, more precisely we have:\nProposition 6.14. Under the assumptions of Theorem 6.9, if we denote \u03c9\u2032\nN\u22121 =\n(\u03c92, . . . , \u03c9N), we have\n\u0393\n\u0393f\n1(.,\u03c91)\nN\u22121\n(.|\u03c9\u2032\nN) = \u0393f\nN(.|\u03c9N)\nComplex parameters.\nWe study now the non-real-analytic case for complex parameters \u03c91, . . . , \u03c9N \u2208\nC+. In general we don\u2019t have uniqueness as in Theorem 6.9. We consider f a LLD\nmeromorphic function in C of \ufb01nite order with f(1) = 1 and study the question\nof existence and uniqueness of a general multiple Gamma functions hierarchy as in\nDe\ufb01nition 6.8 with the normalization\n\u0393f\nN(1|\u03c9N) = 1 .\nWithout imposing the real analyticity condition, we have the following result:\nTheorem 6.15. Let \u03c9 = (\u03c91, \u03c92, . . .) \u2208 C\u221e\n+ and f a LLD meromorphic function\nof \ufb01nite order such that f(1) = 1. There exists General Multiple Gamma Hierarchy\n(\u0393f\nN(s|\u03c9N))N\u22650 associated to f, and for any other hierarchy (\u02dc\u0393f\nN(s|\u03c9N))N\u22650 there\nexists a sequence of polynomials (PN)N\u22651 such that\n\u02dc\u0393f\nN(s|\u03c9N) = exp (2\u03c0iPN(s)) \u0393f\nN(s|\u03c9N)\nwith PN(1) \u2208 Z, P0 is a constant integer, and for N \u2265 0 we have\n\u2206\u03c9N+1PN+1 = \u2212PN\nwhere \u2206\u03c9 is the \u03c9-di\ufb00erence operator \u2206\u03c9P = P(s + \u03c9) \u2212 P(s). The polynomials PN\nbelongs to an additive group of polynomials isomorphic to a subgroup of ZN+1.\nIf the functions f is CLD then \u0393f\nN(s|\u03c9N) and all the other solutions are CLD.\nProof. For the existence result, we carry out the same proof by induction as for\nTheorem 6.9 (without the normalization condition) and using Theorem 6.6.\nIf a\nsecond solution (\u02dc\u0393f\nN(s|\u03c9N))N\u22651 exists, then (\u02dc\u0393f\nN(s|\u03c9N)/\u0393f\nN(s|\u03c9N))N\u22651 is a solution\nof the problem for the constant function f(s) = 1. The solution for f(s) = 1 has\n28\nR. P\u00b4EREZ-MARCO\nno divisor and is of \ufb01nite order, hence they are of the form exp(PN) where PN are\npolynomial which satisfy the above di\ufb00erence equations. The structure of the space\nof polynomials PN becomes clear from the study of the di\ufb00erence operators that\nfollows.\n\u25a1\nWe observe that the integer sequence (PN(1))N\u22651 of values taken at s = 1, and the\ndi\ufb00erence equation determine uniquely the sequence of polynomials (PN)N\u22651.\nWe de\ufb01ne the \u03c9-descending factorial that form a triangular bases for the action of\nthe operator \u2206\u03c9 on polynomials.\nDe\ufb01nition 6.16. Let \u03c9 \u2208 C\u2217. For s \u2208 C and for an integer k \u2265 1, we de\ufb01ne the\n\u03c9-descending factorial as\ns[k,\u03c9] = s(s \u2212 \u03c9) . . . (s \u2212 (k \u2212 1)\u03c9)\nFor \u03c9 = 1 we get the usual descending factorial. A simple computation shows:\nProposition 6.17. We have\n\u2206\u03c9s[k+1,\u03c9] = (k + 1)\u03c9s[k,\u03c9]\nTo simplify the recurrence, we write QN(s) = (\u22121)NPN(s \u2212 1) and aN = QN(0).\nThe polynomials (QN) satisfy the di\ufb00erence equations\n\u2206\u03c9N+1QN+1 = QN .\nNow, we can give the general structure of the solutions (QN) of this system of di\ufb00er-\nence equations.\nProposition 6.18. For N \u2265 1, the general solution of the above system of di\ufb00erence\nequations is given by\nQN(s) =\nN\n\ufffd\nk=0\naN\u2212k\n\u03c91\u03c92 . . . \u03c9k\n\ufffds[k,\u03c9N]\nk!\n+ AN,k(\u03c91, . . . , \u03c9N, s)\n\ufffd\nwhere the AN,k are universal polynomials with integer coe\ufb03cients in N + 1 variables\nand their total degree in the \ufb01rst N variables is strictly less than k, and the coe\ufb03cient\na0, a1, . . . , aN are arbitrary integers.\nFrom this Proposition it is clear that the space of solutions QN, and the one of PN, is\nisomorphic to a quotient subgroup of ZN+1 by the kernel of the map (a0, a1, . . . , aN) \u2208\nZN+1 \ufffd\u2192 QN. The proof of this Proposition follows by induction on N \u2265 1, solving\nthe di\ufb00erence equation\n\u2206\u03c9N+1QN+1 = QN .\nON THE DEFINITION OF HIGHER GAMMA FUNCTIONS\n29\nFor this, we develop the polynomials\ns[k,\u03c9N]\nk!\n+ AN,k(\u03c91, . . . , \u03c9N, s)\nin the bases (sk), then we change to the bases (s[\u03c9N+1,k]) using the following Lemma:\nLemma 6.19. For n \u2265 1,\nsn =\nn\n\ufffd\nk=0\nBn,k(\u03c9)s[\u03c9,k]\nwhere Bn,n = 1, Bn,k \u2208 Z[X] and deg Bn,k \u2264 n \u2212 k.\nProof. We proceed by induction. The result is clear for n = 1, and developing s[\u03c9,n] =\ns(s \u2212 \u03c9) . . . (s \u2212 (n \u2212 1)\u03c9) we get\nsn = s[\u03c9,n] \u2212\nn\n\ufffd\nk=1\nbk \u03c9ksn\u2212k\nwith bk \u2208 Z, and the induction hypothesis proves the result.\n\u25a1\nObserve than if in this change of bases we keep track of the total degree of the\nmonomials on the variables s and \u03c9, it is constant. Hence, when we chage to the\nbases (s[\u03c9N+1,k]) we have the degree property of the polynomials AN,k.\nNow we can study uniqueness conditions. If we assume some algebraic indepen-\ndence condition on the parameters, we have a generalization by induction of the\nuniqueness result from Proposition 6.7.\nTheorem 6.20. Under the same conditions as in Theorem 6.15, and if we assume\nthat for 1 \u2264 n \u2264 N,\n(20)\n[Q[\u03c91, . . . , \u03c9n] : Q[\u03c91, . . . , \u03c9n\u22121]] \u2265 n + 1\nthen the hierarchy (\u0393f\nn(s|\u03c9n))1\u2264n\u2264N is uniquely determined by any value \u0393f\nN(r|\u03c9N) at\nsome rational value r \u0338= 1 and r > 0.\nProof. If we have two solutions (gn(s|\u03c9n))1\u2264n\u2264N and (\u02dcgn(s|\u03c9n))1\u2264n\u2264N, the equality,\ngN(r|\u03c9N) = \u02dcgN(r|\u03c9N), at the rational value r \u2208 C+, that is neither a zero nor pole of\nthe functions that are LLD, shows that the corresponding polynomials QN and \u02dcQN\nsatisfy\nQN(r + 1) \u2212 \u02dcQN(r + 1) = a \u2208 Z\nThen, using Proposition 6.18, this gives\nN\n\ufffd\nk=0\naN\u2212k \u2212 \u02dcaN\u2212k\n\u03c91\u03c92 . . . \u03c9k\n\ufffd(r + 1)[k,\u03c9N]\nk!\n+ AN,k(\u03c91, . . . , \u03c9N, r + 1)\n\ufffd\n= a\n30\nR. P\u00b4EREZ-MARCO\nor, multiplying by \u03c91\u03c92 . . . \u03c9N, we get the algebraic relation\n(a0 \u2212 \u02dca0)(r + 1)[N,\u03c9N]\nN!\n+ . . . + (aN \u2212 \u02dcaN \u2212 a)\u03c91\u03c92 . . . \u03c9N = 0\nwhere the dots part is a polynomial of degre < N in \u03c9N with coe\ufb03cients in Q[\u03c91, . . . , \u03c9N\u22121].\nSince [Q[\u03c91, . . . , \u03c9N] : Q[\u03c91, . . . , \u03c9N\u22121]] \u2265 N + 1 we must have a0 = \u02dca0. Therefore\nwe have g1(s|\u03c91) = \u02dcg1(s|\u03c91). Using the induction hypothesis on N (replacing f by\ng1(s|\u03c91) = \u02dcg1(s|\u03c91)), we then get by induction a1 = \u02dca1,..., aN = \u02dcaN.\n\u25a1\nTo conclude this section, we note that Ruijsenaars (2000, [22]) exploited also the\ndi\ufb00erence equations and their minimal solutions to prove numerous properties of\nBarnes Multiple Gamma functions. Shintani (1976, [25]) extended Barnes approach\nto Multiple Gamma functions to a several variable setting. Friedman and Ruijsenaars\n(2004, [6]) extended Shintani\u2019s Multiple Gamma functions. We can also apply our\nfunctional equation approach to de\ufb01ne these several variables Gamma functions with-\nout Barnes-Hurwitz zeta functions and we will study these functions in a forthcoming\narticle.\nAcknowledgements. I am grateful to Prof. David Bl\u00b4azquez for his comments\nand corrections.\n",
    "Path": "../data/test_pdfs/2101.01291.pdf",
    "sha_256": "fd496ce59b55526328a42c516be3730167bc02a412dff3955908461e528daa1b",
    "language": "en",
    "language_probability": 0.9999950238542844,
    "Authors": "",
    "Title": "",
    "url": "",
    "date": ""
}